(self["webpackChunktest"]=self["webpackChunktest"]||[]).push([[953],{6741:function(e){function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=function(){return[]},t.resolve=t,t.id=6741,e.exports=t},3953:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return Vse}});var r=n(2406),a=(n(6615),n(6252)),s=n(6612);const i=e=>((0,a.dD)("data-v-7f459516"),e=e(),(0,a.Cn)(),e),o={class:"detect-con"},l={class:"detect-tips"},u={class:"video-con"},h={class:"detect-tips"},p=i((()=>(0,a._)("canvas",{id:"myCanvas",width:"343",height:"200",style:{display:"none"}},null,-1))),d=["src"];function c(e,t,n,i,c,f){const m=r.l2;return(0,a.wg)(),(0,a.iD)("div",null,[(0,a.Wm)(m,{placeholder:"",fixed:"",title:"FaceApi Detect","left-arrow":"",onClickLeft:e._routerBack},null,8,["onClickLeft"]),(0,a._)("div",o,[(0,a._)("div",l,(0,s.zw)(c.tipsText),1),(0,a._)("div",u,[(0,a._)("video",{class:(0,s.C_)(["video",c.hasFace?"video-detected":"video-no"]),autoplay:"",playsinline:"",muted:"",ref:"video",onPlay:t[0]||(t[0]=(...e)=>f.onVideoPlay&&f.onVideoPlay(...e))},null,34)]),(0,a._)("div",h,(0,s.zw)(c.gestureArray[c.curGesture]),1),p,(0,a._)("img",{src:c.imgSrc},null,8,d)])])}var f="/index.js",m="/",g=Object.defineProperty,y=(e=>n(6741))(),b=(e,t)=>{for(var n in t)g(e,n,{get:t[n],enumerable:!0})},x={};b(x,{Abs:()=>st,Acos:()=>it,Acosh:()=>ot,AdadeltaOptimizer:()=>Eb,AdagradOptimizer:()=>$b,AdamOptimizer:()=>Ab,AdamaxOptimizer:()=>Rb,Add:()=>lt,AddN:()=>ut,All:()=>ht,Any:()=>pt,ArgMax:()=>dt,ArgMin:()=>ct,Asin:()=>ft,Asinh:()=>mt,Atan:()=>gt,Atan2:()=>bt,Atanh:()=>yt,AvgPool:()=>xt,AvgPool3D:()=>vt,AvgPool3DGrad:()=>kt,AvgPoolGrad:()=>wt,BackendWasm:()=>Ite,BatchMatMul:()=>It,BatchToSpaceND:()=>St,Bincount:()=>Nt,BroadcastArgs:()=>Ct,BroadcastTo:()=>Tt,Callback:()=>MR,CallbackList:()=>AT,Cast:()=>_t,Ceil:()=>Et,ClipByValue:()=>$t,Complex:()=>At,ComplexAbs:()=>Rt,Concat:()=>Ft,Conv2D:()=>Dt,Conv2DBackpropFilter:()=>Mt,Conv2DBackpropInput:()=>Ot,Conv3D:()=>Lt,Conv3DBackpropFilterV2:()=>zt,Conv3DBackpropInputV2:()=>Pt,Cos:()=>Bt,Cosh:()=>Wt,CropAndResize:()=>Gt,Cumprod:()=>Vt,Cumsum:()=>Ut,CustomCallback:()=>DT,DataStorage:()=>Z,DenseBincount:()=>Ht,DepthToSpace:()=>jt,DepthwiseConv2dNative:()=>qt,DepthwiseConv2dNativeBackpropFilter:()=>Kt,DepthwiseConv2dNativeBackpropInput:()=>Xt,Diag:()=>Yt,Dilation2D:()=>Zt,Dilation2DBackpropFilter:()=>Qt,Dilation2DBackpropInput:()=>Jt,ENV:()=>et,EarlyStopping:()=>zR,Einsum:()=>tn,Elu:()=>nn,EluGrad:()=>rn,Environment:()=>Ke,Equal:()=>sn,Erf:()=>an,Exp:()=>on,ExpandDims:()=>ln,Expm1:()=>un,FFT:()=>hn,Fill:()=>pn,FlipLeftRight:()=>dn,Floor:()=>cn,FloorDiv:()=>fn,FromPixels:()=>fa,FusedBatchNorm:()=>mn,FusedConv2D:()=>ya,FusedDepthwiseConv2D:()=>ba,GPGPUContext:()=>Wq,GatherNd:()=>yn,GatherV2:()=>gn,GraphModel:()=>ZD,Greater:()=>bn,GreaterEqual:()=>xn,History:()=>FT,IFFT:()=>vn,Identity:()=>wn,Imag:()=>kn,InputSpec:()=>TN,IsFinite:()=>In,IsInf:()=>Sn,IsNan:()=>Nn,KernelBackend:()=>J,LRN:()=>zn,LRNGrad:()=>Pn,LayerVariable:()=>kN,LayersModel:()=>d_,LeakyRelu:()=>Tn,Less:()=>Cn,LessEqual:()=>_n,LinSpace:()=>En,Log:()=>$n,Log1p:()=>An,LogSoftmax:()=>On,LogicalAnd:()=>Rn,LogicalNot:()=>Fn,LogicalOr:()=>Dn,LogicalXor:()=>Mn,LowerBound:()=>Ln,MathBackendWebGL:()=>xX,Max:()=>Bn,MaxPool:()=>Vn,MaxPool3D:()=>Gn,MaxPool3DGrad:()=>Hn,MaxPoolGrad:()=>Un,MaxPoolWithArgmax:()=>jn,Maximum:()=>Wn,Mean:()=>qn,Min:()=>Kn,Minimum:()=>Xn,MirrorPad:()=>Yn,Mod:()=>Zn,MomentumOptimizer:()=>Db,Multinomial:()=>Jn,Multiply:()=>Qn,Neg:()=>er,NonMaxSuppressionV3:()=>nr,NonMaxSuppressionV4:()=>rr,NonMaxSuppressionV5:()=>ar,NotEqual:()=>tr,OP_SCOPE_SUFFIX:()=>ui,OneHot:()=>ir,OnesLike:()=>sr,Optimizer:()=>_b,OptimizerConstructors:()=>Yx,Pack:()=>or,PadV2:()=>lr,Pool:()=>ur,Pow:()=>hr,Prelu:()=>pr,Prod:()=>dr,RMSPropOptimizer:()=>Mb,RNN:()=>NE,RaggedGather:()=>cr,RaggedRange:()=>fr,RaggedTensorToTensor:()=>mr,Range:()=>gr,Rank:()=>Es,Real:()=>yr,RealDiv:()=>en,Reciprocal:()=>br,Reduction:()=>My,Relu:()=>xr,Relu6:()=>Nr,Reshape:()=>wr,ResizeBilinear:()=>Ir,ResizeBilinearGrad:()=>Sr,ResizeNearestNeighbor:()=>vr,ResizeNearestNeighborGrad:()=>kr,Reverse:()=>Tr,RotateWithOffset:()=>ma,Round:()=>Cr,Rsqrt:()=>_r,SGDOptimizer:()=>Fb,ScatterNd:()=>Er,SearchSorted:()=>$r,Select:()=>Ar,Selu:()=>Rr,Sequential:()=>b_,Sigmoid:()=>Lr,Sign:()=>Or,Sin:()=>Dr,Sinh:()=>Mr,Slice:()=>Fr,Softmax:()=>Ur,Softplus:()=>zr,SpaceToBatchND:()=>Wr,SparseFillEmptyRows:()=>Gr,SparseReshape:()=>Hr,SparseSegmentMean:()=>jr,SparseSegmentSum:()=>qr,SparseToDense:()=>Kr,SplitV:()=>Vr,Sqrt:()=>Pr,Square:()=>Yr,SquaredDifference:()=>Xr,Step:()=>ca,StridedSlice:()=>Zr,StringNGrams:()=>Jr,StringSplit:()=>Qr,StringToHashBucketFast:()=>ea,Sub:()=>ta,Sum:()=>Br,SymbolicTensor:()=>CN,Tan:()=>na,Tanh:()=>ra,Tensor:()=>Ts,TensorBuffer:()=>ws,Tile:()=>aa,TopK:()=>sa,Transform:()=>ia,Transpose:()=>oa,Unique:()=>la,Unpack:()=>ua,UnsortedSegmentSum:()=>ha,UpperBound:()=>pa,Variable:()=>_s,ZerosLike:()=>da,_FusedMatMul:()=>ga,abs:()=>ll,acos:()=>hl,acosh:()=>dl,add:()=>el,addN:()=>fl,all:()=>gl,any:()=>bl,argMax:()=>wl,argMin:()=>kl,asin:()=>Sl,asinh:()=>Tl,atan:()=>_l,atan2:()=>$l,atanh:()=>Rl,avgPool:()=>tu,avgPool3d:()=>ru,backend:()=>Zo,backend_util:()=>tw,basicLSTMCell:()=>mu,batchNorm:()=>wu,batchNorm2d:()=>ku,batchNorm3d:()=>Su,batchNorm4d:()=>Tu,batchToSpaceND:()=>yu,bincount:()=>_u,booleanMaskAsync:()=>Km,broadcastArgs:()=>$u,broadcastTo:()=>Ru,broadcast_util:()=>Sh,browser:()=>yx,buffer:()=>No,callbacks:()=>VR,cast:()=>Co,ceil:()=>Du,clipByValue:()=>Lu,clone:()=>Eo,complex:()=>di,concat:()=>su,concat1d:()=>Pu,concat2d:()=>Wu,concat3d:()=>Uu,concat4d:()=>Hu,constraints:()=>KN,conv1d:()=>Xu,conv2d:()=>qu,conv2dTranspose:()=>Qu,conv3d:()=>th,conv3dTranspose:()=>sh,copyRegisteredKernels:()=>$a,cos:()=>oh,cosh:()=>uh,cosineWindow:()=>fg,cumprod:()=>ph,cumsum:()=>ch,customGrad:()=>id,data:()=>nM,denseBincount:()=>mh,deprecationWarn:()=>Mo,depthToSpace:()=>yh,depthwiseConv2d:()=>xh,deregisterOp:()=>qR,device_util:()=>Js,diag:()=>vh,dilation2d:()=>Ih,disableDeprecationWarnings:()=>Do,dispose:()=>Wo,disposeVariables:()=>Oo,div:()=>al,divNoNan:()=>Mh,dot:()=>Lh,dropout:()=>dg,einsum:()=>Ph,elu:()=>Wh,enableDebugMode:()=>Fo,enableProdMode:()=>Ro,enclosingPowerOfTwo:()=>cg,engine:()=>Lo,env:()=>Je,equal:()=>Eh,erf:()=>Uh,euclideanNorm:()=>mp,exp:()=>yp,expandDims:()=>xp,expm1:()=>vp,eye:()=>Np,fft:()=>sm,fill:()=>Mu,findBackend:()=>Ko,findBackendFactory:()=>Xo,floor:()=>Cp,floorDiv:()=>nl,forceHalfFloat:()=>kX,fused:()=>yg,gather:()=>Ep,gatherND:()=>ug,gather_util:()=>Tx,getBackend:()=>jo,getGradient:()=>Sa,getKernel:()=>Ia,getKernelsForBackend:()=>Na,getThreadsCount:()=>Pte,gpgpu_util:()=>bq,grad:()=>td,grads:()=>nd,greater:()=>Ap,greaterEqual:()=>Fp,ifft:()=>om,imag:()=>Mp,image:()=>xb,inTopKAsync:()=>gg,initializers:()=>uT,input:()=>v_,io:()=>zb,irfft:()=>um,isFinite:()=>Lp,isInf:()=>Pp,isNaN:()=>Wp,keep:()=>Vo,kernel_impls:()=>ov,layers:()=>TT,leakyRelu:()=>Up,less:()=>Hp,lessEqual:()=>qp,linalg:()=>wb,linspace:()=>Kp,loadGraphModel:()=>JD,loadGraphModelSync:()=>QD,loadLayersModel:()=>m_,localResponseNormalization:()=>Yp,log:()=>Jp,log1p:()=>ed,logSigmoid:()=>cd,logSoftmax:()=>yd,logSumExp:()=>xd,logicalAnd:()=>vd,logicalNot:()=>Id,logicalOr:()=>Nd,logicalXor:()=>Cd,losses:()=>vb,lowerBound:()=>Ad,matMul:()=>ou,math:()=>cx,max:()=>Qh,maxPool:()=>Fd,maxPool3d:()=>Md,maxPoolWithArgmax:()=>Ld,maximum:()=>Pd,mean:()=>Wd,memory:()=>zo,meshgrid:()=>Gd,metrics:()=>fR,min:()=>tp,minimum:()=>jd,mirrorPad:()=>Kd,mod:()=>Yd,model:()=>x_,models:()=>$R,moments:()=>Jd,movingAverage:()=>Jm,mul:()=>il,multiRNNCell:()=>ec,multinomial:()=>nc,neg:()=>ud,nextFrame:()=>Qx,norm:()=>cp,notEqual:()=>ac,oneHot:()=>ic,ones:()=>Ud,onesLike:()=>lc,op:()=>hi,outerProduct:()=>hc,pad:()=>dc,pad1d:()=>fc,pad2d:()=>gc,pad3d:()=>bc,pad4d:()=>wc,pool:()=>Tc,pow:()=>rp,prelu:()=>_c,print:()=>$o,prod:()=>$c,profile:()=>Po,raggedGather:()=>Rc,raggedRange:()=>Dc,raggedTensorToTensor:()=>Oc,rand:()=>zc,randomGamma:()=>sf,randomNormal:()=>lf,randomStandardNormal:()=>hf,randomUniform:()=>df,range:()=>cf,ready:()=>Ho,real:()=>mf,reciprocal:()=>yf,registerBackend:()=>Yo,registerCallbackConstructor:()=>k_,registerGradient:()=>Ca,registerKernel:()=>Ta,registerOp:()=>HR,regularizers:()=>AR,relu:()=>xf,relu6:()=>vf,removeBackend:()=>qo,reshape:()=>Ql,reverse:()=>If,reverse1d:()=>Nf,reverse2d:()=>Cf,reverse3d:()=>Ef,reverse4d:()=>Af,rfft:()=>cm,round:()=>Ff,rsqrt:()=>Mf,scalar:()=>ap,scatterND:()=>ag,scatter_util:()=>Qm,searchSorted:()=>$d,selu:()=>Lf,separableConv2d:()=>Pf,sequential:()=>w_,serialization:()=>Sb,setBackend:()=>Go,setPlatform:()=>Jo,setThreadsCount:()=>zte,setWasmPath:()=>Dte,setWasmPaths:()=>Mte,setWebGLContext:()=>KG,setdiff1dAsync:()=>Wf,sigmoid:()=>uu,sign:()=>Uf,signal:()=>bb,sin:()=>Hf,sinh:()=>qf,slice:()=>pu,slice1d:()=>Xf,slice2d:()=>Zf,slice3d:()=>Qf,slice4d:()=>tm,slice_util:()=>_x,softmax:()=>rm,softplus:()=>pd,spaceToBatchND:()=>kc,sparse:()=>kb,sparseToDense:()=>og,spectral:()=>yb,split:()=>pm,sqrt:()=>ip,square:()=>lp,squaredDifference:()=>mm,squeeze:()=>ym,stack:()=>xm,step:()=>vm,stridedSlice:()=>Im,string:()=>Ib,sub:()=>md,sum:()=>hp,sumOutType:()=>Ls,tan:()=>Nm,tanh:()=>cu,tensor:()=>fi,tensor1d:()=>Tm,tensor2d:()=>Cm,tensor3d:()=>_m,tensor4d:()=>Em,tensor5d:()=>$m,tensor6d:()=>Am,tensor_util:()=>Ds,test_util:()=>Bc,tidy:()=>Bo,tile:()=>Ip,time:()=>Uo,topk:()=>Fm,train:()=>Zx,transpose:()=>Ym,truncatedNormal:()=>Mm,unique:()=>Lm,unregisterGradient:()=>Ea,unregisterKernel:()=>_a,unsortedSegmentSum:()=>Pm,unstack:()=>Wm,upcastType:()=>Os,upperBound:()=>Vm,util:()=>Ra,valueAndGrad:()=>rd,valueAndGrads:()=>ad,variable:()=>Um,variableGrads:()=>sd,version:()=>qte,version_converter:()=>tM,version_core:()=>Xx,version_layers:()=>OC,version_wasm:()=>Bte,version_webgl:()=>vX,webgl:()=>IX,webgl_util:()=>VG,where:()=>Ah,whereAsync:()=>jm,zeros:()=>Vd,zerosLike:()=>Fh});var w=Object.create,v=Object.defineProperty,k=Object.getOwnPropertyDescriptor,I=Object.getOwnPropertyNames,S=Object.getPrototypeOf,N=Object.prototype.hasOwnProperty,T=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),C=(e,t)=>{for(var n in t)v(e,n,{get:t[n],enumerable:!0})},_=(e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let a of I(t))!N.call(e,a)&&a!==n&&v(e,a,{get:()=>t[a],enumerable:!(r=k(t,a))||r.enumerable});return e},E=(e,t,n)=>(n=null!=e?w(S(e)):{},_(!t&&e&&e.__esModule?n:v(n,"default",{value:e,enumerable:!0}),e)),$=T(((e,t)=>{t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(_){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(e>>>=0,(a=0<=e&&e<256)&&(r=i[e],r)?r:(n=u(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n)):(e|=0,(a=-128<=e&&e<128)&&(r=s[e],r)?r:(n=u(e,e<0?-1:0,!1),a&&(s[e]=n),n))}function l(e,t){if(isNaN(e))return t?w:x;if(t){if(e<0)return w;if(e>=g)return N}else{if(e<=-y)return T;if(e+1>=y)return S}return e<0?l(-e,t).neg():u(e%m|0,e/m|0,t)}function u(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=l,r.fromBits=u;var h=Math.pow;function p(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return x;if("number"==typeof t?(n=t,t=!1):t=!!t,n=n||10,n<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return p(e.substring(1),t,n).neg();for(var a=l(h(n,8)),s=x,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+o),n);if(o<8){var d=l(h(n,o));s=s.mul(d).add(l(u))}else s=s.mul(a),s=s.add(l(u))}return s.unsigned=t,s}function d(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?p(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=p,r.fromValue=d;var c=65536,f=1<<24,m=c*c,g=m*m,y=g/2,b=o(f),x=o(0);r.ZERO=x;var w=o(0,!0);r.UZERO=w;var v=o(1);r.ONE=v;var k=o(1,!0);r.UONE=k;var I=o(-1);r.NEG_ONE=I;var S=u(-1,2147483647,!1);r.MAX_VALUE=S;var N=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=N;var T=u(0,-2147483648,!1);r.MIN_VALUE=T;var C=r.prototype;C.toInt=function(){return this.unsigned?this.low>>>0:this.low},C.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},C.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(T)){var t=l(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=l(h(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),u=s.sub(o.mul(a)).toInt()>>>0,p=u.toString(e);if(s=o,s.isZero())return p+i;for(;p.length<6;)p="0"+p;i=""+p+i}},C.getHighBits=function(){return this.high},C.getHighBitsUnsigned=function(){return this.high>>>0},C.getLowBits=function(){return this.low},C.getLowBitsUnsigned=function(){return this.low>>>0},C.getNumBitsAbs=function(){if(this.isNegative())return this.eq(T)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},C.isZero=function(){return 0===this.high&&0===this.low},C.eqz=C.isZero,C.isNegative=function(){return!this.unsigned&&this.high<0},C.isPositive=function(){return this.unsigned||this.high>=0},C.isOdd=function(){return 1===(1&this.low)},C.isEven=function(){return 0===(1&this.low)},C.equals=function(e){return a(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},C.eq=C.equals,C.notEquals=function(e){return!this.eq(e)},C.neq=C.notEquals,C.ne=C.notEquals,C.lessThan=function(e){return this.comp(e)<0},C.lt=C.lessThan,C.lessThanOrEqual=function(e){return this.comp(e)<=0},C.lte=C.lessThanOrEqual,C.le=C.lessThanOrEqual,C.greaterThan=function(e){return this.comp(e)>0},C.gt=C.greaterThan,C.greaterThanOrEqual=function(e){return this.comp(e)>=0},C.gte=C.greaterThanOrEqual,C.ge=C.greaterThanOrEqual,C.compare=function(e){if(a(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},C.comp=C.compare,C.negate=function(){return!this.unsigned&&this.eq(T)?T:this.not().add(v)},C.neg=C.negate,C.add=function(e){a(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,h=65535&e.low,p=0,c=0,f=0,m=0;return m+=s+h,f+=m>>>16,m&=65535,f+=r+l,c+=f>>>16,f&=65535,c+=n+o,p+=c>>>16,c&=65535,p+=t+i,p&=65535,u(f<<16|m,p<<16|c,this.unsigned)},C.subtract=function(e){return a(e)||(e=d(e)),this.add(e.neg())},C.sub=C.subtract,C.multiply=function(e){if(this.isZero())return x;if(a(e)||(e=d(e)),n){var t=n.mul(this.low,this.high,e.low,e.high);return u(t,n.get_high(),this.unsigned)}if(e.isZero())return x;if(this.eq(T))return e.isOdd()?T:x;if(e.eq(T))return this.isOdd()?T:x;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(b)&&e.lt(b))return l(this.toNumber()*e.toNumber(),this.unsigned);var r=this.high>>>16,s=65535&this.high,i=this.low>>>16,o=65535&this.low,h=e.high>>>16,p=65535&e.high,c=e.low>>>16,f=65535&e.low,m=0,g=0,y=0,w=0;return w+=o*f,y+=w>>>16,w&=65535,y+=i*f,g+=y>>>16,y&=65535,y+=o*c,g+=y>>>16,y&=65535,g+=s*f,m+=g>>>16,g&=65535,g+=i*c,m+=g>>>16,g&=65535,g+=o*p,m+=g>>>16,g&=65535,m+=r*f+s*c+i*p+o*h,m&=65535,u(y<<16|w,m<<16|g,this.unsigned)},C.mul=C.multiply,C.divide=function(e){if(a(e)||(e=d(e)),e.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&-2147483648===this.high&&-1===e.low&&-1===e.high)return this;var t=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high);return u(t,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?w:x;var r,s,i;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return w;if(e.gt(this.shru(1)))return k;i=w}else{if(this.eq(T)){if(e.eq(v)||e.eq(I))return T;if(e.eq(T))return v;var o=this.shr(1);return r=o.div(e).shl(1),r.eq(x)?e.isNegative()?v:I:(s=this.sub(e.mul(r)),i=r.add(s.div(e)),i)}if(e.eq(T))return this.unsigned?w:x;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=x}for(s=this;s.gte(e);){r=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var p=Math.ceil(Math.log(r)/Math.LN2),c=p<=48?1:h(2,p-48),f=l(r),m=f.mul(e);m.isNegative()||m.gt(s);)r-=c,f=l(r,this.unsigned),m=f.mul(e);f.isZero()&&(f=v),i=i.add(f),s=s.sub(m)}return i},C.div=C.divide,C.modulo=function(e){if(a(e)||(e=d(e)),n){var t=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high);return u(t,n.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))},C.mod=C.modulo,C.rem=C.modulo,C.not=function(){return u(~this.low,~this.high,this.unsigned)},C.and=function(e){return a(e)||(e=d(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},C.or=function(e){return a(e)||(e=d(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},C.xor=function(e){return a(e)||(e=d(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},C.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},C.shl=C.shiftLeft,C.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},C.shr=C.shiftRight,C.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),e&=63,0===e)return this;var t=this.high;if(e<32){var n=this.low;return u(n>>>e|t<<32-e,t>>>e,this.unsigned)}return u(32===e?t:t>>>e-32,0,this.unsigned)},C.shru=C.shiftRightUnsigned,C.shr_u=C.shiftRightUnsigned,C.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},C.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},C.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},C.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},C.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}})),A=T((()=>{})),R=T((()=>{})),F=T(((e,t)=>{(function(e,t,n){function r(e){var t=this,n=i();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}function i(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){e+=t.charCodeAt(n);var r=.02519603282416938*e;e=r>>>0,r-=e,r*=e,e=r>>>0,r-=e,e+=4294967296*r}return 2.3283064365386963e-10*(e>>>0)};return t}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s})(0,"object"==typeof t&&t,"function"==typeof define&&define)})),D=T(((e,t)=>{(function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s})(0,"object"==typeof t&&t,"function"==typeof define&&define)})),M=T(((e,t)=>{(function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s})(0,"object"==typeof t&&t,"function"==typeof define&&define)})),O=T(((e,t)=>{(function(e,t,n){function r(e){var t=this;function n(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],e^=e>>>7,n=e^e<<24,e=r[a+1&7],n^=e^e>>>10,e=r[a+3&7],n^=e^e>>>3,e=r[a+4&7],n^=e^e<<7,e=r[a+7&7],e^=e<<13,n^=e^e<<9,r[a]=n,t.i=a+1&7,n},n(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s})(0,"object"==typeof t&&t,"function"==typeof define&&define)})),L=T(((e,t)=>{(function(e,t,n){function r(e){var t=this;function n(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,n=o[127&s]^=r+i,a=0==n?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},n(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s})(0,"object"==typeof t&&t,"function"==typeof define&&define)})),z=T(((e,t)=>{(function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s})(0,"object"==typeof t&&t,"function"==typeof define&&define)})),P=T((()=>{})),B=T(((e,t)=>{(function(e,r,a){var s,i=256,o=6,l=52,u="random",h=a.pow(i,o),p=a.pow(2,l),d=2*p,c=i-1;function f(e,t,n){var s=[];t=1==t?{entropy:!0}:t||{};var l=b(y(t.entropy?[e,w(r)]:null==e?x():e,3),s),c=new m(s),f=function(){for(var e=c.g(o),t=h,n=0;e<p;)e=(e+n)*i,t*=i,n=c.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return f.int32=function(){return 0|c.g(4)},f.quick=function(){return c.g(4)/4294967296},f.double=f,b(w(c.S),r),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,c),e.state=function(){return g(c,{})}),n?(a[u]=e,t):e})(f,l,"global"in t?t.global:this==a,t.state)}function m(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function y(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(y(e[n],t-1))}catch(s){}return r.length?r:"string"==a?e:e+"\0"}function b(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return w(t)}function x(){try{var t;return s&&(t=s.randomBytes)?t=t(i):(t=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(t)),w(t)}catch(o){var n=e.navigator,a=n&&n.plugins;return[+new Date,e,a,e.screen,w(r)]}}function w(e){return String.fromCharCode.apply(0,e)}if(b(a.random(),r),"object"==typeof t&&t.exports){t.exports=f;try{s=P()}catch(v){}}else"function"==typeof define&&n.amdO?define((function(){return f})):a["seed"+u]=f})("undefined"!=typeof self?self:e,[],Math)})),W=T(((e,t)=>{var n=F(),r=D(),a=M(),s=O(),i=L(),o=z(),l=B();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l})),V=T((()=>{})),U=T((()=>{})),G=T((()=>{})),H=T((()=>{})),j=T((()=>{})),q=T((()=>{})),K=T(((e,t)=>{var r=(()=>{var e="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0;return e=e||f,function(t){function r(){return D.buffer!=P&&te(D.buffer),B}function a(){return D.buffer!=P&&te(D.buffer),W}function s(){return D.buffer!=P&&te(D.buffer),V}function i(){return D.buffer!=P&&te(D.buffer),K}function o(){return D.buffer!=P&&te(D.buffer),X}t=t||{};var l,u,h,p="undefined"!=typeof t?t:{};p.ready=new Promise((function(e,t){l=e,u=t})),"undefined"!=typeof process&&process.listeners&&(h={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var d,c,f,g=Object.assign({},p),y=[],b=(e,t)=>{throw t},x="object"==typeof window,w="function"==typeof importScripts,v="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,k=p.ENVIRONMENT_IS_PTHREAD||!1,I="";function S(e){return p.locateFile?p.locateFile(e,I):I+e}function N(e){e instanceof _e||A("exiting due to exception: "+e)}if(v){var T=U(),C=G();let e;I=w?C.dirname(I)+"/":m+"/",d=(e,t)=>(e=Ie(e)?new URL(e):C.normalize(e),T.readFileSync(e,t?void 0:"utf8")),f=e=>{var t=d(e,!0);return t.buffer||(t=new Uint8Array(t)),t},c=(e,t,n)=>{e=Ie(e)?new URL(e):C.normalize(e),T.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),y=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof _e))throw e})),process.on("unhandledRejection",(function(e){throw e})),b=(e,t)=>{if(oe())throw process.exitCode=e,t;N(t),process.exit(e)},p.inspect=function(){return"[Emscripten Module object]"};try{e=H()}catch(Ut){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),Ut}n.g.Worker=e.Worker}else(x||w)&&(w?I=self.location.href:"undefined"!=typeof document&&document.currentScript&&(I=document.currentScript.src),"undefined"!=typeof e&&e&&(I=e),I=0!==I.indexOf("blob:")?I.substr(0,I.replace(/[?#].*/,"").lastIndexOf("/")+1):"",v||(d=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},w&&(f=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),c=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}),e=>document.title=e);v&&"undefined"==typeof performance&&(n.g.performance=j().performance);var _=console.log.bind(console),E=console.warn.bind(console);v&&(_=e=>T.writeSync(1,e+"\n"),E=e=>T.writeSync(2,e+"\n"));var $=p.print||_,A=p.printErr||E;Object.assign(p,g),g=null,p.arguments&&(y=p.arguments),p.thisProgram&&p.thisProgram,p.quit&&(b=p.quit);var R;Atomics.load,Atomics.store,Atomics.compareExchange;p.wasmBinary&&(R=p.wasmBinary);var F=p.noExitRuntime||!0;"object"!=typeof WebAssembly&&xe("no native wasm support detected");var D,M,O,L=!1;function z(e,t){e||xe(t)}var P,B,W,V,K,X,Y="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function Z(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.buffer&&Y)return Y.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,a):e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if(i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++],i<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function J(e,t){return e?Z(a(),e,t):""}function Q(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343){var l=e.charCodeAt(++i);o=65536+((1023&o)<<10)|1023&l}if(o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function ee(e,t,n){return Q(e,a(),t,n)}function te(e){P=e,p.HEAP8=B=new Int8Array(e),p.HEAP16=new Int16Array(e),p.HEAP32=V=new Int32Array(e),p.HEAPU8=W=new Uint8Array(e),p.HEAPU16=new Uint16Array(e),p.HEAPU32=K=new Uint32Array(e),p.HEAPF32=new Float32Array(e),p.HEAPF64=X=new Float64Array(e)}k&&(P=p.buffer);var ne=p.INITIAL_MEMORY||16777216;if(k)D=p.wasmMemory,P=p.buffer;else if(p.wasmMemory)D=p.wasmMemory;else if(D=new WebAssembly.Memory({initial:ne/65536,maximum:32768,shared:!0}),!(D.buffer instanceof SharedArrayBuffer))throw A("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),v&&A("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");D&&(P=D.buffer),ne=P.byteLength,te(P);var re,ae=[],se=[],ie=[];function oe(){return F}function le(){if(p.preRun)for("function"==typeof p.preRun&&(p.preRun=[p.preRun]);p.preRun.length;)pe(p.preRun.shift());ze(ae)}function ue(){!0,!k&&ze(se)}function he(){if(!k){if(p.postRun)for("function"==typeof p.postRun&&(p.postRun=[p.postRun]);p.postRun.length;)ce(p.postRun.shift());ze(ie)}}function pe(e){ae.unshift(e)}function de(e){se.unshift(e)}function ce(e){ie.unshift(e)}var fe=0,me=null,ge=null;function ye(e){fe++,p.monitorRunDependencies&&p.monitorRunDependencies(fe)}function be(e){if(fe--,p.monitorRunDependencies&&p.monitorRunDependencies(fe),0==fe&&(null!==me&&(clearInterval(me),me=null),ge)){var t=ge;ge=null,t()}}function xe(e){p.onAbort&&p.onAbort(e),e="Aborted("+e+")",A(e),L=!0,O=1,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw u(t),t}var we,ve="data:application/octet-stream;base64,";function ke(e){return e.startsWith(ve)}function Ie(e){return e.startsWith("file://")}function Se(e){try{if(e==we&&R)return new Uint8Array(R);if(f)return f(e);throw"both async and sync fetching of the wasm failed"}catch(Ut){xe(Ut)}}function Ne(){if(!R&&(x||w)){if("function"==typeof fetch&&!Ie(we))return fetch(we,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+we+"'";return e.arrayBuffer()})).catch((function(){return Se(we)}));if(c)return new Promise((function(e,t){c(we,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return Se(we)}))}function Te(){var e={env:$t,wasi_snapshot_preview1:$t};function t(e,t){var n=e.exports;if(p.asm=n,Ge(p.asm._emscripten_tls_init),re=p.asm.__indirect_function_table,de(p.asm.__wasm_call_ctors),M=t,!k){var r=Le.unusedWorkers.length;Le.unusedWorkers.forEach((function(e){Le.loadWasmModuleToWorker(e,(function(){--r||be("wasm-instantiate")}))}))}}function n(e){t(e.instance,e.module)}function r(t){return Ne().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){A("failed to asynchronously prepare wasm: "+e),xe(e)}))}function a(){return R||"function"!=typeof WebAssembly.instantiateStreaming||ke(we)||Ie(we)||v||"function"!=typeof fetch?r(n):fetch(we,{credentials:"same-origin"}).then((function(t){var a=WebAssembly.instantiateStreaming(t,e);return a.then(n,(function(e){return A("wasm streaming compile failed: "+e),A("falling back to ArrayBuffer instantiation"),r(n)}))}))}if(k||ye("wasm-instantiate"),p.instantiateWasm)try{var s=p.instantiateWasm(e,t);return s}catch(i){A("Module.instantiateWasm callback failed with error: "+i),u(i)}return a().catch(u),{}}we="tfjs-backend-wasm-threaded-simd.wasm",ke(we)||(we=S(we));var Ce={};function _e(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function Ee(e){var t=Le.pthreads[e];delete Le.pthreads[e],t.terminate(),Mt(e),Le.runningWorkers.splice(Le.runningWorkers.indexOf(t),1),t.pthread_ptr=0}function $e(e){var t=Le.pthreads[e];t.postMessage({cmd:"cancel"})}function Ae(e){var t=Le.pthreads[e];z(t),Le.returnWorkerToPool(t)}function Re(e){var t=Le.getNewWorker();if(!t)return 6;Le.runningWorkers.push(t),Le.pthreads[e.pthread_ptr]=t,t.pthread_ptr=e.pthread_ptr;var n={cmd:"run",start_routine:e.startRoutine,arg:e.arg,pthread_ptr:e.pthread_ptr};return t.runPthread=()=>{v&&t.ref(),t.postMessage(n,e.transferList),delete t.runPthread},t.loaded&&t.runPthread(),0}function Fe(e){if(k)return pt(1,1,e);O=e,oe()||(Le.terminateAllThreads(),p.onExit&&p.onExit(e),L=!0),b(e,new _e(e))}function De(e,t){if(O=e,!t&&k)throw Be(e),"unwind";Fe(e)}var Me=De;function Oe(e){if(e instanceof _e||"unwind"==e)return O;b(1,e)}var Le={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){k?Le.initWorker():Le.initMainThread()},initMainThread:function(){for(var e=8;e--;)Le.allocateUnusedWorker()},initWorker:function(){F=!1},setExitStatus:function(e){O=e},terminateAllThreads:function(){for(var e of Object.values(Le.pthreads))Le.returnWorkerToPool(e);for(var e of Le.unusedWorkers)e.terminate();Le.unusedWorkers=[]},returnWorkerToPool:function(e){var t=e.pthread_ptr;delete Le.pthreads[t],Le.unusedWorkers.push(e),Le.runningWorkers.splice(Le.runningWorkers.indexOf(e),1),e.pthread_ptr=0,v&&e.unref(),Mt(t)},receiveObjectTransfer:function(e){},threadInitTLS:function(){Le.tlsInitFunctions.forEach((e=>e()))},loadWasmModuleToWorker:function(t,n){t.onmessage=e=>{var r=e.data,a=r.cmd;if(t.pthread_ptr&&(Le.currentProxiedOperationCallerThread=t.pthread_ptr),r.targetThread&&r.targetThread!=At()){var s=Le.pthreads[r.targetThread];return s?s.postMessage(r,r.transferList):A('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Le.currentProxiedOperationCallerThread=void 0)}"processProxyingQueue"===a?Qe(r.queue):"spawnThread"===a?Re(r):"cleanupThread"===a?Ae(r.thread):"killThread"===a?Ee(r.thread):"cancelThread"===a?$e(r.thread):"loaded"===a?(t.loaded=!0,v&&t.unref(),n&&n(t),t.runPthread&&t.runPthread()):"print"===a?$("Thread "+r.threadId+": "+r.text):"printErr"===a?A("Thread "+r.threadId+": "+r.text):"alert"===a?alert("Thread "+r.threadId+": "+r.text):"setimmediate"===r.target?t.postMessage(r):"callHandler"===a?p[r.handler](...r.args):a&&A("worker sent an unknown command "+a),Le.currentProxiedOperationCallerThread=void 0},t.onerror=e=>{var t="worker sent an error!";throw A(t+" "+e.filename+":"+e.lineno+": "+e.message),e},v&&(t.on("message",(function(e){t.onmessage({data:e})})),t.on("error",(function(e){t.onerror(e)})),t.on("detachedExit",(function(){})));var r=[],a=["onExit","onAbort","print","printErr"];for(var s of a)p.hasOwnProperty(s)&&r.push(s);t.postMessage({cmd:"load",handlers:r,urlOrBlob:p.mainScriptUrlOrBlob||e,wasmMemory:D,wasmModule:M})},allocateUnusedWorker:function(){var e,t=S("tfjs-backend-wasm-threaded-simd.worker.js");e=new Worker(t),Le.unusedWorkers.push(e)},getNewWorker:function(){return 0==Le.unusedWorkers.length&&(Le.allocateUnusedWorker(),Le.loadWasmModuleToWorker(Le.unusedWorkers[0])),Le.unusedWorkers.pop()}};function ze(e){for(;e.length>0;)e.shift()(p)}function Pe(){var e=At(),t=s()[e+52>>2],n=s()[e+56>>2],r=t-n;Lt(t,r),Pt(t)}function Be(e){if(k)return pt(2,0,e);try{Me(e)}catch(Ut){Oe(Ut)}}p.PThread=Le,p.establishStackSpace=Pe;var We=[];function Ve(e){var t=We[e];return t||(e>=We.length&&(We.length=e+1),We[e]=t=re.get(e)),t}function Ue(e,t){var n=Ve(e)(t);oe()?Le.setExitStatus(n):Ot(n)}function Ge(e){Le.tlsInitFunctions.push(e)}function He(e){Rt(e,!w,1,!x),Le.threadInitTLS()}function je(e){k?postMessage({cmd:"cleanupThread",thread:e}):Ae(e)}function qe(e,t,n,r){return k?pt(3,1,e,t,n,r):Ke(e,t,n,r)}function Ke(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return A("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[],s=0;if(k&&(0===a.length||s))return qe(e,t,n,r);if(s)return s;var i={startRoutine:n,pthread_ptr:e,arg:r,transferList:a};return k?(i.cmd="spawnThread",postMessage(i,a),0):Re(i)}function Xe(){return 65536}p.invokeEntryPoint=Ue;var Ye,Ze=!0;function Je(){return Ze}function Qe(e){Atomics.store(s(),e>>2,1),At()&&Dt(e),Atomics.compareExchange(s(),e>>2,1,0)}function et(e,t,n,r){if(e==t)setTimeout((()=>Qe(r)));else if(k)postMessage({targetThread:e,cmd:"processProxyingQueue",queue:r});else{var a=Le.pthreads[e];if(!a)return;a.postMessage({cmd:"processProxyingQueue",queue:r})}return 1}function tt(e,t,n){return-1}function nt(){xe("")}function rt(e){rt.shown||(rt.shown={}),rt.shown[e]||(rt.shown[e]=1,v&&(e="warning: "+e),A(e))}function at(){v||w||rt("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function st(){return Date.now()}function it(){return 2147483648}function ot(){return it()}function lt(e,t,n){a().copyWithin(e,t,t+n)}function ut(){return v?q().cpus().length:navigator.hardwareConcurrency}function ht(e){var t=zt(),n=e();return Pt(t),n}function pt(e,t){var n=arguments.length-2,r=arguments;return ht((()=>{for(var a=n,s=Bt(8*a),i=s>>3,l=0;l<n;l++){var u=r[2+l];o()[i+l]=u}return Ft(e,a,s,t)}))}p.executeNotifiedProxyingQueue=Qe,Ye=v?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.timeOrigin+performance.now();var dt=[];function ct(e,t,n){dt.length=t;for(var r=n>>3,a=0;a<t;a++)dt[a]=o()[r+a];var s=e<0,i=s?Ce[-e-1]:Et[e];return i.apply(null,dt)}function ft(e){try{return D.grow(e-P.byteLength+65535>>>16),te(D.buffer),1}catch(Ut){}}function mt(e){var t=a().length;if(e>>>=0,e<=t)return!1;var n=it();if(e>n)return!1;let r=(e,t)=>e+(t-e%t)%t;for(var s=1;s<=4;s*=2){var i=t*(1+.2/s);i=Math.min(i,e+100663296);var o=Math.min(n,r(Math.max(e,i),65536)),l=ft(o);if(l)return!0}return!1}function gt(){throw"unwind"}function yt(e){return k?pt(4,1,e):52}function bt(e,t,n,r,a){return k?pt(5,1,e,t,n,r,a):70}var xt=[null,[],[]];function wt(e,t){var n=xt[e];0===t||10===t?((1===e?$:A)(Z(n,0)),n.length=0):n.push(t)}function vt(e,t,n,r){if(k)return pt(6,1,e,t,n,r);for(var s=0,o=0;o<n;o++){var l=i()[t>>2],u=i()[t+4>>2];t+=8;for(var h=0;h<u;h++)wt(e,a()[l+h]);s+=u}return i()[r>>2]=s,0}function kt(e){var t=p["_"+e];return t}function It(e,t){r().set(e,t)}function St(e,t,n,r,a){var s={string:e=>{var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);t=Bt(n),ee(e,t,n)}return t},array:e=>{var t=Bt(e.length);return It(e,t),t}};function i(e){return"string"===t?J(e):"boolean"===t?Boolean(e):e}var o=kt(e),l=[],u=0;if(r)for(var h=0;h<r.length;h++){var p=s[n[h]];p?(0===u&&(u=zt()),l[h]=p(r[h])):l[h]=r[h]}var d=o.apply(null,l);function c(e){return 0!==u&&Pt(u),i(e)}return d=c(d),d}function Nt(e,t,n,r){n=n||[];var a=n.every((e=>"number"===e||"boolean"===e)),s="string"!==t;return s&&a&&!r?kt(e):function(){return St(e,t,n,arguments,r)}}Le.init();var Tt,Ct,_t,Et=[null,Fe,Be,qe,yt,bt,vt],$t={__emscripten_init_main_thread_js:He,__emscripten_thread_cleanup:je,__pthread_create_js:Ke,_emscripten_default_pthread_stack_size:Xe,_emscripten_get_now_is_monotonic:Je,_emscripten_notify_task_queue:et,_emscripten_set_offscreencanvas_size:tt,abort:nt,emscripten_check_blocking_allowed:at,emscripten_date_now:st,emscripten_get_heap_max:ot,emscripten_get_now:Ye,emscripten_memcpy_big:lt,emscripten_num_logical_cores:ut,emscripten_receive_on_main_thread_js:ct,emscripten_resize_heap:mt,emscripten_unwind_to_js_event_loop:gt,exit:Me,fd_close:yt,fd_seek:bt,fd_write:vt,memory:D||p.wasmMemory},At=(Te(),p.___wasm_call_ctors=function(){return(p.___wasm_call_ctors=p.asm.__wasm_call_ctors).apply(null,arguments)},p._init=function(){return(p._init=p.asm.init).apply(null,arguments)},p._init_with_threads_count=function(){return(p._init_with_threads_count=p.asm.init_with_threads_count).apply(null,arguments)},p._get_threads_count=function(){return(p._get_threads_count=p.asm.get_threads_count).apply(null,arguments)},p._register_tensor=function(){return(p._register_tensor=p.asm.register_tensor).apply(null,arguments)},p._dispose_data=function(){return(p._dispose_data=p.asm.dispose_data).apply(null,arguments)},p._dispose=function(){return(p._dispose=p.asm.dispose).apply(null,arguments)},p._Abs=function(){return(p._Abs=p.asm.Abs).apply(null,arguments)},p._Add=function(){return(p._Add=p.asm.Add).apply(null,arguments)},p._AddN=function(){return(p._AddN=p.asm.AddN).apply(null,arguments)},p._All=function(){return(p._All=p.asm.All).apply(null,arguments)},p._Any=function(){return(p._Any=p.asm.Any).apply(null,arguments)},p._ArgMax=function(){return(p._ArgMax=p.asm.ArgMax).apply(null,arguments)},p._AvgPool=function(){return(p._AvgPool=p.asm.AvgPool).apply(null,arguments)},p._BatchMatMul=function(){return(p._BatchMatMul=p.asm.BatchMatMul).apply(null,arguments)},p._Ceil=function(){return(p._Ceil=p.asm.Ceil).apply(null,arguments)},p._ClipByValue=function(){return(p._ClipByValue=p.asm.ClipByValue).apply(null,arguments)},p._Conv2D=function(){return(p._Conv2D=p.asm.Conv2D).apply(null,arguments)},p._Conv2DBackpropInput=function(){return(p._Conv2DBackpropInput=p.asm.Conv2DBackpropInput).apply(null,arguments)},p._Cos=function(){return(p._Cos=p.asm.Cos).apply(null,arguments)},p._Cosh=function(){return(p._Cosh=p.asm.Cosh).apply(null,arguments)},p._CropAndResize=function(){return(p._CropAndResize=p.asm.CropAndResize).apply(null,arguments)},p._Cumprod=function(){return(p._Cumprod=p.asm.Cumprod).apply(null,arguments)},p._Cumsum=function(){return(p._Cumsum=p.asm.Cumsum).apply(null,arguments)},p._DepthToSpace=function(){return(p._DepthToSpace=p.asm.DepthToSpace).apply(null,arguments)},p._DepthwiseConv2dNative=function(){return(p._DepthwiseConv2dNative=p.asm.DepthwiseConv2dNative).apply(null,arguments)},p._Elu=function(){return(p._Elu=p.asm.Elu).apply(null,arguments)},p._Equal=function(){return(p._Equal=p.asm.Equal).apply(null,arguments)},p._Exp=function(){return(p._Exp=p.asm.Exp).apply(null,arguments)},p._FlipLeftRight=function(){return(p._FlipLeftRight=p.asm.FlipLeftRight).apply(null,arguments)},p._Floor=function(){return(p._Floor=p.asm.Floor).apply(null,arguments)},p._FloorDiv=function(){return(p._FloorDiv=p.asm.FloorDiv).apply(null,arguments)},p._FusedBatchNorm=function(){return(p._FusedBatchNorm=p.asm.FusedBatchNorm).apply(null,arguments)},p._FusedConv2D=function(){return(p._FusedConv2D=p.asm.FusedConv2D).apply(null,arguments)},p._FusedDepthwiseConv2D=function(){return(p._FusedDepthwiseConv2D=p.asm.FusedDepthwiseConv2D).apply(null,arguments)},p._Gather=function(){return(p._Gather=p.asm.Gather).apply(null,arguments)},p._GatherNd=function(){return(p._GatherNd=p.asm.GatherNd).apply(null,arguments)},p._Greater=function(){return(p._Greater=p.asm.Greater).apply(null,arguments)},p._GreaterEqual=function(){return(p._GreaterEqual=p.asm.GreaterEqual).apply(null,arguments)},p._IsNan=function(){return(p._IsNan=p.asm.IsNan).apply(null,arguments)},p._LeakyRelu=function(){return(p._LeakyRelu=p.asm.LeakyRelu).apply(null,arguments)},p._Less=function(){return(p._Less=p.asm.Less).apply(null,arguments)},p._LessEqual=function(){return(p._LessEqual=p.asm.LessEqual).apply(null,arguments)},p._Log=function(){return(p._Log=p.asm.Log).apply(null,arguments)},p._LogicalAnd=function(){return(p._LogicalAnd=p.asm.LogicalAnd).apply(null,arguments)},p._LogicalNot=function(){return(p._LogicalNot=p.asm.LogicalNot).apply(null,arguments)},p._LogicalOr=function(){return(p._LogicalOr=p.asm.LogicalOr).apply(null,arguments)},p._LogicalXor=function(){return(p._LogicalXor=p.asm.LogicalXor).apply(null,arguments)},p._Max=function(){return(p._Max=p.asm.Max).apply(null,arguments)},p._MaxPool=function(){return(p._MaxPool=p.asm.MaxPool).apply(null,arguments)},p._Maximum=function(){return(p._Maximum=p.asm.Maximum).apply(null,arguments)},p._Mean=function(){return(p._Mean=p.asm.Mean).apply(null,arguments)},p._Min=function(){return(p._Min=p.asm.Min).apply(null,arguments)},p._Minimum=function(){return(p._Minimum=p.asm.Minimum).apply(null,arguments)},p._MirrorPad=function(){return(p._MirrorPad=p.asm.MirrorPad).apply(null,arguments)},p._Multiply=function(){return(p._Multiply=p.asm.Multiply).apply(null,arguments)},p._Neg=function(){return(p._Neg=p.asm.Neg).apply(null,arguments)},p._NonMaxSuppressionV3=function(){return(p._NonMaxSuppressionV3=p.asm.NonMaxSuppressionV3).apply(null,arguments)},p._NonMaxSuppressionV4=function(){return(p._NonMaxSuppressionV4=p.asm.NonMaxSuppressionV4).apply(null,arguments)},p._NonMaxSuppressionV5=function(){return(p._NonMaxSuppressionV5=p.asm.NonMaxSuppressionV5).apply(null,arguments)},p._NotEqual=function(){return(p._NotEqual=p.asm.NotEqual).apply(null,arguments)},p._OneHot=function(){return(p._OneHot=p.asm.OneHot).apply(null,arguments)},p._PadV2=function(){return(p._PadV2=p.asm.PadV2).apply(null,arguments)},p._Pow=function(){return(p._Pow=p.asm.Pow).apply(null,arguments)},p._Prelu=function(){return(p._Prelu=p.asm.Prelu).apply(null,arguments)},p._Prod=function(){return(p._Prod=p.asm.Prod).apply(null,arguments)},p._RealDiv=function(){return(p._RealDiv=p.asm.RealDiv).apply(null,arguments)},p._Reciprocal=function(){return(p._Reciprocal=p.asm.Reciprocal).apply(null,arguments)},p._Relu=function(){return(p._Relu=p.asm.Relu).apply(null,arguments)},p._Relu6=function(){return(p._Relu6=p.asm.Relu6).apply(null,arguments)},p._ResizeBilinear=function(){return(p._ResizeBilinear=p.asm.ResizeBilinear).apply(null,arguments)},p._ResizeNearestNeighbor=function(){return(p._ResizeNearestNeighbor=p.asm.ResizeNearestNeighbor).apply(null,arguments)},p._Reverse=function(){return(p._Reverse=p.asm.Reverse).apply(null,arguments)},p._RotateWithOffset=function(){return(p._RotateWithOffset=p.asm.RotateWithOffset).apply(null,arguments)},p._Round=function(){return(p._Round=p.asm.Round).apply(null,arguments)},p._Rsqrt=function(){return(p._Rsqrt=p.asm.Rsqrt).apply(null,arguments)},p._ScatterNd=function(){return(p._ScatterNd=p.asm.ScatterNd).apply(null,arguments)},p._SelectV2=function(){return(p._SelectV2=p.asm.SelectV2).apply(null,arguments)},p._Sigmoid=function(){return(p._Sigmoid=p.asm.Sigmoid).apply(null,arguments)},p._Sin=function(){return(p._Sin=p.asm.Sin).apply(null,arguments)},p._Softmax=function(){return(p._Softmax=p.asm.Softmax).apply(null,arguments)},p._SparseFillEmptyRows=function(){return(p._SparseFillEmptyRows=p.asm.SparseFillEmptyRows).apply(null,arguments)},p._SparseReshape=function(){return(p._SparseReshape=p.asm.SparseReshape).apply(null,arguments)},p._SparseSegmentReduction=function(){return(p._SparseSegmentReduction=p.asm.SparseSegmentReduction).apply(null,arguments)},p._Sqrt=function(){return(p._Sqrt=p.asm.Sqrt).apply(null,arguments)},p._Square=function(){return(p._Square=p.asm.Square).apply(null,arguments)},p._SquaredDifference=function(){return(p._SquaredDifference=p.asm.SquaredDifference).apply(null,arguments)},p._Step=function(){return(p._Step=p.asm.Step).apply(null,arguments)},p._StridedSlice=function(){return(p._StridedSlice=p.asm.StridedSlice).apply(null,arguments)},p._Sub=function(){return(p._Sub=p.asm.Sub).apply(null,arguments)},p._Sum=function(){return(p._Sum=p.asm.Sum).apply(null,arguments)},p._Tan=function(){return(p._Tan=p.asm.Tan).apply(null,arguments)},p._Tanh=function(){return(p._Tanh=p.asm.Tanh).apply(null,arguments)},p._Tile=function(){return(p._Tile=p.asm.Tile).apply(null,arguments)},p._TopK=function(){return(p._TopK=p.asm.TopK).apply(null,arguments)},p._Transform=function(){return(p._Transform=p.asm.Transform).apply(null,arguments)},p._Transpose=function(){return(p._Transpose=p.asm.Transpose).apply(null,arguments)},p.__FusedMatMul=function(){return(p.__FusedMatMul=p.asm._FusedMatMul).apply(null,arguments)},p._malloc=function(){return(p._malloc=p.asm.malloc).apply(null,arguments)},p._free=function(){return(p._free=p.asm.free).apply(null,arguments)},p.__emscripten_tls_init=function(){return(p.__emscripten_tls_init=p.asm._emscripten_tls_init).apply(null,arguments)},p._pthread_self=function(){return(At=p._pthread_self=p.asm.pthread_self).apply(null,arguments)}),Rt=(p.___errno_location=function(){return(p.___errno_location=p.asm.__errno_location).apply(null,arguments)},p.__emscripten_thread_init=function(){return(Rt=p.__emscripten_thread_init=p.asm._emscripten_thread_init).apply(null,arguments)}),Ft=(p.__emscripten_thread_crashed=function(){return(p.__emscripten_thread_crashed=p.asm._emscripten_thread_crashed).apply(null,arguments)},p._emscripten_main_thread_process_queued_calls=function(){return(p._emscripten_main_thread_process_queued_calls=p.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},p._emscripten_main_browser_thread_id=function(){return(p._emscripten_main_browser_thread_id=p.asm.emscripten_main_browser_thread_id).apply(null,arguments)},p._emscripten_run_in_main_runtime_thread_js=function(){return(Ft=p._emscripten_run_in_main_runtime_thread_js=p.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)}),Dt=(p._emscripten_dispatch_to_thread_=function(){return(p._emscripten_dispatch_to_thread_=p.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},p.__emscripten_proxy_execute_task_queue=function(){return(Dt=p.__emscripten_proxy_execute_task_queue=p.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)}),Mt=p.__emscripten_thread_free_data=function(){return(Mt=p.__emscripten_thread_free_data=p.asm._emscripten_thread_free_data).apply(null,arguments)},Ot=p.__emscripten_thread_exit=function(){return(Ot=p.__emscripten_thread_exit=p.asm._emscripten_thread_exit).apply(null,arguments)},Lt=p._emscripten_stack_set_limits=function(){return(Lt=p._emscripten_stack_set_limits=p.asm.emscripten_stack_set_limits).apply(null,arguments)},zt=p.stackSave=function(){return(zt=p.stackSave=p.asm.stackSave).apply(null,arguments)},Pt=p.stackRestore=function(){return(Pt=p.stackRestore=p.asm.stackRestore).apply(null,arguments)},Bt=p.stackAlloc=function(){return(Bt=p.stackAlloc=p.asm.stackAlloc).apply(null,arguments)};p.dynCall_iijjiiii=function(){return(p.dynCall_iijjiiii=p.asm.dynCall_iijjiiii).apply(null,arguments)},p.dynCall_jiji=function(){return(p.dynCall_jiji=p.asm.dynCall_jiji).apply(null,arguments)};function Wt(e){if(e=e||y,!(fe>0)){if(k)return l(p),ue(),void startWorker(p);le(),fe>0||(p.setStatus?(p.setStatus("Running..."),setTimeout((function(){setTimeout((function(){p.setStatus("")}),1),t()}),1)):t())}function t(){Tt||(Tt=!0,p.calledRun=!0,!L&&(ue(),l(p),p.onRuntimeInitialized&&p.onRuntimeInitialized(),he()))}}if(p.keepRuntimeAlive=oe,p.wasmMemory=D,p.cwrap=Nt,p.ExitStatus=_e,p.PThread=Le,ge=function e(){Tt||Wt(),Tt||(ge=e)},p.preInit)for("function"==typeof p.preInit&&(p.preInit=[p.preInit]);p.preInit.length>0;)p.preInit.pop()();if(Wt(),h&&(Ct={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!h.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!h.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)_t=WasmBackendModule;else{if("undefined"==typeof t)throw new Error("Could not find wasm module in post.js");_t=t}if(Ct){var Vt=_t._dispose;_t._dispose=function(){Vt(),Ct.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Ct.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return t.ready}})();"object"==typeof e&&"object"==typeof t?t.exports=r:"function"==typeof define&&n.amdO?define([],(function(){return r})):"object"==typeof e&&(e.WasmBackendModuleThreadedSimd=r)})),X=T(((e,t)=>{t.exports.wasmWorkerContents='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};'})),Y=T(((e,t)=>{var r=(()=>{var e="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0;return e=e||f,function(t){t=t||{};var n,r,a,s="undefined"!=typeof t?t:{};s.ready=new Promise((function(e,t){n=e,r=t})),"undefined"!=typeof process&&process.listeners&&(a={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i,o,l,u=Object.assign({},s),h=[],p="object"==typeof window,d="function"==typeof importScripts,c="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,f="";function g(e){return s.locateFile?s.locateFile(e,f):f+e}function y(e){e instanceof oe||v("exiting due to exception: "+e)}if(c){var b=U(),x=G();f=d?x.dirname(f)+"/":m+"/",i=(e,t)=>(e=re(e)?new URL(e):x.normalize(e),b.readFileSync(e,t?void 0:"utf8")),l=e=>{var t=i(e,!0);return t.buffer||(t=new Uint8Array(t)),t},o=(e,t,n)=>{e=re(e)?new URL(e):x.normalize(e),b.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),h=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof oe))throw e})),process.on("unhandledRejection",(function(e){throw e})),(e,t)=>{if(P())throw process.exitCode=e,t;y(t),process.exit(e)},s.inspect=function(){return"[Emscripten Module object]"}}else(p||d)&&(d?f=self.location.href:"undefined"!=typeof document&&document.currentScript&&(f=document.currentScript.src),e&&(f=e),f=0!==f.indexOf("blob:")?f.substr(0,f.replace(/[?#].*/,"").lastIndexOf("/")+1):"",i=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},d&&(l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)},e=>document.title=e);var w=s.print||console.log.bind(console),v=s.printErr||console.warn.bind(console);Object.assign(s,u),u=null,s.arguments&&(h=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit;var k;s.wasmBinary&&(k=s.wasmBinary);var I=s.noExitRuntime||!0;"object"!=typeof WebAssembly&&Q("no native wasm support detected");var S,N=!1;var T,C,_,E,$="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function A(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.buffer&&$)return $.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if(i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++],i<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function R(e,t){return e?A(_,e,t):""}function F(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343){var l=e.charCodeAt(++i);o=65536+((1023&o)<<10)|1023&l}if(o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function D(e,t,n){return F(e,_,t,n)}function M(e){T=e,s.HEAP8=C=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=new Int32Array(e),s.HEAPU8=_=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=E=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}s.INITIAL_MEMORY;var O=[],L=[],z=[];function P(){return I}function B(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)H(s.preRun.shift());le(O)}function W(){!0,le(L)}function V(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)q(s.postRun.shift());le(z)}function H(e){O.unshift(e)}function j(e){L.unshift(e)}function q(e){z.unshift(e)}var K=0,X=null,Y=null;function Z(e){K++,s.monitorRunDependencies&&s.monitorRunDependencies(K)}function J(e){if(K--,s.monitorRunDependencies&&s.monitorRunDependencies(K),0==K&&(null!==X&&(clearInterval(X),X=null),Y)){var t=Y;Y=null,t()}}function Q(e){s.onAbort&&s.onAbort(e),e="Aborted("+e+")",v(e),N=!0,1,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw r(t),t}var ee,te="data:application/octet-stream;base64,";function ne(e){return e.startsWith(te)}function re(e){return e.startsWith("file://")}function ae(e){try{if(e==ee&&k)return new Uint8Array(k);if(l)return l(e);throw"both async and sync fetching of the wasm failed"}catch(t){Q(t)}}function se(){if(!k&&(p||d)){if("function"==typeof fetch&&!re(ee))return fetch(ee,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+ee+"'";return e.arrayBuffer()})).catch((function(){return ae(ee)}));if(o)return new Promise((function(e,t){o(ee,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return ae(ee)}))}function ie(){var e={env:Ce,wasi_snapshot_preview1:Ce};function t(e,t){var n=e.exports;s.asm=n,S=s.asm.memory,M(S.buffer),s.asm.__indirect_function_table,j(s.asm.__wasm_call_ctors),J("wasm-instantiate")}function n(e){t(e.instance)}function a(t){return se().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){v("failed to asynchronously prepare wasm: "+e),Q(e)}))}function i(){return k||"function"!=typeof WebAssembly.instantiateStreaming||ne(ee)||re(ee)||c||"function"!=typeof fetch?a(n):fetch(ee,{credentials:"same-origin"}).then((function(t){var r=WebAssembly.instantiateStreaming(t,e);return r.then(n,(function(e){return v("wasm streaming compile failed: "+e),v("falling back to ArrayBuffer instantiation"),a(n)}))}))}if(Z("wasm-instantiate"),s.instantiateWasm)try{var o=s.instantiateWasm(e,t);return o}catch(l){v("Module.instantiateWasm callback failed with error: "+l),r(l)}return i().catch(r),{}}function oe(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function le(e){for(;e.length>0;)e.shift()(s)}function ue(){Q("")}function he(){return 2147483648}function pe(){return he()}function de(e,t,n){_.copyWithin(e,t,t+n)}function ce(e){try{return S.grow(e-T.byteLength+65535>>>16),M(S.buffer),1}catch(t){}}function fe(e){var t=_.length;e>>>=0;var n=he();if(e>n)return!1;let r=(e,t)=>e+(t-e%t)%t;for(var a=1;a<=4;a*=2){var s=t*(1+.2/a);s=Math.min(s,e+100663296);var i=Math.min(n,r(Math.max(e,s),65536)),o=ce(i);if(o)return!0}return!1}ee="tfjs-backend-wasm.wasm",ne(ee)||(ee=g(ee));function me(e){return 52}function ge(e,t,n,r,a){return 70}var ye=[null,[],[]];function be(e,t){var n=ye[e];0===t||10===t?((1===e?w:v)(A(n,0)),n.length=0):n.push(t)}function xe(e,t,n,r){for(var a=0,s=0;s<n;s++){var i=E[t>>2],o=E[t+4>>2];t+=8;for(var l=0;l<o;l++)be(e,_[i+l]);a+=o}return E[r>>2]=a,0}function we(e){var t=s["_"+e];return t}function ve(e,t){C.set(e,t)}function ke(e,t,n,r,a){var s={string:e=>{var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);t=$e(n),D(e,t,n)}return t},array:e=>{var t=$e(e.length);return ve(e,t),t}};function i(e){return"string"===t?R(e):"boolean"===t?Boolean(e):e}var o=we(e),l=[],u=0;if(r)for(var h=0;h<r.length;h++){var p=s[n[h]];p?(0===u&&(u=_e()),l[h]=p(r[h])):l[h]=r[h]}var d=o.apply(null,l);function c(e){return 0!==u&&Ee(u),i(e)}return d=c(d),d}function Ie(e,t,n,r){n=n||[];var a=n.every((e=>"number"===e||"boolean"===e)),s="string"!==t;return s&&a&&!r?we(e):function(){return ke(e,t,n,arguments,r)}}var Se,Ne,Te,Ce={abort:ue,emscripten_get_heap_max:pe,emscripten_memcpy_big:de,emscripten_resize_heap:fe,fd_close:me,fd_seek:ge,fd_write:xe},_e=(ie(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._All=function(){return(s._All=s.asm.All).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.Any).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.Ceil).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.Cosh).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumprod=function(){return(s._Cumprod=s.asm.Cumprod).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.Elu).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._IsNan=function(){return(s._IsNan=s.asm.IsNan).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._LogicalNot=function(){return(s._LogicalNot=s.asm.LogicalNot).apply(null,arguments)},s._LogicalOr=function(){return(s._LogicalOr=s.asm.LogicalOr).apply(null,arguments)},s._LogicalXor=function(){return(s._LogicalXor=s.asm.LogicalXor).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Reciprocal=function(){return(s._Reciprocal=s.asm.Reciprocal).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._ResizeNearestNeighbor=function(){return(s._ResizeNearestNeighbor=s.asm.ResizeNearestNeighbor).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Tan).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Transform).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.___errno_location=function(){return(s.___errno_location=s.asm.__errno_location).apply(null,arguments)},s.stackSave=function(){return(_e=s.stackSave=s.asm.stackSave).apply(null,arguments)}),Ee=s.stackRestore=function(){return(Ee=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},$e=s.stackAlloc=function(){return($e=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)};s.dynCall_iijjiiii=function(){return(s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},s.dynCall_jiji=function(){return(s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)};function Ae(e){function t(){Se||(Se=!0,s.calledRun=!0,!N&&(W(),n(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),V()))}e=e||h,K>0||(B(),K>0)||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),t()}),1)):t())}if(s.cwrap=Ie,Y=function e(){Se||Ae(),Se||(Y=e)},s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();if(Ae(),a&&(Ne={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!a.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!a.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof t)Te=t;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");Te=WasmBackendModuleThreadedSimd}if(Ne){var Re=Te._dispose;Te._dispose=function(){Re(),Ne.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Ne.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return t.ready}})();"object"==typeof e&&"object"==typeof t?t.exports=r:"function"==typeof define&&n.amdO?define([],(function(){return r})):"object"==typeof e&&(e.WasmBackendModule=r)})),Z=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},J=class{refCount(e){return Q("refCount")}incRef(e){return Q("incRef")}timerAvailable(){return!0}time(e){return Q("time")}read(e){return Q("read")}readSync(e){return Q("readSync")}readToGPU(e,t){return Q("readToGPU")}numDataIds(){return Q("numDataIds")}disposeData(e,t){return Q("disposeData")}write(e,t,n){return Q("write")}move(e,t,n,r,a){return Q("move")}createTensorFromGPUData(e,t,n){return Q("createTensorFromGPUData")}memory(){return Q("memory")}floatPrecision(){return Q("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Q("dispose")}};function Q(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function ee(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,ae(e,t,n)}function te(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,ae(e,n,r),ae(t,n,r)}function ne(e,t,n){return Math.max(e,Math.min(t,n))}function re(e){return e%2===0?e:e+1}function ae(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function se(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function ie(e,t){let n=Math.random();return t*n+(1-n)*e}function oe(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function le(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function ue(e,t,n=""){le(ce(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function he(e){le(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function pe(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function de(e){return 0===e.length}function ce(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function fe(e){return e%1===0}function me(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function ge(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ye(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return ee(t),t}function be(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function xe(e,t=(e=>0),n,r){return new Promise(((a,s)=>{let i=0,o=()=>{if(e())return void a();i++;let l=t(i);null!=n&&i>=n?s():null!=r?r(o,l):setTimeout(o,l)};o()}))}function we(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function ve(e,t){let n=t.length;return e=null==e?t.map(((e,t)=>t)):[].concat(e),le(e.every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),le(e.every((e=>fe(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function ke(e,t){let n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:ve(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(null!=s){if(s[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==s[i]||s[i]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),s[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function Ie(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function Se(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function Ne(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function Te(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Ce(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function _e(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Ee(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function $e(e){return"string"==typeof e||e instanceof String}function Ae(e){return"boolean"==typeof e}function Re(e){return"number"==typeof e}function Fe(e){return Array.isArray(e)?Fe(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Re(e)?"float32":$e(e)?"string":Ae(e)?"bool":"float32"}function De(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Me(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function Oe(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Le(e,t,n,r=!1){let a=new Array;if(1===t.length){let s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{let s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=Le(e+t*o,i,n,r)}return a}function ze(e,t,n=!1){if(0===e.length)return t[0];let r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Le(0,e,t,n)}function Pe(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function Be(e,t){let n=We(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function We(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Ve(e,t){let n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return ze(e,new Float32Array(n));if("int32"===t)return ze(e,new Int32Array(n));if("bool"===t)return ze(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Ue(e){e.forEach((t=>{le(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Ge(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function He(e,t,n){if(0===t)return[];if(1===t)return[e];let r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function je(e){return e&&e.then&&"function"==typeof e.then}var qe="tfjsflags",Ke=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Xe,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Je().getBool("IS_TEST")||Je().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];Je().getBool("IS_TEST")||Je().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(je(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"==typeof this.global||"undefined"==typeof this.global.location||"undefined"==typeof this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);qe in e&&e[qe].split(",").forEach((e=>{let[t,n]=e.split(":");this.urlFlags[t]=Ze(t,n)}))}};function Xe(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(Ye(t,n[0],n[1]),n.join("=")))),t}function Ye(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function Ze(e,t){if(t=t.toLowerCase(),"true"===t||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function Je(){return et}var Qe,et=null;function tt(e){et=e}function nt(){if(null==Qe){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Qe=e}return Qe}function rt(){let e=nt();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}function at(e,t){let n=rt();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var st="Abs",it="Acos",ot="Acosh",lt="Add",ut="AddN",ht="All",pt="Any",dt="ArgMax",ct="ArgMin",ft="Asin",mt="Asinh",gt="Atan",yt="Atanh",bt="Atan2",xt="AvgPool",wt="AvgPoolGrad",vt="AvgPool3D",kt="AvgPool3DGrad",It="BatchMatMul",St="BatchToSpaceND",Nt="Bincount",Tt="BroadcastTo",Ct="BroadcastArgs",_t="Cast",Et="Ceil",$t="ClipByValue",At="Complex",Rt="ComplexAbs",Ft="Concat",Dt="Conv2D",Mt="Conv2DBackpropFilter",Ot="Conv2DBackpropInput",Lt="Conv3D",zt="Conv3DBackpropFilterV2",Pt="Conv3DBackpropInputV2",Bt="Cos",Wt="Cosh",Vt="Cumprod",Ut="Cumsum",Gt="CropAndResize",Ht="DenseBincount",jt="DepthToSpace",qt="DepthwiseConv2dNative",Kt="DepthwiseConv2dNativeBackpropFilter",Xt="DepthwiseConv2dNativeBackpropInput",Yt="Diag",Zt="Dilation2D",Jt="Dilation2DBackpropInput",Qt="Dilation2DBackpropFilter",en="RealDiv",tn="Einsum",nn="Elu",rn="EluGrad",an="Erf",sn="Equal",on="Exp",ln="ExpandDims",un="Expm1",hn="FFT",pn="Fill",dn="FlipLeftRight",cn="Floor",fn="FloorDiv",mn="FusedBatchNorm",gn="GatherV2",yn="GatherNd",bn="Greater",xn="GreaterEqual",wn="Identity",vn="IFFT",kn="Imag",In="IsFinite",Sn="IsInf",Nn="IsNan",Tn="LeakyRelu",Cn="Less",_n="LessEqual",En="LinSpace",$n="Log",An="Log1p",Rn="LogicalAnd",Fn="LogicalNot",Dn="LogicalOr",Mn="LogicalXor",On="LogSoftmax",Ln="LowerBound",zn="LRN",Pn="LRNGrad",Bn="Max",Wn="Maximum",Vn="MaxPool",Un="MaxPoolGrad",Gn="MaxPool3D",Hn="MaxPool3DGrad",jn="MaxPoolWithArgmax",qn="Mean",Kn="Min",Xn="Minimum",Yn="MirrorPad",Zn="Mod",Jn="Multinomial",Qn="Multiply",er="Neg",tr="NotEqual",nr="NonMaxSuppressionV3",rr="NonMaxSuppressionV4",ar="NonMaxSuppressionV5",sr="OnesLike",ir="OneHot",or="Pack",lr="PadV2",ur="Pool",hr="Pow",pr="Prelu",dr="Prod",cr="RaggedGather",fr="RaggedRange",mr="RaggedTensorToTensor",gr="Range",yr="Real",br="Reciprocal",xr="Relu",wr="Reshape",vr="ResizeNearestNeighbor",kr="ResizeNearestNeighborGrad",Ir="ResizeBilinear",Sr="ResizeBilinearGrad",Nr="Relu6",Tr="Reverse",Cr="Round",_r="Rsqrt",Er="ScatterNd",$r="SearchSorted",Ar="Select",Rr="Selu",Fr="Slice",Dr="Sin",Mr="Sinh",Or="Sign",Lr="Sigmoid",zr="Softplus",Pr="Sqrt",Br="Sum",Wr="SpaceToBatchND",Vr="SplitV",Ur="Softmax",Gr="SparseFillEmptyRows",Hr="SparseReshape",jr="SparseSegmentMean",qr="SparseSegmentSum",Kr="SparseToDense",Xr="SquaredDifference",Yr="Square",Zr="StridedSlice",Jr="StringNGrams",Qr="StringSplit",ea="StringToHashBucketFast",ta="Sub",na="Tan",ra="Tanh",aa="Tile",sa="TopK",ia="Transform",oa="Transpose",la="Unique",ua="Unpack",ha="UnsortedSegmentSum",pa="UpperBound",da="ZerosLike",ca="Step",fa="FromPixels",ma="RotateWithOffset",ga="_FusedMatMul",ya="FusedConv2D",ba="FusedDepthwiseConv2D";function xa(...e){Je().getBool("IS_TEST")||Je().getBool("PROD")||console.warn(...e)}function wa(...e){Je().getBool("IS_TEST")||Je().getBool("PROD")||console.log(...e)}var va=at("kernelRegistry",(()=>new Map)),ka=at("gradRegistry",(()=>new Map));function Ia(e,t){let n=Aa(e,t);return va.get(n)}function Sa(e){return ka.get(e)}function Na(e){let t=va.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function Ta(e){let{kernelName:t,backendName:n}=e,r=Aa(t,n);va.has(r)&&xa(`The kernel '${t}' for backend '${n}' is already registered`),va.set(r,e)}function Ca(e){let{kernelName:t}=e;ka.has(t)&&Je().getBool("DEBUG")&&xa(`Overriding the gradient for '${t}'`),ka.set(t,e)}function _a(e,t){let n=Aa(e,t);if(!va.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);va.delete(n)}function Ea(e){if(!ka.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);ka.delete(e)}function $a(e,t){Na(e).forEach((e=>{let n=Object.assign({},e,{backendName:t});Ta(n)}))}function Aa(e,t){return`${t}_${e}`}var Ra={};C(Ra,{arraysEqual:()=>ce,assert:()=>le,assertNonNegativeIntegerDimensions:()=>Ue,assertNonNull:()=>he,assertShapesMatch:()=>ue,bytesFromStringArray:()=>Ee,bytesPerElement:()=>_e,checkConversionForErrors:()=>Ne,clamp:()=>ne,computeStrides:()=>Oe,convertBackendValuesAndArrayBuffer:()=>Pe,createScalarValue:()=>Za,createShuffledIndices:()=>ye,decodeString:()=>rs,distSquared:()=>oe,encodeString:()=>ns,fetch:()=>ts,fingerPrint64:()=>Ya,flatten:()=>ss,getArrayFromDType:()=>Se,getTypedArrayFromDType:()=>Ie,hasEncodingLoss:()=>Ce,hexToLong:()=>Ma,indexToLoc:()=>He,inferDtype:()=>Fe,inferFromImplicitShape:()=>we,isBoolean:()=>Ae,isFunction:()=>De,isInt:()=>fe,isNumber:()=>Re,isPromise:()=>je,isScalarShape:()=>de,isString:()=>$e,isTypedArray:()=>as,isValidDtype:()=>Te,locToIndex:()=>Ge,makeOnesTypedArray:()=>Be,makeZerosNestedTypedArray:()=>Ve,makeZerosTypedArray:()=>We,nearestDivisor:()=>Me,nearestLargerEven:()=>re,now:()=>es,parseAxisParam:()=>ve,randUniform:()=>ie,repeatedTry:()=>xe,rightPad:()=>be,shuffle:()=>ee,shuffleCombo:()=>te,sizeFromShape:()=>pe,sizeToSquarishShape:()=>ge,squeezeShape:()=>ke,sum:()=>se,swap:()=>ae,tanh:()=>me,toNestedArray:()=>ze,toTypedArray:()=>Qa});var Fa=E($()),Da=Fa.default||Fa;function Ma(e){return Da.fromString(e,!0,16)}var Oa=Ma("c3a5c85c97cb3127"),La=Ma("b492b66fbe98f273"),za=Ma("9ae16a3b2f90404f");function Pa(e){return e.xor(e.shru(47))}function Ba(e,t,n){let r=e.slice(t,t+n);return Da.fromBytes(Array.from(r),!0,!0)}function Wa(e,t){return Ba(e,t,8)}function Va(e,t){return Ba(e,t,4)}function Ua(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Ga(e,t,n=Ma("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Ha(e,t,n,r,a,s){a=a.add(e),s=Ua(s.add(a).add(r),21);let i=a;return a=a.add(t),a=a.add(n),s=s.add(Ua(a,44)),[a.add(r),s.add(i)]}function ja(e,t,n,r){return Ha(Wa(e,t),Wa(e,t+8),Wa(e,t+16),Wa(e,t+24),n,r)}function qa(e,t=e.length){if(t>=8){let n=za.add(2*t),r=Wa(e,0).add(za),a=Wa(e,t-8),s=Ua(a,37).mul(n).add(r),i=Ua(r,25).add(a).mul(n);return Ga(s,i,n)}if(t>=4){let n=za.add(2*t),r=Va(e,0);return Ga(r.shl(3).add(t),Va(e,t-4),n)}if(t>0){let n=e[0],r=e[t>>1],a=e[t-1],s=n+(r<<8),i=t+(a<<2);return Pa(za.mul(s).xor(Oa.mul(i))).mul(za)}return za}function Ka(e,t=e.length){let n=za.add(2*t),r=Wa(e,0).mul(La),a=Wa(e,8),s=Wa(e,t-8).mul(n),i=Wa(e,t-16).mul(za);return Ga(Ua(r.add(a),43).add(Ua(s,30)).add(i),r.add(Ua(a.add(za),18)).add(s),n)}function Xa(e,t=e.length){let n=za.add(2*t),r=Wa(e,0).mul(za),a=Wa(e,8),s=Wa(e,t-8).mul(n),i=Wa(e,t-16).mul(za),o=Ua(r.add(a),43).add(Ua(s,30)).add(i),l=Ga(o,r.add(Ua(a.add(za),18)).add(s),n),u=Wa(e,16).mul(n),h=Wa(e,24),p=o.add(Wa(e,t-32)).mul(n),d=l.add(Wa(e,t-24)).mul(n);return Ga(Ua(u.add(h),43).add(Ua(p,30)).add(d),u.add(Ua(h.add(r),18)).add(p),n)}function Ya(e,t=e.length){let n=Da.fromNumber(81,!0);if(t<=32)return t<=16?qa(e,t):Ka(e,t);if(t<=64)return Xa(e,t);let r=n,a=n.mul(La).add(113),s=Pa(a.mul(za).add(113)).mul(za),i=[Da.UZERO,Da.UZERO],o=[Da.UZERO,Da.UZERO];r=r.mul(za).add(Wa(e,0));let l=0,u=64*(t-1>>6),h=u+(t-1&63)-63;do{r=Ua(r.add(a).add(i[0]).add(Wa(e,l+8)),37).mul(La),a=Ua(a.add(i[1]).add(Wa(e,l+48)),42).mul(La),r=r.xor(o[1]),a=a.add(i[0]).add(Wa(e,l+40)),s=Ua(s.add(o[0]),33).mul(La),i=ja(e,l,i[1].mul(La),r.add(o[0])),o=ja(e,l+32,s.add(o[1]),a.add(Wa(e,l+16))),[s,r]=[r,s],l+=64}while(l!==u);let p=La.add(s.and(255).shl(1));return l=h,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Ua(r.add(a).add(i[0]).add(Wa(e,l+8)),37).mul(p),a=Ua(a.add(i[1]).add(Wa(e,l+48)),42).mul(p),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(Wa(e,l+40))),s=Ua(s.add(o[0]),33).mul(p),i=ja(e,l,i[1].mul(p),r.add(o[0])),o=ja(e,l+32,s.add(o[1]),a.add(Wa(e,l+16))),[s,r]=[r,s],Ga(Ga(i[0],o[0],p).add(Pa(a).mul(Oa)).add(s),Ga(i[1],o[1],p).add(r),p)}function Za(e,t){return"string"===t?ns(e):Qa([e],t)}function Ja(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}function Qa(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ss(e)),Je().getBool("DEBUG")&&Ne(e,t),Ja(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function es(){return Je().platform.now()}function ts(e,t){return Je().platform.fetch(e,t)}function ns(e,t="utf-8"){return t=t||"utf-8",Je().platform.encode(e,t)}function rs(e,t="utf-8"){return t=t||"utf-8",Je().platform.decode(e,t)}function as(e){return Je().platform.isTypedArray(e)}function ss(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||je(e)||null==e||as(e)&&n)t.push(e);else if(Array.isArray(e)||as(e))for(let r=0;r<e.length;++r)ss(e[r],t,n);else{let r=-1;for(let t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let a=0;a<=r;a++)ss(e[a],t,n)}return t}var is=class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new ls)}profileKernel(e,t,n){let r,a,s=()=>{r=n()},i=es();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let e of r)e.dataSync();a=Promise.resolve({kernelMs:es()-i})}if(Je().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){let t=r[o];t.data().then((n=>{os(n,t.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}};function os(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){let t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}var ls=class{logKernelProfile(e,t,n,r,a,s){let i="number"==typeof r?be(`${r}ms`,9):r.error,o=be(e,25),l=t.rank,u=t.size,h=be(t.shape.toString(),14),p="";for(let d in a){let e=a[d];if(null!=e){let n=e.shape||t.shape,r=n.length;p+=`${d}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${h}\t%c${u}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function us(e,t,n){let r={},a={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){let n=e[l],s=n.inputs;for(let e in s){let i=s[e],o=!1;for(let e=0;e<t.length;e++)if(r[i.id]){n.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[n.id]=!0;break}if(o)break}}let s={};s[n.id]=!0;let i={};for(let l=e.length-1;l>=0;l--){let t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(let e in n)s[n[e].id]=!0,i[t.id]=!0;break}}let o=[];for(let l=0;l<e.length;l++){let t=e[l];if(a[t.id]&&i[t.id]){let e={};for(let a in t.inputs){let n=t.inputs[a];r[n.id]&&(e[a]=n)}let n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}function hs(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach((t=>{let n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);let i=s.inputs[t];if(!ce(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{let t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}var ps=20,ds=3,cs=7;function fs(e,t,n,r){let a=Oe(t),s=ms(e,t,n,a),i=t.length,o=bs(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function ms(e,t,n,r){let a=pe(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?xs(e):e;if(o>1)for(let u=0;u<a/s;u++){let e=u*s;for(let t=0;t<s;t++)i[t]=Math.max(i[t],gs(l[e+t],0,n).length)}return i}function gs(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(cs))} + ${parseFloat(e[1].toFixed(cs))}j`:$e(e)?`'${e}'`:"bool"===n?ys(e):parseFloat(e.toFixed(cs)).toString(),be(r,t)}function ys(e){return 0===e?"false":"true"}function bs(e,t,n,r,a,s=!0){let i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){let t=xs(e);return[gs(t[0],0,n)]}return"bool"===n?[ys(e[0])]:[e[0].toString()]}if(1===l){if(o>ps){let t=ds*i,r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-ds)*i,o*i));return"complex64"===n&&(r=xs(r),s=xs(s)),["["+r.map(((e,t)=>gs(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>gs(e,a[o-ds+t],n))).join(", ")+"]"]}return["["+("complex64"===n?xs(e):Array.from(e)).map(((e,t)=>gs(e,a[t],n))).join(", ")+"]"]}let u=t.slice(1),h=r.slice(1),p=r[0]*i,d=[];if(o>ps){for(let t=0;t<ds;t++){let r=t*p,s=r+p;d.push(...bs(e.slice(r,s),u,n,h,a,!1))}d.push("...");for(let t=o-ds;t<o;t++){let r=t*p,s=r+p;d.push(...bs(e.slice(r,s),u,n,h,a,t===o-1))}}else for(let m=0;m<o;m++){let t=m*p,r=t+p;d.push(...bs(e.slice(t,r),u,n,h,a,m===o-1))}let c=2===l?",":"";d[0]="["+(o>0?d[0]+c:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+c;let f=",\n";for(let m=2;m<l;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function xs(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var ws=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=pe(e),null!=n){let e=n.length;le(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Se(t,this.size),this.strides=Oe(e)}set(e,...t){0===t.length&&(t=[0]),le(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));let n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let r of e){if(r<0||r>=this.shape[t]){let t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return vs().makeTensor(this.values,this.shape,this.dtype)}},vs=null,ks=null;function Is(e){vs=e}function Ss(e){ks=e}function Ns(e){e}var Ts=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=pe(e),this.strides=Oe(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return ks.buffer(this.shape,this.dtype,e)}bufferSync(){return ks.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return ze(this.shape,e,"complex64"===this.dtype)}arraySync(){return ze(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=vs().read(this.dataId);if("string"===this.dtype){let n=await e;try{return n.map((e=>rs(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),vs().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=vs().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>rs(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await vs().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(vs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ks.print(this,e)}clone(){return this.throwIfDisposed(),ks.clone(this)}toString(e=!1){let t=this.dataSync();return fs(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ks.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),vs().makeVariable(this,e,t,n)}};function Cs(){return at("Tensor",(()=>Ts))}Object.defineProperty(Ts,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Cs();var _s=class extends Ts{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ce(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);vs().disposeTensor(this),this.dataId=e.dataId,vs().incRef(this,null)}dispose(){vs().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(_s,Symbol.hasInstance,{value:e=>e instanceof Ts&&null!=e.assign&&e.assign instanceof Function});var Es,$s,As,Rs,Fs,Ds={};C(Ds,{assertTypesMatch:()=>Ps,getTensorsInContainer:()=>Ws,isTensorInList:()=>Bs,makeTypesMatch:()=>zs}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Es||(Es={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}($s||($s={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(As||(As={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Rs||(Rs={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Fs||(Fs={}));var Ms={float32:Rs,int32:$s,bool:As,complex64:Fs};function Os(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Ms[e][t]}function Ls(e){return Os(e,"int32")}function zs(e,t){if(e.dtype===t.dtype)return[e,t];let n=Os(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ps(e,t){le(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function Bs(e,t){return t.some((t=>t.id===e.id))}function Ws(e){let t=[];return Vs(e,t,new Set),t}function Vs(e,t,n){if(null==e)return;if(e instanceof Ts)return void t.push(e);if(!Us(e))return;let r=e;for(let a in r){let e=r[a];n.has(e)||(n.add(e),Vs(e,t,n))}}function Us(e){return Array.isArray(e)||"object"==typeof e}function Gs(e){return null!=e.kernelName}var Hs=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},js=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Hs}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(xa(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new is(this.backendInstance),!0}setupRegisteredKernels(){Na(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Na(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof J||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,xa(`Initialization of backend ${e} failed`),xa(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return xa(`Initialization of backend ${e} failed`),xa(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return js.nextTensorId++}nextVariableId(){return js.nextVariableId++}clone(e){let t=Xs.runKernel(wn,{x:e}),n={x:e},r=e=>({x:()=>{let t="float32",n={x:e},r={dtype:t};return Xs.runKernel(_t,n,r)}}),a=[];return this.addTapeNode(this.state.activeScope.name,n,[t],r,a,{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==Ia(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,r=[],a=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let o,l=Gs(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Gs(e)){let{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;let l=Ia(t,this.backendName);le(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),n=()=>{let e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});let n=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,n);let u=n.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){let e=this.getTensorsForGradient(t,s,u);r=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:t}=e,s=e=>{a&&(r=e.map((e=>this.keep(this.clone(e)))))};n=()=>{let e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));let n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}let u,{inputs:h,attrs:p}=e,d=Gs(e)?null:e.backwardsFunc;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(u=this.profiler.profileKernel(l,h,(()=>n())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(u),t=u.outputs):t=n()})),a&&this.addTapeNode(l,h,t,d,r,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map((e=>null!=h[e]?h[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:u.timeMs,extraInfo:u.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){let r=Sa(e);if(null!=r){let e,a=r.inputsToSave||[],s=r.outputsToSave||[];r.saveAllInputs?(le(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),e=Object.keys(t).map((e=>t[e]))):e=a.map((e=>t[e]));let i=n.filter(((e,t)=>s[t]));return e.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&$e(e[0])&&(a=e.map((e=>ns(e))));let s=r.write(a,t,n),i=new Ts(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){let e=this.state.tensorInfo.get(s),t=Ee(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){n=n||"float32";let a={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:r,dtype:a}=e,s=new Ts(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));let a=new _s(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*_e(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof _s||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*_e(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=Sa(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){let e=n[t],r=We(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=Ws(e),n=new Set(t.map((e=>e.id)));for(let a=0;a<this.state.activeScope.track.length;a++){let e=this.state.activeScope.track[a];!e.kept&&!n.has(e.id)&&e.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{!e.kept&&e.scopeId===r.id&&this.track(e)}))}gradients(e,t,n,r=!1){if(le(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));le(a instanceof Ts,(()=>"The result y returned by f() must be a tensor."));let s=us(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{let e={};e[a.id]=null==n?qs(a.shape):n,hs(e,s,(e=>this.tidy(e)),Ys);let r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(let t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return le(De(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{le(t.every((e=>e instanceof Ts)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));let n,r={};t.forEach(((e,t)=>{r[t]=e}));let a=(r,a)=>(n=e(...t,a),le(n.value instanceof Ts,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),le(De(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),s=(e,r)=>{let a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];le(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),le(s.every((e=>e instanceof Ts)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));let i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i};return this.runKernelFunc({forwardFunc:a,backwardsFunc:s,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=es(),n=await this.backend.time(e);return n.wallMs=es()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Hs;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function qs(e){let t=Be(pe(e),"float32");return Xs.makeTensor(t,e,"float32")}function Ks(){let e=nt();if(null==e._tfengine){let t=new Ke(e);e._tfengine=new js(t)}return tt(e._tfengine.ENV),Is((()=>e._tfengine)),e._tfengine}js.nextTensorId=0,js.nextVariableId=0;var Xs=Ks();function Ys(e,t){let n={a:e,b:t};return Xs.runKernel(lt,n)}var Zs,Js={};function Qs(){return"undefined"!=typeof navigator&&null!=navigator}function ei(e){Zs=e}function ti(e){if(void 0!==Zs)return Zs;if(e||Qs()){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ni(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}C(Js,{isBrowser:()=>ni,isMobile:()=>ti,mockIsMobile:()=>ei});var ri=Je();function ai(e,t){let n=e;if(as(e))return"string"===t?[]:[e.length];if("object"==typeof e){if("texture"in e){let t=e.channels||"RGBA";return[e.height,e.width*t.length]}if("buffer"in e&&!(e.buffer instanceof ArrayBuffer))return[e.buffer.size/(null==t?4:_e(t))]}if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||as(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Je().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&si(e,r,[]),r}function si(e,t,n){if(n=n||[],!Array.isArray(e)&&!as(e))return void le(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));le(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),le(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));let r=t.slice(1);for(let a=0;a<e.length;++a)si(e[a],r,n.concat(a))}function ii(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function oi(e,t,n,r="numeric"){if(e instanceof Ts)return ii(r,e.dtype,t,n),e;let a=Fe(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),ii(r,a,t,n),null==e||!as(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}let s=ai(e,a);!as(e)&&!Array.isArray(e)&&(e=[e]);let i="string"!==a?Qa(e,a):ss(e,[],!0);return Xs.makeTensor(i,s,a)}function li(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>oi(e,`${t}[${a}]`,n,r)))}ri.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),ri.registerFlag("IS_BROWSER",(()=>ni())),ri.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&"undefined"!=typeof process.versions&&"undefined"!=typeof process.versions.node)),ri.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ri.registerFlag("PROD",(()=>!1)),ri.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ri.getBool("DEBUG"))),ri.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ri.registerFlag("IS_TEST",(()=>!1)),ri.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),ri.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),ri.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),ri.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var ui="__op";function hi(e){let t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=ui;let a=(...e)=>{Xs.startScope(n);try{let t=r(...e);return je(t)&&console.error("Cannot return a Promise inside of tidy."),Xs.endScope(t),t}catch(t){throw Xs.endScope(null),t}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}function pi(e,t){let n=oi(e,"real","complex"),r=oi(t,"imag","complex");ue(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let a={real:n,imag:r};return Xs.runKernel(At,a)}var di=hi({complex_:pi});function ci(e,t,n,r){if(null==r)r=Fe(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if("object"==typeof e&&("texture"in e||"buffer"in e&&!(e.buffer instanceof ArrayBuffer))){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return Xs.backend.createTensorFromGPUData(e,t||n,r)}if(!as(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Ue(t);let e=pe(t),r=pe(n);le(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let a=0;a<n.length;++a){let e=n[a],r=a!==n.length-1||e!==pe(t.slice(a));le(n[a]===t[a]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return!as(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==r?Qa(e,r):ss(e,[],!0),Xs.makeTensor(e,t,r)}function fi(e,t,n){let r=ai(e,n);return ci(e,t,r,n)}var mi={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},gi=4;async function yi(e,t){let n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let i=0;i<a.length;++i){let s=a[i],o=Array.isArray(e)?e[i].tensor:e[s];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${s}': ${o.dtype}`);let l={name:s,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise((async e=>{let t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+gi*t.length,r=new Uint8Array(n),a=0;for(let s=0;s<t.length;s++){let e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,a),a+=gi,r.set(e,a),a+=e.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}let s=await Promise.all(r);return{data:xi(s),specs:n}}function bi(e,t){let n,r={},a=0;for(let s of t){let t,i=s.name,o=s.dtype,l=s.shape,u=pe(l);if("quantization"in s){let r=s.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${s.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${s.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}let l=mi[r.dtype],h=e.slice(a,a+u*l),p="uint8"===r.dtype?new Uint8Array(h):new Uint16Array(h);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){t=new Float32Array(p.length);for(let e=0;e<p.length;e++){let n=p[e];t[e]=n*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);void 0===n&&(n=Di()),t=n(p)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);t=new Int32Array(p.length);for(let e=0;e<p.length;e++){let n=p[e];t[e]=Math.round(n*r.scale+r.min)}}a+=u*l}else if("string"===o){let n=pe(s.shape);t=[];for(let r=0;r<n;r++){let n=new Uint32Array(e.slice(a,a+gi))[0];a+=gi;let r=new Uint8Array(e.slice(a,a+n));t.push(r),a+=n}}else{let n=mi[o],s=e.slice(a,a+u*n);if("float32"===o)t=new Float32Array(s);else if("int32"===o)t=new Int32Array(s);else if("bool"===o)t=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);{t=new Float32Array(s);let e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<e.length;r++)e[r]=t[2*r],n[r]=t[2*r+1];let a=fi(e,l,"float32"),o=fi(n,l,"float32");r[i]=di(a,o),a.dispose(),o.dispose()}}a+=u*n}"complex64"!==o&&(r[i]=fi(t,l,o))}return r}function xi(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));let r=new Uint8Array(t),a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var wi="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function vi(e){return wi?Buffer.byteLength(e):new Blob([e]).size}function ki(e){if(wi)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function Ii(e){if(wi){let t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function Si(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));let n=new Uint8Array(t),r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Ni(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function Ti(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Ci(e,t,n){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function _i(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),Ci(e,n,r)}function Ei(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:vi(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:vi(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function $i(e){let t=[];for(let n of e)t.push(...n.weights);return t}function Ai(){let e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function Ri(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function Fi(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function Di(){let e=Ai(),t=Ri(),n=Fi();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let i=0;i<r.length;i++){let a=r[i],o=e[n[a>>10]+(1023&a)]+t[a>>10];s[i]=o}return new Float32Array(a)}}var Mi=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Mi.instance&&(Mi.instance=new Mi),Mi.instance}static registerSaveRouter(e){Mi.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Mi.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Mi.getHandlers(e,"save")}static getLoadHandlers(e,t){return Mi.getHandlers(e,"load",t)}static getHandlers(e,t,n){let r=[];return("load"===t?Mi.getInstance().loadRouters:Mi.getInstance().saveRouters).forEach((t=>{let a=t(e,n);null!==a&&r.push(a)})),r}},Oi=e=>Mi.registerSaveRouter(e),Li=e=>Mi.registerLoadRouter(e),zi=e=>Mi.getSaveHandlers(e),Pi=(e,t)=>Mi.getLoadHandlers(e,t),Bi="tensorflowjs",Wi=1,Vi="models_store",Ui="model_info_store";function Gi(){if(!Je().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Hi(e){let t=e.result;t.createObjectStore(Vi,{keyPath:"modelPath"}),t.createObjectStore(Ui,{keyPath:"modelPath"})}var ji=class{constructor(e){if(this.indexedDB=Gi(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{let r=this.indexedDB.open(Bi,Wi);r.onupgradeneeded=()=>Hi(r),r.onsuccess=()=>{let a=r.result;if(null==t){let t=a.transaction(Vi,"readonly"),r=t.objectStore(Vi).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{let r,s=Ei(t),i=a.transaction(Ui,"readwrite"),o=i.objectStore(Ui),l=o.put({modelPath:this.modelPath,modelArtifactsInfo:s});l.onsuccess=()=>{r=a.transaction(Vi,"readwrite");let l=r.objectStore(Vi).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});l.onsuccess=()=>e({modelArtifactsInfo:s}),l.onerror=e=>{o=i.objectStore(Ui);let t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(l.error)),t.onerror=e=>(a.close(),n(l.error))}},l.onerror=e=>(a.close(),n(l.error)),i.oncomplete=()=>{null==r?a.close():r.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}};ji.URL_SCHEME="indexeddb://";var qi=e=>Je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ji.URL_SCHEME)?Ki(e.slice(ji.URL_SCHEME.length)):null;function Ki(e){return new ji(e)}function Xi(e){return e.startsWith(ji.URL_SCHEME)?e.slice(ji.URL_SCHEME.length):e}Mi.registerSaveRouter(qi),Mi.registerLoadRouter(qi);var Yi=class{constructor(){this.indexedDB=Gi()}async listModels(){return new Promise(((e,t)=>{let n=this.indexedDB.open(Bi,Wi);n.onupgradeneeded=()=>Hi(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(Ui,"readonly"),s=a.objectStore(Ui).getAll();s.onsuccess=()=>{let t={};for(let e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=Xi(e),new Promise(((t,n)=>{let r=this.indexedDB.open(Bi,Wi);r.onupgradeneeded=()=>Hi(r),r.onsuccess=()=>{let a,s=r.result,i=s.transaction(Ui,"readwrite"),o=i.objectStore(Ui),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let r=o.delete(e),i=()=>{a=s.transaction(Vi,"readwrite");let r=a.objectStore(Vi).delete(e);r.onsuccess=()=>t(l.result.modelArtifactsInfo),r.onerror=e=>n(l.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(l.error))}},l.onerror=e=>(s.close(),n(l.error)),i.oncomplete=()=>{null==a?s.close():a.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}},Zi="/",Ji="tensorflowjs_models",Qi="info",eo="model_topology",to="weight_specs",no="weight_data",ro="model_metadata";function ao(e){return{info:[Ji,e,Qi].join(Zi),topology:[Ji,e,eo].join(Zi),weightSpecs:[Ji,e,to].join(Zi),weightData:[Ji,e,no].join(Zi),modelMetadata:[Ji,e,ro].join(Zi)}}function so(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function io(e){let t=e.split(Zi);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Zi)}function oo(e){return e.startsWith(lo.URL_SCHEME)?e.slice(lo.URL_SCHEME.length):e}var lo=class{constructor(e){if(!Je().getBool("IS_BROWSER")||"undefined"==typeof window||"undefined"==typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ao(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),a=Ei(e);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,ki(e.weightData));let t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:a}}catch(t){throw so(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){let e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Ii(s),t}};lo.URL_SCHEME="localstorage://";var uo=e=>Je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(lo.URL_SCHEME)?ho(e.slice(lo.URL_SCHEME.length)):null;function ho(e){return new lo(e)}Mi.registerSaveRouter(uo),Mi.registerLoadRouter(uo);var po=class{constructor(){le(Je().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),le("undefined"==typeof window||"undefined"!=typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){let e={},t=Ji+Zi,n=Zi+Qi;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){let t=io(a);e[t]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){e=oo(e);let t=ao(e);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return so(t),n}},co="://",fo=class{constructor(){this.managers={}}static getInstance(){return null==fo.instance&&(fo.instance=new fo),fo.instance}static registerManager(e,t){le(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(co)&&(e=e.slice(0,e.indexOf(co))),le(e.length>0,(()=>"scheme must not be an empty string."));let n=fo.getInstance();le(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){let t=fo.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(fo.getInstance().managers)}};function mo(e){if(-1===e.indexOf(co))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${fo.getSchemes().join(",")}`);return{scheme:e.split(co)[0],path:e.split(co)[1]}}async function go(e,t,n=!1){le(e!==t,(()=>`Old path and new path are the same: '${e}'`));let r=Mi.getLoadHandlers(e);le(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),le(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));let a=r[0],s=Mi.getSaveHandlers(t);le(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),le(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));let i=s[0],o=mo(e).scheme,l=mo(e).path,u=o===mo(e).scheme,h=await a.load();n&&u&&await fo.getManager(o).removeModel(l);let p=await i.save(h);return n&&!u&&await fo.getManager(o).removeModel(l),p.modelArtifactsInfo}async function yo(){let e=fo.getSchemes(),t={};for(let n of e){let e=await fo.getManager(n).listModels();for(let r in e){let a=n+co+r;t[a]=e[r]}}return t}async function bo(e){let t=mo(e);return fo.getManager(t.scheme).removeModel(t.path)}async function xo(e,t){return go(e,t,!1)}async function wo(e,t){return go(e,t,!0)}var vo=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&Je().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();let t=this.functionRefs[e.data.index];t(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}};if(Je().get("IS_BROWSER")){Je().setPlatform("browser",new vo);try{fo.registerManager(lo.URL_SCHEME,new po)}catch(Use){}try{fo.registerManager(ji.URL_SCHEME,new Yi)}catch(Use){}}var ko,Io={importFetch:()=>A()},So=class{constructor(){this.util=R(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Je().global.fetch?Je().global.fetch(e,t):(null==ko&&(ko=Io.importFetch()),ko(e,t))}now(){let e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}};function No(e,t="float32",n){return t=t||"float32",Ue(e),new ws(e,t,n)}function To(e,t){let n=oi(e,"x","cast");if(!Te(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");let r={x:n},a={dtype:t};return Xs.runKernel(_t,r,a)}Je().get("IS_NODE")&&!Je().get("IS_BROWSER")&&Je().setPlatform("node",new So);var Co=hi({cast_:To});function _o(e){let t={x:oi(e,"x","clone","string_or_numeric")};return Xs.runKernel(wn,t)}var Eo=hi({clone_:_o});function $o(e,t=!1){console.log(e.toString(t))}Ks();var Ao={buffer:No,cast:Co,clone:Eo,print:$o};function Ro(){Je().set("PROD",!0)}function Fo(){Je().set("DEBUG",!0)}function Do(){Je().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Mo(e){Je().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Oo(){Xs.disposeVariables()}function Lo(){return Xs}function zo(){return Xs.memory()}function Po(e){return Xs.profile(e)}function Bo(e,t){return Xs.tidy(e,t)}function Wo(e){Ws(e).forEach((e=>e.dispose()))}function Vo(e){return Xs.keep(e)}function Uo(e){return Xs.time(e)}function Go(e){return Xs.setBackend(e)}function Ho(){return Xs.ready()}function jo(){return Xs.backendName}function qo(e){Xs.removeBackend(e)}function Ko(e){return Xs.findBackend(e)}function Xo(e){return Xs.findBackendFactory(e)}function Yo(e,t,n=1){return Xs.registerBackend(e,t,n)}function Zo(){return Xs.backend}function Jo(e,t){Je().setPlatform(e,t)}function Qo(e,t){let n=oi(e,"a","add"),r=oi(t,"b","add");[n,r]=zs(n,r);let a={a:n,b:r};return Xs.runKernel(lt,a)}Ss(Ao),Ns(Mo);var el=hi({add_:Qo});function tl(e,t){let n=oi(e,"a","floorDiv"),r=oi(t,"b","floorDiv");[n,r]=zs(n,r);let a={a:n,b:r};return Xs.runKernel(fn,a)}var nl=hi({floorDiv_:tl});function rl(e,t){let n=oi(e,"a","div"),r=oi(t,"b","div");if([n,r]=zs(n,r),"int32"===n.dtype&&"int32"===r.dtype)return nl(n,r);let a={a:n,b:r},s={};return Xs.runKernel(en,a,s)}var al=hi({div_:rl});function sl(e,t){let n=oi(e,"a","mul"),r=oi(t,"b","mul");[n,r]=zs(n,r);let a={a:n,b:r};return Xs.runKernel(Qn,a)}var il=hi({mul_:sl});function ol(e){let t=oi(e,"x","abs");if("complex64"===t.dtype){let e={x:t};return Xs.runKernel(Rt,e)}{let e={x:t};return Xs.runKernel(st,e)}}var ll=hi({abs_:ol});function ul(e){let t={x:oi(e,"x","acos")};return Xs.runKernel(it,t)}var hl=hi({acos_:ul});function pl(e){let t={x:oi(e,"x","acosh")};return Xs.runKernel(ot,t)}var dl=hi({acosh_:pl});function cl(e){le(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),le(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));let t=e.map(((e,t)=>oi(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!ce(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));let r=t;return Xs.runKernel(ut,r)}var fl=hi({addN_:cl});function ml(e,t=null,n=!1){let r={x:oi(e,"x","all","bool")},a={axis:t,keepDims:n};return Xs.runKernel(ht,r,a)}var gl=hi({all_:ml});function yl(e,t=null,n=!1){let r={x:oi(e,"x","any","bool")},a={axis:t,keepDims:n};return Xs.runKernel(pt,r,a)}var bl=hi({any_:yl});function xl(e,t=0){let n={x:oi(e,"x","argMax")},r={axis:t};return Xs.runKernel(dt,n,r)}var wl=hi({argMax_:xl});function vl(e,t=0){let n={x:oi(e,"x","argMin")},r={axis:t};return Xs.runKernel(ct,n,r)}var kl=hi({argMin_:vl});function Il(e){let t={x:oi(e,"x","asin")};return Xs.runKernel(ft,t)}var Sl=hi({asin_:Il});function Nl(e){let t={x:oi(e,"x","asinh")};return Xs.runKernel(mt,t)}var Tl=hi({asinh_:Nl});function Cl(e){let t={x:oi(e,"x","atan")};return Xs.runKernel(gt,t)}var _l=hi({atan_:Cl});function El(e,t){let n=oi(e,"a","atan2"),r=oi(t,"b","atan2");[n,r]=zs(n,r);let a={a:n,b:r};return Xs.runKernel(bt,a)}var $l=hi({atan2_:El});function Al(e){let t={x:oi(e,"x","atanh")};return Xs.runKernel(yt,t)}var Rl=hi({atanh_:Al});function Fl(e,t,n,r,a="NHWC",s){let i=e[3],o=[...t,i],l=Yl(a);return Ol(e,o,n,s,r,null,null,l)}function Dl(e,t,n,r,a,s,i="channelsLast"){let o,[l,u]=Wl(t);if("channelsLast"===i)o=[l,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);o=[l,u,e[1],e[1]]}return Ol(e,o,n,r,a,s,!1,i)}function Ml(e,t,n,r,a,s,i="NDHWC"){let o,l,[u,h,p]=Vl(t);if("NDHWC"===i)l="channelsLast",o=[u,h,p,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);l="channelsFirst",o=[u,h,p,e[1],e[1]]}return Ll(e,o,n,r,a,!1,l,s)}function Ol(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,u,h,p]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,h,p]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,p,u,h]=e}let d,[c,f,,m]=t,[g,y]=Wl(n),[b,x]=Wl(r),w=Ul(c,b),v=Ul(f,x),{padInfo:k,outHeight:I,outWidth:S}=Gl(a,u,h,g,y,w,v,s,o),N=i?m*p:m;return"channelsFirst"===o?d=[l,N,I,S]:"channelsLast"===o&&(d=[l,I,S,N]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:h,inChannels:p,outHeight:I,outWidth:S,outChannels:N,padInfo:k,strideHeight:g,strideWidth:y,filterHeight:c,filterWidth:f,effectiveFilterHeight:w,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:x,inShape:e,outShape:d,filterShape:t}}function Ll(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,u,h,p,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,h,p,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,h,p]=e}let c,[f,m,g,,y]=t,[b,x,w]=Vl(n),[v,k,I]=Vl(r),S=Ul(f,v),N=Ul(m,k),T=Ul(g,I),{padInfo:C,outDepth:_,outHeight:E,outWidth:$}=Hl(a,u,h,p,b,x,w,S,N,T,o),A=s?y*d:y;return"channelsFirst"===i?c=[l,A,_,E,$]:"channelsLast"===i&&(c=[l,_,E,$,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:h,inWidth:p,inChannels:d,outDepth:_,outHeight:E,outWidth:$,outChannels:A,padInfo:C,strideDepth:b,strideHeight:x,strideWidth:w,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:S,effectiveFilterHeight:N,effectiveFilterWidth:T,dilationDepth:v,dilationHeight:k,dilationWidth:I,inShape:e,outShape:c,filterShape:t}}function zl(e,t,n,r,a){null==r&&(r=Bl(e,t,n));let s=e[0],i=e[1],o=jl((s-t+2*r)/n+1,a),l=jl((i-t+2*r)/n+1,a);return[o,l]}function Pl(e,t,n,r,a,s){null==a&&(a=Bl(e,t[0],r[0]));let i=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*a>=t[o]&&(i[o]=jl((e[o]-t[o]+2*a)/r[o]+1,s));return i}function Bl(e,t,n,r=1){let a=Ul(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Wl(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Vl(e){return"number"==typeof e?[e,e,e]:e}function Ul(e,t){return t<=1?e:e+(e-1)*(t-1)}function Gl(e,t,n,r,a,s,i,o,l){let u,h,p;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let a=zl([t,n],s,r,e,o);h=a[0],p=a[1]}else if("same"===e){h=Math.ceil(t/r),p=Math.ceil(n/a);let e=Math.max(0,(h-1)*r+s-t),o=Math.max(0,(p-1)*a+i-n),l=Math.floor(e/2),d=e-l,c=Math.floor(o/2),f=o-c;u={top:l,bottom:d,left:c,right:f,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-s+1)/r),p=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{let d="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:c,left:f,right:m,type:0===d&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},h=jl((t-s+d+c)/r+1,o),p=jl((n-i+f+m)/a+1,o)}}return{padInfo:u,outHeight:h,outWidth:p}}function Hl(e,t,n,r,a,s,i,o,l,u,h){let p,d,c,f;if("valid"===e&&(e=0),"number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let m=Pl([t,n,r,1],[o,l,u],1,[a,s,i],e,h);d=m[0],c=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/a),c=Math.ceil(n/s),f=Math.ceil(r/i);let e=(d-1)*a+o-t,h=(c-1)*s+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(h/2),x=h-b,w=Math.floor(m/2),v=m-w;p={top:b,bottom:x,left:w,right:v,front:g,back:y,type:"SAME"}}}return{padInfo:p,outDepth:d,outHeight:c,outWidth:f}}function jl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function ql(e){let[t,n,r]=Wl(e);return 1===t&&1===n&&1===r}function Kl(e,t){return ql(e)||ql(t)}function Xl(e){return Wl(e).every((e=>e>0))}function Yl(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Zl(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)le(fe(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{le(fe(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}function Jl(e,t){let n={x:oi(e,"x","reshape","string_or_numeric")},r={shape:t};return Xs.runKernel(wr,n,r)}var Ql=hi({reshape_:Jl});function eu(e,t,n,r,a){let s=oi(e,"x","avgPool","float32"),i=1;le(Kl(n,i),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));let o=s,l=!1;3===s.rank&&(l=!0,o=Ql(s,[1,s.shape[0],s.shape[1],s.shape[2]])),le(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),Zl("avgPool",r,a);let u={x:o},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a},p=Xs.runKernel(xt,u,h);return p=Co(p,s.dtype),l?Ql(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var tu=hi({avgPool_:eu});function nu(e,t,n,r,a,s="NDHWC"){let i=oi(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=Ql(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),le(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),le("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),le("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),Zl("avgPool3d",r,a);let u={x:o},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},p=Xs.runKernel(vt,u,h);return p=Co(p,o.dtype),l?Ql(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var ru=hi({avgPool3d_:nu});function au(e,t=0){le(e.length>=1,(()=>"Pass at least one tensor to concat"));let n=li(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Eo(n[0]);let r=n,a={axis:t};return Xs.runKernel(Ft,r,a)}var su=hi({concat_:au});function iu(e,t,n=!1,r=!1){let a=oi(e,"a","matMul"),s=oi(t,"b","matMul");[a,s]=zs(a,s);let i={a:a,b:s},o={transposeA:n,transposeB:r};return Xs.runKernel(It,i,o)}var ou=hi({matMul_:iu});function lu(e){let t={x:oi(e,"x","sigmoid","float32")};return Xs.runKernel(Lr,t)}var uu=hi({sigmoid_:lu});function hu(e,t,n){let r=oi(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");let a={x:r},s={begin:t,size:n};return Xs.runKernel(Fr,a,s)}var pu=hi({slice_:hu});function du(e){let t={x:oi(e,"x","tanh","float32")};return Xs.runKernel(ra,t)}var cu=hi({tanh_:du});function fu(e,t,n,r,a,s){let i=oi(e,"forgetBias","basicLSTMCell"),o=oi(t,"lstmKernel","basicLSTMCell"),l=oi(n,"lstmBias","basicLSTMCell"),u=oi(r,"data","basicLSTMCell"),h=oi(a,"c","basicLSTMCell"),p=oi(s,"h","basicLSTMCell"),d=su([u,p],1),c=ou(d,o),f=el(c,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=pu(f,[0,0],y),x=pu(f,[0,g],y),w=pu(f,[0,2*g],y),v=pu(f,[0,3*g],y),k=el(il(uu(b),cu(x)),il(h,uu(el(i,w)))),I=il(cu(k),uu(v));return[k,I]}var mu=hi({basicLSTMCell_:fu});function gu(e,t,n){let r=oi(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));le(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),le(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),le(r.shape[0]%a===0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));let s={x:r},i={blockShape:t,crops:n};return Xs.runKernel(St,s,i)}var yu=hi({batchToSpaceND_:gu});function bu(e){let t;return t=0===e.rank||1===e.rank?Ql(e,[1,1,1,e.size]):2===e.rank?Ql(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Ql(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}function xu(e,t,n,r,a,s){null==s&&(s=.001);let i,o,l=oi(e,"x","batchNorm"),u=oi(t,"mean","batchNorm"),h=oi(n,"variance","batchNorm");null!=a&&(i=oi(a,"scale","batchNorm")),null!=r&&(o=oi(r,"offset","batchNorm")),le(u.rank===h.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),le(null==o||u.rank===o.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),le(null==i||u.rank===i.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let p={x:bu(l),scale:i,offset:o,mean:u,variance:h},d={varianceEpsilon:s},c=Xs.runKernel(mn,p,d);return Ql(c,l.shape)}var wu=hi({batchNorm_:xu});function vu(e,t,n,r,a,s){let i,o,l=oi(e,"x","batchNorm"),u=oi(t,"mean","batchNorm"),h=oi(n,"variance","batchNorm");return null!=a&&(i=oi(a,"scale","batchNorm")),null!=r&&(o=oi(r,"offset","batchNorm")),le(2===l.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`)),le(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`)),le(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${h.rank}.`)),null!=i&&le(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${i.rank}.`)),null!=o&&le(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`)),wu(l,u,h,o,i,s)}var ku=hi({batchNorm2d_:vu});function Iu(e,t,n,r,a,s){let i,o,l=oi(e,"x","batchNorm"),u=oi(t,"mean","batchNorm"),h=oi(n,"variance","batchNorm");return null!=a&&(i=oi(a,"scale","batchNorm")),null!=r&&(o=oi(r,"offset","batchNorm")),le(3===l.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`)),le(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`)),le(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${h.rank}.`)),null!=i&&le(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${i.rank}.`)),null!=o&&le(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`)),wu(l,u,h,o,i,s)}var Su=hi({batchNorm3d_:Iu});function Nu(e,t,n,r,a,s){let i,o,l=oi(e,"x","batchNorm"),u=oi(t,"mean","batchNorm"),h=oi(n,"variance","batchNorm");return null!=a&&(i=oi(a,"scale","batchNorm")),null!=r&&(o=oi(r,"offset","batchNorm")),le(4===l.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`)),le(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`)),le(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${h.rank}.`)),null!=i&&le(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${i.rank}.`)),null!=o&&le(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`)),wu(l,u,h,o,i,s)}var Tu=hi({batchNorm4d_:Nu});function Cu(e,t,n){let r=oi(e,"x","bincount"),a=oi(t,"weights","bincount");le("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),le(n>=0,(()=>`size must be non-negative, but got ${n}.`)),le(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));let s={x:r,weights:a},i={size:n};return Xs.runKernel(Nt,s,i)}var _u=hi({bincount_:Cu});function Eu(e,t){let n=oi(e,"s0","broadcastArgs","int32"),r=oi(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let a={s0:n,s1:r};return Xs.runKernel(Ct,a)}var $u=hi({broadcastArgs_:Eu});function Au(e,t){let n=oi(e,"broadcastTo","x"),r=n.shape;if(Ue(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Ql(n,e)}let a=n.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(a[l]===t[l])s[l]=1;else if(1!==n.shape[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Eo(n);let i={x:n},o={reps:s};return Xs.runKernel(aa,i,o)}var Ru=hi({broadcastTo_:Au});function Fu(e){let t={x:oi(e,"x","ceil","float32")};return Xs.runKernel(Et,t)}var Du=hi({ceil_:Fu});function Mu(e,t,n){Ue(e);let r={shape:e,value:t,dtype:n};return Xs.runKernel(pn,{},r)}function Ou(e,t,n){let r=oi(e,"x","clipByValue");if(le(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return Mu(r.shape,t,r.dtype);let a={x:r},s={clipValueMin:t,clipValueMax:n};return Xs.runKernel($t,a,s)}var Lu=hi({clipByValue_:Ou});function zu(e){return su(e,0)}var Pu=hi({concat1d_:zu});function Bu(e,t){return su(e,t)}var Wu=hi({concat2d_:Bu});function Vu(e,t){return su(e,t)}var Uu=hi({concat3d_:Vu});function Gu(e,t){return su(e,t)}var Hu=hi({concat4d_:Gu});function ju(e,t,n,r,a="NHWC",s=[1,1],i){let o=oi(e,"x","conv2d","float32"),l=oi(t,"filter","conv2d","float32"),u=o,h=!1;3===o.rank&&(h=!0,u=Ql(o,[1,o.shape[0],o.shape[1],o.shape[2]])),le(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),le(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),Zl("conv2d",r,i);let p="NHWC"===a?u.shape[3]:u.shape[1];le(p===l.shape[2],(()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`)),le(Kl(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),le(Xl(s),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),le(Xl(n),(()=>"Error in conv2D: Strides should be larger than 0."));let d={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=Xs.runKernel(Dt,d,c);return h?Ql(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var qu=hi({conv2d_:ju});function Ku(e,t,n,r,a="NWC",s=1,i){let o=oi(e,"x","conv1d"),l=oi(t,"filter","conv1d"),u=o,h=!1;2===o.rank&&(h=!0,u=Ql(o,[1,o.shape[0],o.shape[1]])),le(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),le(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),Zl("conv1d",r,i),le(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),le(Kl(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),le(Xl(s),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),le(Xl(n),(()=>"Error in conv1D: Stride should be larger than 0.")),le("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));let p=Ql(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Ql(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=qu(d,p,[1,n],r,"NHWC",[1,s],i);return Ql(c,h?[c.shape[2],c.shape[3]]:[c.shape[0],c.shape[2],c.shape[3]])}var Xu=hi({conv1d_:Ku});function Yu(e,t,n,r,a,s="NHWC",i){le(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Ql(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),le(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),le(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),le(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));let h="NHWC"===s?o[3]:o[1],p="NHWC"===s?l.shape[3]:l.shape[1];le(h===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`)),le(p===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`)),Zl("conv2dDerInput",a,i);let d={dy:l,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=Xs.runKernel(Ot,d,c);return u?Ql(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Zu=hi({conv2DBackpropInput_:Yu});function Ju(e,t,n,r,a,s){let i=oi(e,"x","conv2dTranspose"),o=oi(t,"filter","conv2dTranspose");return Zu(n,i,o,r,a,"NHWC",s)}var Qu=hi({conv2dTranspose_:Ju});function eh(e,t,n,r,a="NDHWC",s=[1,1,1]){let i=oi(e,"x","conv3d"),o=oi(t,"filter","conv3d"),l=i,u=!1;4===i.rank&&(u=!0,l=Ql(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),le(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),le(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),le(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),le(Kl(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),le("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`)),le(Xl(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),le(Xl(n),(()=>"Error in conv3D: Strides should be larger than 0."));let h={x:l,filter:o},p={strides:n,pad:r,dataFormat:a,dilations:s},d=Xs.runKernel(Lt,h,p);return u?Ql(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var th=hi({conv3d_:eh});function nh(e,t,n,r,a){le(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=Ql(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];le(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),le(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),le(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),le(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),le(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));let h={dy:i,filter:n},p={pad:a,strides:r,inputShape:s},d=Xs.runKernel(Pt,h,p);return o?Ql(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var rh=hi({conv3DBackpropInput_:nh});function ah(e,t,n,r,a){let s=oi(e,"x","conv3dTranspose"),i=oi(t,"filter","conv3dTranspose");return rh(n,s,i,r,a)}var sh=hi({conv3dTranspose_:ah});function ih(e){let t={x:oi(e,"x","cos","float32")};return Xs.runKernel(Bt,t)}var oh=hi({cos_:ih});function lh(e){let t={x:oi(e,"x","cosh","float32")};return Xs.runKernel(Wt,t)}var uh=hi({cosh_:lh});function hh(e,t=0,n=!1,r=!1){let a={x:oi(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return Xs.runKernel(Vt,a,s)}var ph=hi({cumprod_:hh});function dh(e,t=0,n=!1,r=!1){let a={x:oi(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return Xs.runKernel(Ut,a,s)}var ch=hi({cumsum_:dh});function fh(e,t,n,r=!1){let a=oi(e,"x","denseBincount"),s=oi(t,"weights","denseBincount");le("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),le(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),le(n>=0,(()=>`size must be non-negative, but got ${n}.`)),le(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));let i={x:a,weights:s},o={size:n,binaryOutput:r};return Xs.runKernel(Ht,i,o)}var mh=hi({denseBincount_:fh});function gh(e,t,n="NHWC"){let r=oi(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];le(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),le(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),le(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),le(i%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));let o={x:r},l={blockSize:t,dataFormat:n};return Xs.runKernel(jt,o,l)}var yh=hi({depthToSpace_:gh});function bh(e,t,n,r,a="NHWC",s=[1,1],i){let o=oi(e,"x","depthwiseConv2d","float32"),l=oi(t,"filter","depthwiseConv2d","float32"),u=o,h=!1;3===o.rank&&(h=!0,u=Ql(o,[1,o.shape[0],o.shape[1],o.shape[2]])),le(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),le(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));let p="NHWC"===a?u.shape[3]:u.shape[1];le(p===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Zl("depthwiseConv2d",r,i);let d={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=Xs.runKernel(qt,d,c);return h?Ql(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var xh=hi({depthwiseConv2d_:bh});function wh(e){let t={x:oi(e,"x","diag")};return Xs.runKernel(Yt,t)}var vh=hi({diag_:wh});function kh(e,t,n,r,a=[1,1],s="NHWC"){let i=oi(e,"x","dilation2d"),o=oi(t,"filter","dilation2d");le(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),le(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),le("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let l=i,u=!1;3===i.rank&&(l=Ql(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),le(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));let h={x:l,filter:o},p={strides:n,pad:r,dilations:a},d=Xs.runKernel(Zt,h,p);return u?Ql(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Ih=hi({dilation2d_:kh}),Sh={};function Nh(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function Th(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function Ch(e,t){let n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){let n=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(n)}n.unshift(r)}}return n}function _h(e,t){let n=oi(e,"a","equal","string_or_numeric"),r=oi(t,"b","equal","string_or_numeric");[n,r]=zs(n,r),Ch(n.shape,r.shape);let a={a:n,b:r};return Xs.runKernel(sn,a)}C(Sh,{assertAndGetBroadcastShape:()=>Ch,getBroadcastDims:()=>Nh,getReductionAxes:()=>Th});var Eh=hi({equal_:_h});function $h(e,t,n){let r=oi(t,"a","where"),a=oi(n,"b","where"),s=oi(e,"condition","where","bool"),i=Ch(Ch(s.shape,r.shape),a.shape),o=Ru(s,i),l=Ru(r,i),u=Ru(a,i),h={condition:o,t:l,e:u};return Xs.runKernel(Ar,h)}var Ah=hi({where_:$h});function Rh(e){let t={x:oi(e,"x","zerosLike")};return Xs.runKernel(da,t)}var Fh=hi({zerosLike_:Rh});function Dh(e,t){let n=oi(e,"a","div"),r=oi(t,"b","div");[n,r]=zs(n,r);let a=al(n,r),s=Fh(a),i=Eh(r,s);return Ah(i,s,a)}var Mh=hi({divNoNan_:Dh});function Oh(e,t){let n=oi(e,"t1","dot"),r=oi(t,"t2","dot");le((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));let a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(le(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){let e=Ql(n,[1,-1]),t=Ql(r,[-1,1]),a=ou(e,t);return Ql(a,[])}if(1===n.rank&&2===r.rank){let e=Ql(n,[1,-1]),t=Ql(r,[r.shape[0],r.shape[1]]),a=ou(e,t);return Ql(a,[a.size])}if(2===n.rank&&1===r.rank){let e=Ql(r,[-1,1]),t=ou(n,e);return Ql(t,[t.size])}{let e=Ql(r,[r.shape[0],r.shape[1]]);return ou(n,e)}}var Lh=hi({dot_:Oh});function zh(e,...t){let n=t.map(((e,t)=>oi(e,`tensors${t}`,"einsum"))),r={equation:e};return Xs.runKernel(tn,n,r)}var Ph=hi({einsum_:zh});function Bh(e){let t={x:oi(e,"x","elu","float32")};return Xs.runKernel(nn,t)}var Wh=hi({elu_:Bh});function Vh(e){let t=oi(e,"x","erf");le("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Co(t,"float32"));let n={x:t};return Xs.runKernel(an,n)}var Uh=hi({erf_:Vh});function Gh(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Hh(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function jh(e,t){let n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);let a=t.map((t=>e[t]));return[n,a]}function qh(e,t){let n=t.map((e=>1));return Hh(e,n,t)}function Kh(e,t,n){le(Gh(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Xh(e,t){if(Gh(e,t))return null;let n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Yh(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Zh(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}function Jh(e,t=null,n=!1){let r={x:oi(e,"x","max")},a={reductionIndices:t,keepDims:n};return Xs.runKernel(Bn,r,a)}var Qh=hi({max_:Jh});function ep(e,t=null,n=!1){let r={x:oi(e,"x","min")},a={axis:t,keepDims:n};return Xs.runKernel(Kn,r,a)}var tp=hi({min_:ep});function np(e,t){let n=oi(e,"base","pow"),r=oi(t,"exp","pow");[n,r]=zs(n,r);let a={a:n,b:r};return Xs.runKernel(hr,a)}var rp=hi({pow_:np});function ap(e,t){if((as(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&as(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ci(e,[],[],t)}function sp(e){let t={x:oi(e,"x","sqrt","float32")};return Xs.runKernel(Pr,t)}var ip=hi({sqrt_:sp});function op(e){let t=oi(e,"x","square"),n={};return Xs.runKernel("Square",{x:t},n)}var lp=hi({square_:op});function up(e,t=null,n=!1){let r=oi(e,"x","sum");"bool"===r.dtype&&(r=Co(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return Xs.runKernel(Br,a,s)}var hp=hi({sum_:up});function pp(e,t="euclidean",n=null,r=!1){e=oi(e,"x","norm");let a=dp(e,t,n),s=a.shape;if(r){let t=ve(n,e.shape);s=qh(a.shape,t)}return Ql(a,s)}function dp(e,t,n=null){if(0===e.rank)return ll(e);if(1!==e.rank&&null===n)return dp(Ql(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return hp(ll(e),n);if(t===1/0)return Qh(ll(e),n);if(t===-1/0)return tp(ll(e),n);if("euclidean"===t||2===t)return ip(hp(rp(ll(e),ap(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Qh(hp(ll(e),n[0]),n[1]-1);if(t===1/0)return Qh(hp(ll(e),n[1]),n[0]);if(t===-1/0)return tp(hp(ll(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return ip(hp(lp(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var cp=hi({norm_:pp});function fp(e,t=null,n=!1){return cp(e,"euclidean",t,n)}var mp=hi({euclideanNorm_:fp});function gp(e){let t={x:oi(e,"x","exp")};return Xs.runKernel(on,t)}var yp=hi({exp_:gp});function bp(e,t=0){let n=oi(e,"x","expandDims","string_or_numeric");le(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));let r={input:n},a={dim:t};return Xs.runKernel(ln,r,a)}var xp=hi({expandDims_:bp});function wp(e){let t={x:oi(e,"x","expm1")};return Xs.runKernel(un,t)}var vp=hi({expm1_:wp});function kp(e,t){let n=oi(e,"x","tile","string_or_numeric");le(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));let r={x:n},a={reps:t};return Xs.runKernel(aa,r,a)}var Ip=hi({tile_:kp});function Sp(e,t,n,r="float32"){null==t&&(t=e);let a=No([e,t],r),s=e<=t?e:t;for(let o=0;o<s;++o)a.set(1,o,o);let i=Ql(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Ip(xp(i,0),[n[0],1,1]);if(2===n.length)return Ip(xp(xp(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ip(xp(xp(xp(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var Np=hi({eye_:Sp});function Tp(e){let t={x:oi(e,"x","floor","float32")};return Xs.runKernel(cn,t)}var Cp=hi({floor_:Tp});function _p(e,t,n=0,r=0){let a=oi(e,"x","gather"),s=oi(t,"indices","gather","int32"),i={x:a,indices:s},o={axis:n,batchDims:r};return Xs.runKernel(gn,i,o)}var Ep=hi({gather_:_p});function $p(e,t){let n=oi(e,"a","greater","string_or_numeric"),r=oi(t,"b","greater","string_or_numeric");[n,r]=zs(n,r),Ch(n.shape,r.shape);let a={a:n,b:r};return Xs.runKernel(bn,a)}var Ap=hi({greater_:$p});function Rp(e,t){let n=oi(e,"a","greaterEqual","string_or_numeric"),r=oi(t,"b","greaterEqual","string_or_numeric");[n,r]=zs(n,r),Ch(n.shape,r.shape);let a={a:n,b:r};return Xs.runKernel(xn,a)}var Fp=hi({greaterEqual_:Rp});function Dp(e){let t={input:oi(e,"input","imag")};return Xs.runKernel(kn,t)}var Mp=hi({imag_:Dp});function Op(e){let t={x:oi(e,"x","isFinite")};return Xs.runKernel(In,t)}var Lp=hi({isFinite_:Op});function zp(e){let t={x:oi(e,"x","isInf")};return Xs.runKernel(Sn,t)}var Pp=hi({isInf_:zp});function Bp(e){let t={x:oi(e,"x","isNaN")};return Xs.runKernel(Nn,t)}var Wp=hi({isNaN_:Bp});function Vp(e,t=.2){let n={x:oi(e,"x","leakyRelu")},r={alpha:t};return Xs.runKernel(Tn,n,r)}var Up=hi({leakyRelu_:Vp});function Gp(e,t){let n=oi(e,"a","less","string_or_numeric"),r=oi(t,"b","less","string_or_numeric");[n,r]=zs(n,r),Ch(n.shape,r.shape);let a={a:n,b:r};return Xs.runKernel(Cn,a)}var Hp=hi({less_:Gp});function jp(e,t){let n=oi(e,"a","lessEqual","string_or_numeric"),r=oi(t,"b","lessEqual","string_or_numeric");[n,r]=zs(n,r),Ch(n.shape,r.shape);let a={a:n,b:r};return Xs.runKernel(_n,a)}var qp=hi({lessEqual_:jp});function Kp(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return Xs.runKernel(En,{},r)}function Xp(e,t=5,n=1,r=1,a=.5){let s=oi(e,"x","localResponseNormalization");le(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),le(fe(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=Ql(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:a},h=Xs.runKernel(zn,l,u);return o?Ql(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Yp=hi({localResponseNormalization_:Xp});function Zp(e){let t={x:oi(e,"x","log","float32")};return Xs.runKernel($n,t)}var Jp=hi({log_:Zp});function Qp(e){let t={x:oi(e,"x","log1p")};return Xs.runKernel(An,t)}var ed=hi({log1p_:Qp});function td(e){return le(De(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{let r=oi(t,"x","tf.grad","string_or_numeric"),a=null!=n?oi(n,"dy","tf.grad"):null;return Xs.tidy((()=>{let{value:t,grads:n}=Xs.gradients((()=>e(r)),[r],a);return null!=a&&ue(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),od(n),n[0]}))}}function nd(e){return le(De(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{le(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));let r=li(t,"args","tf.grads","string_or_numeric"),a=null!=n?oi(n,"dy","tf.grads"):null;return Xs.tidy((()=>{let{value:t,grads:n}=Xs.gradients((()=>e(...r)),r,a);return null!=a&&ue(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),od(n),n}))}}function rd(e){return le(De(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{le(t instanceof Ts,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),le(null==n||n instanceof Ts,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));let{grads:r,value:a}=Xs.gradients((()=>e(t)),[t],n);return od(r),{grad:r[0],value:a}}}function ad(e){return le(De(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{le(Array.isArray(t)&&t.every((e=>e instanceof Ts)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),le(null==n||n instanceof Ts,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));let r=Xs.gradients((()=>e(...t)),t,n);return null!=n&&ue(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),od(r.grads),r}}function sd(e,t){le(De(e),(()=>"The f passed in variableGrads(f) must be a function")),le(null==t||Array.isArray(t)&&t.every((e=>e instanceof _s)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));let n=null!=t;if(!n){t=[];for(let e in Xs.registeredVariables)t.push(Xs.registeredVariables[e])}let r=n?t.filter((e=>!e.trainable)):null,a=t.length;t=t.filter((e=>e.trainable)),le(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));let s=!0,{value:i,grads:o}=Xs.gradients(e,t,null,s);le(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),le(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));let l={};return t.forEach(((e,t)=>{null!=o[t]&&(l[e.name]=o[t])})),null!=r&&r.forEach((e=>l[e.name]=null)),{value:i,grads:l}}function id(e){return Xs.customGrad(e)}function od(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function ld(e){let t={x:oi(e,"x","neg")};return Xs.runKernel(er,t)}var ud=hi({neg_:ld});function hd(e){let t={x:oi(e,"x","softplus")};return Xs.runKernel(zr,t)}var pd=hi({softplus_:hd});function dd(e){let t=oi(e,"x","logSigmoid");return id((e=>({value:ud(pd(ud(e))),gradFunc:t=>il(t,uu(ud(e)))})))(t)}var cd=hi({logSigmoid_:dd});function fd(e,t){let n=oi(e,"a","sub"),r=oi(t,"b","sub");[n,r]=zs(n,r);let a={a:n,b:r};return Xs.runKernel(ta,a)}var md=hi({sub_:fd});function gd(e,t=-1){let n=oi(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return id(((e,n)=>{let r=Qh(e,t,!0),a=md(e,r),s=md(Co(a,"float32"),Jp(hp(yp(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{let[r]=n,a=!0,s=yp(r);return md(e,il(hp(e,t,a),s))}}}))(n)}var yd=hi({logSoftmax_:gd});function bd(e,t=null,n=!1){let r=oi(e,"x","logSumExp"),a=ve(t,r.shape),s=Qh(r,a,!0),i=md(r,s),o=yp(i),l=hp(o,a),u=Jp(l),h=el(Ql(s,u.shape),u);if(n){let e=qh(h.shape,a);return Ql(h,e)}return h}var xd=hi({logSumExp_:bd});function wd(e,t){let n=oi(e,"a","logicalAnd","bool"),r=oi(t,"b","logicalAnd","bool");Ch(n.shape,r.shape);let a={a:n,b:r};return Xs.runKernel(Rn,a)}var vd=hi({logicalAnd_:wd});function kd(e){let t={x:oi(e,"x","logicalNot","bool")};return Xs.runKernel(Fn,t)}var Id=hi({logicalNot_:kd});function Sd(e,t){let n=oi(e,"a","logicalOr","bool"),r=oi(t,"b","logicalOr","bool");Ch(n.shape,r.shape);let a={a:n,b:r};return Xs.runKernel(Dn,a)}var Nd=hi({logicalOr_:Sd});function Td(e,t){let n=oi(e,"a","logicalXor","bool"),r=oi(t,"b","logicalXor","bool");return Ch(n.shape,r.shape),vd(Nd(e,t),Id(vd(e,t)))}var Cd=hi({logicalXor_:Td}),_d=2147483648;function Ed(e,t,n="left"){let r=oi(e,"sortedSequence","searchSorted"),a=oi(t,"values","searchSorted"),s=r.shape[r.shape.length-1],i=a.shape[a.shape.length-1],o=Ql(r,[-1,s]),l=Ql(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(pe(l.shape)>=_d)throw new Error(`values tensor size must less than ${_d}`);if(o.shape[1]>=_d)throw new Error(`trailing dim_size must less than ${_d} for int32 output type, was ${o.shape[1]}`);let u={sortedSequence:o,values:l},h={side:n};return Xs.runKernel($r,u,h)}var $d=hi({searchSorted_:Ed});function Ad(e,t){return $d(e,t,"left")}function Rd(e,t,n,r,a){let s=oi(e,"x","maxPool"),i=1,o=s,l=!1;3===s.rank&&(l=!0,o=Ql(s,[1,s.shape[0],s.shape[1],s.shape[2]])),le(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),le(Kl(n,i),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),Zl("maxPool",r,a);let u={x:o},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a},p=Xs.runKernel(Vn,u,h);return l?Ql(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Fd=hi({maxPool_:Rd});function Dd(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=oi(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=Ql(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),le(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),le("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Zl("maxPool3d",r,a);let u={x:o},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},p=Xs.runKernel(Gn,u,h);return l?Ql(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Md=hi({maxPool3d_:Dd});function Od(e,t,n,r,a=!1){let s={x:oi(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=Xs.runKernel(jn,s,i);return{result:o[0],indexes:o[1]}}var Ld=hi({maxPoolWithArgmax_:Od});function zd(e,t){let n=oi(e,"a","maximum"),r=oi(t,"b","maximum");[n,r]=zs(n,r),"bool"===n.dtype&&(n=Co(n,"int32"),r=Co(r,"int32")),Ch(n.shape,r.shape);let a={a:n,b:r};return Xs.runKernel(Wn,a)}var Pd=hi({maximum_:zd});function Bd(e,t=null,n=!1){let r={x:oi(e,"x","mean")},a={axis:t,keepDims:n};return Xs.runKernel(qn,r,a)}var Wd=hi({mean_:Bd});function Vd(e,t="float32"){if(Ue(e),"complex64"===t){let t=Vd(e,"float32"),n=Vd(e,"float32");return di(t,n)}let n=We(pe(e),t);return Xs.makeTensor(n,e,t)}function Ud(e,t="float32"){if(Ue(e),"complex64"===t){let t=Ud(e,"float32"),n=Vd(e,"float32");return di(t,n)}let n=Be(pe(e),t);return Xs.makeTensor(n,e,t)}function Gd(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=oi(e,"x","meshgrid",e instanceof Ts?e.dtype:"float32");if(void 0===t)return[r];let a=oi(t,"y","meshgrid",t instanceof Ts?t.dtype:"float32"),s=pe(r.shape),i=pe(a.shape);return"xy"===n?(r=Ql(r,[1,-1]),a=Ql(a,[-1,1]),[ou(Ud([i,1],r.dtype),r),ou(a,Ud([1,s],a.dtype))]):(r=Ql(r,[-1,1]),a=Ql(a,[1,-1]),[ou(r,Ud([1,i],r.dtype)),ou(Ud([s,1],a.dtype),a)])}function Hd(e,t){let n=oi(e,"a","minimum"),r=oi(t,"b","minimum");[n,r]=zs(n,r),"bool"===n.dtype&&(n=Co(n,"int32"),r=Co(r,"int32")),Ch(n.shape,r.shape);let a={a:n,b:r};return Xs.runKernel(Xn,a)}var jd=hi({minimum_:Hd});function qd(e,t,n){le("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));let r=oi(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");le(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));let a="reflect"===n?1:0;for(let o=0;o<r.rank;o++)le(2===t[o].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),le(t[o][0]>=0&&t[o][0]<=r.shape[o]-a&&t[o][1]>=0&&t[o][1]<=r.shape[o]-a,(()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-a} or less than 0 for input of shape ${r.shape}`));let s={paddings:t,mode:n},i={x:r};return Xs.runKernel(Yn,i,s)}var Kd=hi({mirrorPad_:qd});function Xd(e,t){let n=oi(e,"a","mod"),r=oi(t,"b","mod");[n,r]=zs(n,r);let a={a:n,b:r};return Xs.runKernel(Zn,a)}var Yd=hi({mod_:Xd});function Zd(e,t=null,n=!1){e=oi(e,"x","moments");let r=ve(t,e.shape),a=Wd(e,r,n),s=a.shape;n||(s=qh(a.shape,r));let i=lp(md(Co(e,"float32"),Ql(a,s))),o=Wd(i,r,n);return{mean:a,variance:o}}var Jd=hi({moments_:Zd});function Qd(e,t,n,r){let a=oi(t,"data","multiRNNCell"),s=li(n,"c","multiRNNCell"),i=li(r,"h","multiRNNCell"),o=a,l=[];for(let p=0;p<e.length;p++){let t=e[p](o,s[p],i[p]);l.push(t[0]),l.push(t[1]),o=t[1]}let u=[],h=[];for(let p=0;p<l.length;p+=2)u.push(l[p]),h.push(l[p+1]);return[u,h]}var ec=hi({multiRNNCell_:Qd});function tc(e,t,n,r=!1){let a=oi(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:1===i?Ql(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},u=Xs.runKernel(Jn,o,l);return 1===i?Ql(u,[u.size]):u}var nc=hi({multinomial_:tc});function rc(e,t){let n=oi(e,"a","notEqual","string_or_numeric"),r=oi(t,"b","notEqual","string_or_numeric");[n,r]=zs(n,r),Ch(n.shape,r.shape);let a={a:n,b:r};return Xs.runKernel(tr,a)}var ac=hi({notEqual_:rc});function sc(e,t,n=1,r=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:oi(e,"indices","oneHot","int32")},i={dtype:a,depth:t,onValue:n,offValue:r};return Xs.runKernel(ir,s,i)}var ic=hi({oneHot_:sc});function oc(e){let t={x:oi(e,"x","onesLike")};return Xs.runKernel(sr,t)}var lc=hi({onesLike_:oc});function uc(e,t){let n=oi(e,"v1","outerProduct"),r=oi(t,"v2","outerProduct");le(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));let a=Ql(n,[-1,1]),s=Ql(r,[1,-1]);return ou(a,s)}var hc=hi({outerProduct_:uc});function pc(e,t,n=0){let r=oi(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:n},s={x:r};return Xs.runKernel(lr,s,a)}var dc=hi({pad_:pc});function cc(e,t,n=0){return le(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),dc(e,[t],n)}var fc=hi({pad1d_:cc});function mc(e,t,n=0){return le(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),dc(e,t,n)}var gc=hi({pad2d_:mc});function yc(e,t,n=0){return le(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),dc(e,t,n)}var bc=hi({pad3d_:yc});function xc(e,t,n=0){return le(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),dc(e,t,n)}var wc=hi({pad4d_:xc});function vc(e,t,n){let r=oi(e,"x","spaceToBatchND");le(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),le(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),le(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]===0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));let a={x:r},s={blockShape:t,paddings:n};return Xs.runKernel(Wr,a,s)}var kc=hi({spaceToBatchND_:vc});function Ic(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");let o=oi(e,"x","maxPool"),l=o,u=!1;3===o.rank&&(u=!0,l=Ql(o,[1,o.shape[0],o.shape[1],o.shape[2]])),le(Kl(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));let h,p=Dl(l.shape,t,s,a,r),d=[p.dilationHeight,p.dilationWidth];h="same"===r?Nc([p.filterHeight,p.filterWidth],d):[[0,0],[0,0]];let c=1===d[0]&&1===d[1],[f,m]=Sc([p.inHeight,p.inWidth],d,h),g=c?r:"valid",y=c?l:kc(l,d,f),b=("avg"===n?()=>tu(y,t,s,g,i):()=>Fd(y,t,s,g,i))(),x=c?b:yu(b,d,m);return u?Ql(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function Sc(e,t,n){let r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}function Nc(e,t){let n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}var Tc=hi({pool_:Ic});function Cc(e,t){let n=oi(e,"x","prelu"),r=oi(t,"alpha","prelu"),a={x:n,alpha:r};return Xs.runKernel(pr,a)}var _c=hi({prelu_:Cc});function Ec(e,t=null,n=!1){let r=oi(e,"x","prod");"bool"===r.dtype&&(r=Co(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return Xs.runKernel(dr,a,s)}var $c=hi({prod_:Ec});function Ac(e,t,n,r){let a=e.map(((e,t)=>oi(e,`tensors${t}`,"raggedGather","int32"))),s=oi(t,"paramsDenseValues","raggedGather"),i=oi(n,"indices","raggedGather","int32"),o={paramsNestedSplits:a,paramsDenseValues:s,indices:i},l={outputRaggedRank:r},u=Xs.runKernel(cr,o,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}var Rc=hi({raggedGather_:Ac});function Fc(e,t,n){let r=oi(e,"starts","raggedRange"),a=oi(t,"limits","raggedRange",r.dtype),s=oi(n,"deltas","raggedRange",r.dtype),i={starts:r,limits:a,deltas:s},o=Xs.runKernel(fr,i);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}var Dc=hi({raggedRange_:Fc});function Mc(e,t,n,r,a){let s=oi(e,"shape","raggedTensorToTensor","int32"),i=oi(t,"values","raggedTensorToTensor"),o=oi(n,"defaultValue","raggedTensorToTensor",i.dtype),l=r.map(((e,t)=>oi(e,`tensors${t}`,"raggedTensorToTensor","int32"))),u={shape:s,values:i,defaultValue:o,rowPartitionTensors:l},h={rowPartitionTypes:a};return Xs.runKernel(mr,u,h)}var Oc=hi({raggedTensorToTensor_:Mc});function Lc(e,t,n){Ue(e);let r=pe(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let s=0;s<r;s++)a[s]=t();return Xs.makeTensor(a,e,n)}var zc=hi({rand_:Lc}),Pc=E(W()),Bc={};C(Bc,{TEST_EPSILON_FLOAT16:()=>Vc,createVideoElement:()=>Qc,encodeStrings:()=>Jc,expectArrayBuffersEqual:()=>Zc,expectArraysClose:()=>Uc,expectArraysEqual:()=>qc,expectNumbersClose:()=>Kc,expectPromiseToFail:()=>jc,expectValuesInRange:()=>Yc,play:()=>ef,testEpsilon:()=>Gc});var Wc=.001,Vc=.1;function Uc(e,t,n){return null==n&&(n=Gc()),Hc(e,t,((e,t)=>Xc(e,t,n)))}function Gc(){return 32===Xs.backend.floatPrecision()?Wc:Vc}function Hc(e,t,n){let r=!0;if((as(e)||as(t))&&(r=!1),as(e)&&as(t)&&(r=!0),r){let n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){let n=ai(e),r=ai(t);if(!ce(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}let a=as(e)?e:ss(e),s=as(t)?t:ss(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let i=0;i<s.length;++i){let e=a[i],t=s[i];if(!n(e,t))throw new Error(`Arrays differ: actual[${i}] = ${e}, expected[${i}] = ${t}.\nActual:   ${a}.\nExpected: ${s}.`)}"undefined"!=typeof expect&&expect().nothing()}function jc(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!=typeof expect&&expect().nothing()}function qc(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return $e(e)||$e(e[0])||$e(t)||$e(t[0])?Hc(e,n,((e,t)=>e==t)):Hc(e,t,((e,t)=>Xc(e,t,0)))}function Kc(e,t,n){if(null==n&&(n=Gc()),!Xc(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function Xc(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Yc(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Zc(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let a=0;a<r.length;a++)if(n[a]!==r[a])throw new Error(`Expected ArrayBuffer value at ${a} to be ${r[a]} but got ${n[a]} instead`)}function Jc(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?Jc(n):e[t]=ns(n)}return e}function Qc(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function ef(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}var tf=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=a||Math.random();this.random=Pc.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},nf=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=Pc.alea(a.toString()),this.randn=new tf(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}},rf=class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Pc.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function af(e,t,n=1,r="float32",a){if(Ue(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);let s=new nf(t,n,r,a),i=No(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var sf=hi({randomGamma_:af});function of(e,t=0,n=1,r,a){if(Ue(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);let s=new tf(t,n,r,!1,a),i=No(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var lf=hi({randomNormal_:of});function uf(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return lf(e,0,1,t,n)}var hf=hi({randomStandardNormal_:uf});function pf(e,t=0,n=1,r="float32",a){Ue(e);let s=No(e,r),i=new rf(t,n,null,a);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}var df=hi({randomUniform_:pf});function cf(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:n,dtype:r};return Xs.runKernel(gr,{},a)}function ff(e){let t={input:oi(e,"input","real")};return Xs.runKernel(yr,t)}var mf=hi({real_:ff});function gf(e){let t={x:oi(e,"x","reciprocal")};return Xs.runKernel(br,t)}var yf=hi({reciprocal_:gf});function bf(e){let t={x:oi(e,"x","relu")};return Xs.runKernel(xr,t)}var xf=hi({relu_:bf});function wf(e){let t={x:oi(e,"x","relu6")};return Xs.runKernel(Nr,t)}var vf=hi({relu6_:wf});function kf(e,t){let n={x:oi(e,"x","reverse")},r={dims:t};return Xs.runKernel(Tr,n,r)}var If=hi({reverse_:kf});function Sf(e){let t=oi(e,"x","reverse");return le(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),If(t,0)}var Nf=hi({reverse1d_:Sf});function Tf(e,t){let n=oi(e,"x","reverse");return le(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),If(n,t)}var Cf=hi({reverse2d_:Tf});function _f(e,t){let n=oi(e,"x","reverse");return le(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),If(n,t)}var Ef=hi({reverse3d_:_f});function $f(e,t){let n=oi(e,"x","reverse");return le(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),If(n,t)}var Af=hi({reverse4d_:$f});function Rf(e){let t={x:oi(e,"x","round")};return Xs.runKernel(Cr,t)}var Ff=hi({round_:Rf});function Df(e){let t={x:oi(e,"x","rsqrt","float32")};return Xs.runKernel(_r,t)}var Mf=hi({rsqrt_:Df});function Of(e){let t={x:oi(e,"x","selu")};return Xs.runKernel(Rr,t)}var Lf=hi({selu_:Of});function zf(e,t,n,r,a,s=[1,1],i="NHWC"){let o=oi(e,"x","separableConv2d"),l=oi(t,"depthwiseFilter","separableConv2d"),u=oi(n,"pointwiseFilter","separableConv2d"),h=o,p=!1;if(3===o.rank&&(p=!0,h=Ql(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");le(4===h.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`)),le(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),le(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),le(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),le(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));let d=l.shape[2],c=l.shape[3];le(u.shape[2]===d*c,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*c}, but got ${u.shape[2]}.`));let f=xh(h,l,r,a,i,s),m=qu(f,u,1,"valid",i);return p?Ql(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Pf=hi({separableConv2d_:zf});async function Bf(e,t){let n=oi(e,"x","setdiff1d"),r=oi(t,"y","setdiff1d");le(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),le(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),le(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));let a=await n.data(),s=await r.data(),i=new Set(s),o=0;for(let h=0;h<a.length;h++)i.has(a[h])||o++;let l=new ws([o],n.dtype),u=new ws([o],"int32");for(let h=0,p=0;h<a.length;h++)i.has(a[h])||(l.values[p]=a[h],u.values[p]=h,p++);return[l.toTensor(),u.toTensor()]}var Wf=Bf;function Vf(e){let t={x:oi(e,"x","sign")};return Xs.runKernel(Or,t)}var Uf=hi({sign_:Vf});function Gf(e){let t={x:oi(e,"x","sin","float32")};return Xs.runKernel(Dr,t)}var Hf=hi({sin_:Gf});function jf(e){let t={x:oi(e,"x","sinh")};return Xs.runKernel(Mr,t)}var qf=hi({sinh_:jf});function Kf(e,t,n){let r=oi(e,"x","slice1d");return le(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),pu(r,[t],[n])}var Xf=hi({slice1d_:Kf});function Yf(e,t,n){let r=oi(e,"x","slice2d");return le(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),pu(r,t,n)}var Zf=hi({slice2d_:Yf});function Jf(e,t,n){let r=oi(e,"x","slice3d");return le(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),pu(r,t,n)}var Qf=hi({slice3d_:Jf});function em(e,t,n){let r=oi(e,"x","slice4d");return le(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),pu(r,t,n)}var tm=hi({slice4d_:em});function nm(e,t=-1){let n=oi(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},a={dim:t};return Xs.runKernel(Ur,r,a)}var rm=hi({softmax_:nm});function am(e){le("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));let t={input:e};return Xs.runKernel(hn,t)}var sm=hi({fft_:am});function im(e){le("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));let t={input:e};return Xs.runKernel(vn,t)}var om=hi({ifft_:im});function lm(e){let t,n=e.shape[e.shape.length-1],r=e.size/n;if(n<=2){let a=Ql(e,[r,n]);t=om(a)}else{let a=[r,2*(n-1)],s=Ql(mf(e),[r,n]),i=Ql(Mp(e),[r,n]),o=If(pu(s,[0,1],[r,n-2]),1),l=il(If(pu(i,[0,1],[r,n-2]),1),ap(-1)),u=su([s,o],1),h=su([i,l],1),p=Ql(di(u,h),[a[0],a[1]]);t=om(p)}if(t=mf(t),3===e.rank&&0!==e.shape[0]){let n=t,r=e.shape[0];t=Ql(t,[r,t.shape[0]/r,t.shape[1]]),n.dispose()}return t}var um=hi({irfft_:lm});function hm(e,t,n=0){let r={x:oi(e,"x","split")},a={numOrSizeSplits:t,axis:n};return Xs.runKernel(Vr,r,a)}var pm=hi({split_:hm});function dm(e,t){le("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n,r=e.shape[e.shape.length-1],a=e.size/r;if(null!=t&&t<r){let a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,n=pu(e,a,s),r=t}else if(null!=t&&t>r){let a=e.shape.map((e=>e));a[e.shape.length-1]=t-r,n=su([e,Vd(a)],e.shape.length-1),r=t}else n=e;let s=Fh(n),i=Ql(di(n,s),[a,r]),o=sm(i),l=Math.floor(r/2)+1,u=mf(o),h=Mp(o),p=pm(u,[l,r-l],u.shape.length-1),d=pm(h,[l,r-l],h.shape.length-1),c=n.shape.slice();return c[n.shape.length-1]=l,Ql(di(p[0],d[0]),c)}var cm=hi({rfft_:dm});function fm(e,t){let n=oi(e,"a","squaredDifference"),r=oi(t,"b","squaredDifference");[n,r]=zs(n,r),Ch(n.shape,r.shape);let a={a:n,b:r},s={};return Xs.runKernel(Xr,a,s)}var mm=hi({squaredDifference_:fm});function gm(e,t){let n=oi(e,"x","squeeze","string_or_numeric");return Ql(n,ke(n.shape,t).newShape)}var ym=hi({squeeze_:gm});function bm(e,t=0){let n=li(e,"tensors","stack","string_or_numeric");le(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&le(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));let r=n,a={axis:t};return Xs.runKernel(or,r,a)}var xm=hi({stack_:bm});function wm(e,t=0){let n={x:oi(e,"x","step")},r={alpha:t};return Xs.runKernel(ca,n,r)}var vm=hi({step_:wm});function km(e,t,n,r,a=0,s=0,i=0,o=0,l=0){let u={x:oi(e,"x","stridedSlice","string_or_numeric")},h={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Xs.runKernel(Zr,u,h)}var Im=hi({stridedSlice_:km});function Sm(e){let t={x:oi(e,"x","tan","float32")};return Xs.runKernel(na,t)}var Nm=hi({tan_:Sm});function Tm(e,t){he(e);let n=ai(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ci(e,null,n,t)}function Cm(e,t,n){if(he(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");let r=ai(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ci(e,t,r,n)}function _m(e,t,n){if(he(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");let r=ai(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ci(e,t,r,n)}function Em(e,t,n){if(he(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");let r=ai(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ci(e,t,r,n)}function $m(e,t,n){if(he(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");let r=ai(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ci(e,t,r,n)}function Am(e,t,n){if(he(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");let r=ai(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,ci(e,t,r,n)}function Rm(e,t=1,n=!0){let r=oi(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,l]=Xs.runKernel(sa,s,i);return{values:o,indices:l}}var Fm=hi({topk_:Rm});function Dm(e,t=0,n=1,r,a){if(Ue(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");let s=new tf(t,n,r,!0,a),i=No(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var Mm=hi({truncatedNormal_:Dm});function Om(e,t=0){let n=oi(e,"x","unique","string_or_numeric");le(n.rank>0,(()=>"The input tensor must be at least 1D"));let r={x:n},a={axis:t},[s,i]=Xs.runKernel(la,r,a);return{values:s,indices:i}}var Lm=hi({unique_:Om});function zm(e,t,n){let r=oi(e,"x","unsortedSegmentSum"),a=oi(t,"segmentIds","unsortedSegmentSum","int32");le(fe(n),(()=>"numSegments must be of dtype int"));let s={x:r,segmentIds:a},i={numSegments:n};return Xs.runKernel(ha,s,i)}var Pm=hi({unsortedSegmentSum_:zm});function Bm(e,t=0){let n=oi(e,"x","unstack","string_or_numeric");le(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));let r={value:n},a={axis:t};return Xs.runKernel(ua,r,a)}var Wm=hi({unstack_:Bm});function Vm(e,t){return $d(e,t,"right")}function Um(e,t=!0,n,r){return Xs.makeVariable(e,t,n,r)}function Gm(e,t){let n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);let r=No(e,"int32"),a=No([n.length,e.length],"int32");for(let s=0;s<n.length;s++){let t=r.indexToLoc(n[s]),i=s*e.length;a.values.set(t,i)}return a.toTensor()}async function Hm(e){let t=oi(e,"condition","whereAsync","bool"),n=await t.data(),r=Gm(t.shape,n);return e!==t&&t.dispose(),r}var jm=Hm;async function qm(e,t,n){let r=oi(e,"tensor","boolMask"),a=oi(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;le(i>0,(()=>"mask cannot be scalar")),ue(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=s;m<s+i;m++)l*=o[m];let u=o.slice(0,s).concat([l],o.slice(s+i)),h=Ql(r,u),p=Ql(a,[-1]),d=await jm(p),c=ym(d,[1]),f=Ep(h,c,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),c.dispose(),h.dispose(),p.dispose(),d.dispose(),f}var Km=qm;function Xm(e,t,n){let r=oi(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),le(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{le(e>=0&&e<r.rank,(()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${t}`))})),r.rank<=1)return r.clone();let a={x:r},s={perm:t};return"complex64"===r.dtype?Bo((()=>{let e=mf(r),t=Mp(r);return e=Xs.runKernel(oa,{x:e},s),t=Xs.runKernel(oa,{x:t},s),n&&(t=ud(t)),di(e,t)})):Xs.runKernel(oa,a,s)}var Ym=hi({transpose_:Xm});function Zm(e,t,n,r,a=!0){let s=oi(e,"v","movingAverage"),i=oi(t,"x","movingAverage"),o=oi(n,"decay","movingAverage");Ps(s,i),le(ce(s.shape,i.shape),(()=>"Shape mismatch in v and x"));let l=ap(1),u=md(l,o),h=il(md(i,s),u);if(a){le(null!=r,(()=>"When using zeroDebias: true, step is required."));let e=oi(r,"step","movingAverage");h=al(h,md(l,rp(o,e)))}return el(s,h)}var Jm=hi({movingAverage_:Zm}),Qm={};function eg(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let i=0;i<a;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==e[i+r])throw new Error(s+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${e[i+a]})`)}function tg(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}eg(n,t,e)}function ng(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let p=a;p<s;++p)i*=n[p];let o=a<1?1:a,l=pe(t.shape)/o,u=[...Oe(n.slice(0,a)),1],h=pe(n);return{sliceRank:a,numUpdates:l,sliceSize:i,strides:u,outputSize:h}}function rg(e,t,n){Ue(n);let r=oi(e,"indices","scatterND","int32"),a=oi(t,"updates","scatterND");tg(a,r,n);let s={indices:r,updates:a},i={shape:n};return Xs.runKernel(Er,s,i)}C(Qm,{calculateShapes:()=>ng,validateInput:()=>tg,validateUpdateShape:()=>eg});var ag=hi({scatterND_:rg});function sg(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function ig(e,t,n,r=0){Ue(n);let a=oi(e,"sparseIndices","sparseToDense","int32"),s=oi(t,"sparseValues","sparseToDense","string_or_numeric"),i=oi(r,"defaultValue","sparseToDense",s.dtype);sg(a,s,n,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return Xs.runKernel(Kr,o,l)}var og=hi({sparseToDense_:ig});function lg(e,t){let n=oi(t,"indices","gatherND","int32"),r={params:oi(e,"x","gatherND","string_or_numeric"),indices:n};return Xs.runKernel(yn,r)}var ug=hi({gatherND_:lg});function hg(e,t){if(null==t)return e.shape.slice();if(ce(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}function pg(e,t,n,r){let a=oi(e,"x","dropout");if(le("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),le(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Ts?a.clone():a;let s=hg(a,n),i=1-t,o=al(Cp(el(df(s,0,1,"float32",r),i)),i);return il(a,o)}var dg=hi({dropout_:pg});function cg(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function fg(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Tm(a,"float32")}async function mg(e,t,n=1){let r=oi(e,"predictions","inTopK"),a=oi(t,"targets","inTopK");le(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),le(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),ue(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];le(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));let i=await r.data(),o=await a.data(),[l,u]=[i.length/s,s],h=Ie("bool",l);for(let p=0;p<l;p++){let e=p*u,t=i.subarray(e,e+u),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort(((e,t)=>t.value-e.value)),h[p]=0;for(let a=0;a<n;a++)if(r[a].index===o[p]){h[p]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),fi(h,a.shape,"bool")}var gg=mg,yg={};function bg(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=Ql(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Ql(t,[1,t.shape[0],t.shape[1],t.shape[2]])),le(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),le(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),le(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));let u="NHWC"===s?o.shape[3]:o.shape[1],h="NHWC"===s?l.shape[3]:l.shape[1];le(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),le(h===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`)),Zl("conv2dDerFilter",a,i);let p={x:o,dy:l},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return Xs.runKernel(Mt,p,d)}C(yg,{conv2d:()=>Ng,depthwiseConv2d:()=>Ag,matMul:()=>Fg});var xg=hi({conv2DBackpropFilter_:bg});function wg(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return il(e,vm(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function vg(e,t){let n=t,r=Th(e.shape,t.shape);return r.length>0&&(n=hp(n,r)),Ql(n,e.shape)}function kg(e,t,n,r){if("linear"===t)return e;if("relu"===t)return xf(e);if("elu"===t)return Wh(e);if("relu6"===t)return vf(e);if("prelu"===t)return _c(e,n);if("leakyrelu"===t)return Up(e,r);if("sigmoid"===t)return uu(e);throw new Error(`Unknown fused activation ${t}.`)}var Ig=(e,t)=>!(e>0)||"linear"===t;function Sg({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(l=l||"linear",!1===Ig(Xs.state.gradientDepth,l)){le("NHWC"===a,(()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let p=qu(e,t,n,r,a,s,i);return null!=o&&(p=el(p,o)),kg(p,l,u,h)}let p=oi(e,"x","conv2d","float32"),d=oi(t,"filter","conv2d","float32"),c=p,f=!1;3===p.rank&&(f=!0,c=Ql(p,[1,p.shape[0],p.shape[1],p.shape[2]])),le(4===c.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`)),le(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),Zl("fused conv2d",r,i);let m="NHWC"===a?c.shape[3]:c.shape[1];le(d.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`)),le(Kl(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));let g,y,b=Ol(c.shape,d.shape,n,s,r,i);if(null!=o&&(g=oi(o,"bias","fused conv2d"),[g]=zs(g,p),"NHWC"===a?Ch(b.outShape,g.shape):(le(g.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`)),le(0===g.shape.length||g.shape[0]===b.outChannels||1===g.shape[0],(()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${b.outChannels})`)))),null!=u){let e=u.shape;if(le(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)le(1===e[0]||e[0]===b.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${b.outChannels}).`));else if(3===e.length)try{Ch(e,b.outShape)}catch(k){let t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(t)}y=oi(u,"prelu weights","fused conv2d")}let x=(e,t)=>{le("NHWC"===a,(()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`));let[i,o,u,h]=t,p=wg(e,u,l);le(ql(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));let d=Zu(o.shape,p,i,n,r),c=xg(o,p,i.shape,n,r),f=[d,c];if(null!=h){let e=vg(h,p);f.push(e)}return f},w={x:c,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:h};return null==o?id(((e,t,n)=>{let r=Xs.runKernel(ya,w,v);return n([t,e,r]),f&&(r=Ql(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(c,d):id(((e,t,n,r)=>{let a=Xs.runKernel(ya,w,v);return r([t,e,a,n]),f&&(a=Ql(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}))(c,d,g)}var Ng=hi({fusedConv2d_:Sg});function Tg(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=Ql(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Ql(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},h={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return Xs.runKernel(Kt,u,h)}var Cg=hi({depthwiseConv2dNativeBackpropFilter_:Tg});function _g(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=Ql(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},h={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},p=Xs.runKernel(Xt,u,h);return l?Ql(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Eg=hi({depthwiseConv2dNativeBackpropInput_:_g});function $g({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(!1===Ig(Xs.state.gradientDepth,l)){let p=xh(e,t,n,r,a,s,i);return null!=o&&(p=el(p,o)),kg(p,l,u,h)}let p=oi(e,"x","depthwiseConv2d","float32"),d=oi(t,"filter","depthwiseConv2d","float32"),c=p,f=!1;3===p.rank&&(f=!0,c=Ql(p,[1,p.shape[0],p.shape[1],p.shape[2]])),le(4===c.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`)),le(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),le(c.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==s&&(s=[1,1]),le(Kl(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Zl("fused depthwiseConv2d",r,i);let m,g,y=Ol(c.shape,d.shape,n,s,r,i,!0);null!=o&&(m=oi(o,"bias","fused conv2d"),[m]=zs(m,p),Ch(y.outShape,m.shape)),null!=u&&(g=oi(u,"prelu weights","fused depthwiseConv2d"));let b=(e,t)=>{le(ql(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));let[a,o,u,h]=t,p=wg(e,u,l),d=Eg(o.shape,p,a,n,r,s,i),c=Cg(o,p,a.shape,n,r,s,i);if(null!=h){let e=vg(m,p);return[d,c,e]}return[d,c]},x={x:c,filter:d,bias:m,preluActivationWeights:g},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:h};return null==o?id(((e,t,n)=>{let r=Xs.runKernel(ba,x,w);return n([t,e,r]),f&&(r=Ql(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(c,d):id(((e,t,n,r)=>{let a=Xs.runKernel(ba,x,w);return r([t,e,a,n]),f&&(a=Ql(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(c,d,m)}var Ag=hi({fusedDepthwiseConv2d_:$g});function Rg({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===Ig(Xs.state.gradientDepth,s)){let l=ou(e,t,n,r);return null!=a&&(l=el(l,a)),kg(l,s,i,o)}let l=oi(e,"a","fused matMul"),u=oi(t,"b","fused matMul");[l,u]=zs(l,u);let h=n?l.shape[l.rank-2]:l.shape[l.rank-1],p=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=pe(f),y=pe(m);le(h===p,(()=>`Error in fused matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));let b,x,w=Ch(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,c]),v=Ql(l,n?[g,h,d]:[g,d,h]),k=Ql(u,r?[y,c,p]:[y,p,c]);null!=a&&(b=oi(a,"bias","fused matMul"),[b]=zs(b,l),Ch(w,b.shape)),null!=i&&(x=oi(i,"prelu weights","fused matMul"));let I=(e,t)=>{let i,o,[l,u,h,p]=t,d=wg(Ql(e,h.shape),h,s);if(n||r?!n&&r?(i=ou(d,u,!1,!1),o=ou(d,l,!0,!1)):n&&!r?(i=ou(u,d,!1,!0),o=ou(l,d,!1,!1)):(i=ou(u,d,!0,!0),o=ou(d,l,!0,!0)):(i=ou(d,u,!1,!0),o=ou(l,d,!0,!1)),null!=a){let e=vg(p,d);return[i,o,e]}return[i,o]},S={a:v,b:k,bias:b,preluActivationWeights:x},N={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return null==a?id(((e,t,n)=>{let r=Xs.runKernel(ga,S,N);return n([e,t,r]),{value:Ql(r,w),gradFunc:I}}))(v,k):id(((e,t,n,r)=>{let a=Xs.runKernel(ga,S,N);return r([e,t,a,n]),{value:Ql(a,w),gradFunc:I}}))(v,k,b)}var Fg=hi({fusedMatMul_:Rg});function Dg(e){return fg(e,.54,.46)}var Mg=hi({hammingWindow_:Dg});function Og(e){return fg(e,.5,.5)}var Lg=hi({hannWindow_:Og});function zg(e,t,n,r=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(pu(e,s,t)),s+=n;if(r)for(;s<e.size;){let r=s+t-e.size,o=su([pu(e,s,t-r),Mu([r],a)]);i.push(o),s+=n}return 0===i.length?Cm([],[0,t]):Ql(su(i),[i.length,t])}var Pg=hi({frame_:zg});function Bg(e,t,n,r,a=Lg){null==r&&(r=cg(t));let s=Pg(e,t,n),i=il(s,a(t));return cm(i,r)}var Wg=hi({stft_:Bg});function Vg(e,t,n,r,a="bilinear",s=0){let i=oi(e,"image","cropAndResize"),o=oi(t,"boxes","cropAndResize","float32"),l=oi(n,"boxInd","cropAndResize","int32"),u=o.shape[0];le(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),le(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),le(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),le(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),le(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),le("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));let h={image:i,boxes:o,boxInd:l},p={method:a,extrapolationValue:s,cropSize:r};return Xs.runKernel(Gt,h,p)}var Ug=hi({cropAndResize_:Vg});function Gg(e){let t=oi(e,"image","flipLeftRight","float32");le(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));let n={image:t};return Xs.runKernel(dn,n,{})}var Hg=hi({flipLeftRight_:Gg});function jg(e){let t=oi(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];le(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),le(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));let a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,Ip(t,a)}var qg=hi({grayscaleToRGB_:jg});function Kg(e,t,n=0,r=.5){let a=oi(e,"image","rotateWithOffset","float32");le(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));let s={image:a},i={radians:t,fillValue:n,center:r};return Xs.runKernel(ma,s,i)}var Xg=hi({rotateWithOffset_:Kg});function Yg(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);let i=e.shape[0];return n=Math.min(n,i),le(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),le(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),le(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),le(1===t.rank,(()=>"scores must be a 1D tensor")),le(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),le(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}function Zg(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=oi(e,"boxes","nonMaxSuppression","float32"),i=oi(t,"scores","nonMaxSuppression","float32"),o=Yg(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return Xs.runKernel(nr,{boxes:s,scores:i},l)}var Jg=hi({nonMaxSuppression_:Zg});function Qg(e,t,n){let r=ey(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function ey(e,t,n){return ny(e,t,n||ty)}function ty(e,t){return e>t?1:e<t?-1:0}function ny(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}function ry(e,t,n,r,a){return iy(e,t,n,r,a,0)}function ay(e,t,n,r,a,s){return iy(e,t,n,r,a,0,!1,s,!0)}function sy(e,t,n,r,a,s){return iy(e,t,n,r,a,s,!0)}function iy(e,t,n,r,a,s,i=!1,o=!1,l=!1){let u=[];for(let g=0;g<t.length;g++)t[g]>a&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(uy);let h=s>0?-.5/s:0,p=[],d=[];for(;p.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let l=p.length-1;l>=i;--l){let n=oy(e,s,p[l]);if(n>=r){o=!0;break}if(t.score=t.score*ly(r,h,n),t.score<=a)break}t.suppressBeginIndex=p.length,o||(t.score===n?(p.push(s),d.push(t.score)):t.score>a&&Qg(u,t,uy))}let c=p.length,f=n-c;o&&f>0&&(p.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let m={selectedIndices:p};return i&&(m.selectedScores=d),l&&(m.validOutputs=c),m}function oy(e,t,n){let r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),h=Math.min(a[1],a[3]),p=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),c=(o-s)*(l-i),f=(p-u)*(d-h);if(c<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,h),y=Math.min(o,p),b=Math.min(l,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(c+f-x)}function ly(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function uy(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function hy(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=oi(e,"boxes","nonMaxSuppressionAsync"),i=oi(t,"scores","nonMaxSuppressionAsync"),o=Yg(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],h=l[1],{selectedIndices:p}=ry(u,h,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Tm(p,"int32")}var py=hy;function dy(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=oi(e,"boxes","nonMaxSuppression"),o=oi(t,"scores","nonMaxSuppression"),l=Yg(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:i,scores:o},h={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},p=Xs.runKernel(ar,u,h);return{selectedIndices:p[0],selectedScores:p[1]}}var cy=hi({nonMaxSuppressionWithScore_:dy});async function fy(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=oi(e,"boxes","nonMaxSuppressionAsync"),o=oi(t,"scores","nonMaxSuppressionAsync"),l=Yg(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),h=u[0],p=u[1],{selectedIndices:d,selectedScores:c}=sy(h,p,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Tm(d,"int32"),selectedScores:Tm(c)}}var my=fy;function gy(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=oi(e,"boxes","nonMaxSuppression"),o=oi(t,"scores","nonMaxSuppression"),l=Yg(i,o,n,r,a,null),u=l.maxOutputSize,h=l.iouThreshold,p=l.scoreThreshold,d={boxes:i,scores:o},c={maxOutputSize:u,iouThreshold:h,scoreThreshold:p,padToMaxOutputSize:s},f=Xs.runKernel(rr,d,c);return{selectedIndices:f[0],validOutputs:f[1]}}var yy=hi({nonMaxSuppressionPadded_:gy});async function by(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=oi(e,"boxes","nonMaxSuppressionAsync"),o=oi(t,"scores","nonMaxSuppressionAsync"),l=Yg(i,o,n,r,a,null),u=l.maxOutputSize,h=l.iouThreshold,p=l.scoreThreshold,[d,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=ay(d,c,u,h,p,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Tm(f,"int32"),validOutputs:ap(m,"int32")}}var xy=by;function wy(e,t,n=!1,r=!1){let a=oi(e,"images","resizeBilinear");le(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),le(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),le(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Ql(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Xs.runKernel(Ir,o,l);return i?Ql(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var vy=hi({resizeBilinear_:wy});function ky(e,t,n=!1,r=!1){let a=oi(e,"images","resizeNearestNeighbor");le(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),le(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),le("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),le(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Ql(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Xs.runKernel(vr,o,l);return i?Ql(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var Iy=hi({resizeNearestNeighbor_:ky});function Sy(e,t="binary",n=!1,r=.5){let a,s,i,o,l=oi(e,"image","threshold"),u=.2989,h=.587,p=.114,d=l.shape[0]*l.shape[1],c=il(Tm([r]),255);if(le(3===l.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${l.rank}.`)),le(3===l.shape[2]||1===l.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${l.shape[2]}.`)),le("int32"===l.dtype||"float32"===l.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${l.dtype}.`)),le("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===l.shape[2]){[a,s,i]=pm(l,[1,1,1],-1);let e=il(a,u),t=il(s,h),n=il(i,p);o=el(el(e,t),n)}else o=e;if("otsu"===t){let e=_u(Co(Ff(o),"int32"),fi([]),256);c=Ny(e,d)}let f=n?qp(o,c):Ap(o,c);return Co(il(f,255),"int32")}function Ny(e,t){let n,r,a,s,i,o,l=Tm([-1]),u=Tm([0]),h=Tm([0]);for(let p=0;p<e.size-1;p++){n=pu(e,0,p+1),r=pu(e,p+1),i=al(hp(n),t),o=al(hp(r),t);let d=hp(il(n,cf(0,n.size)));a=al(d,hp(n));let c=Mu(r.shape,n.size),f=el(cf(0,r.size),c),m=il(r,f);s=al(hp(m),hp(r));let g=md(a,s),y=md(a,s),b=il(i,o);h=il(il(b,g),y);let x=Ap(h,u);u=Ah(x,h,u),l=Ah(x,Tm([p]),l)}return l}var Ty=hi({threshold_:Sy});function Cy(e,t,n="nearest",r="constant",a=0,s){let i=oi(e,"image","transform","float32"),o=oi(t,"transforms","transform","float32");le(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),le(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),le(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));let l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return Xs.runKernel(ia,l,u)}var _y=hi({transform_:Cy});function Ey(e,t,n){le(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),le(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));let r=oi(e,"a","bandPart");le(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));let a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);let o=Ql(cf(0,s,1,"int32"),[-1,1]),l=cf(0,i,1,"int32"),u=md(o,l),h=vd(qp(u,ap(+t,"int32")),Fp(u,ap(-n,"int32"))),p=Vd([s,i],r.dtype);return Ql(xm(Wm(Ql(r,[-1,s,i])).map((e=>Ah(h,e,p)))),a)}var $y=hi({bandPart_:Ey});function Ay(e){let t;if(Array.isArray(e)){t=!1,le(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));let n=e[0].shape[0];for(let t=1;t<e.length;++t)le(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=pm(e,e.shape[0],0).map((e=>ym(e,[0])));le(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));let n=[],r=e;for(let a=0;a<e.length;++a)n.push(Xs.tidy((()=>{let e=r[a];if(a>0)for(let t=0;t<a;++t){let r=il(hp(il(n[t],e)),n[t]);e=md(e,r)}return al(e,cp(e,"euclidean"))})));return t?xm(n,0):n}var Ry=hi({gramSchmidt_:Ay});function Fy(e,t=!1){if(le(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Dy(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Wm(Ql(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach((e=>{let[n,r]=Dy(e,t);a.push(n),s.push(r)}));let i=Ql(xm(a,0),e.shape),o=Ql(xm(s,0),e.shape);return[i,o]}}function Dy(e,t=!1){return Xs.tidy((()=>{le(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));let n=e.shape[0],r=e.shape[1],a=Np(n),s=Eo(e),i=Cm([[1]],[1,1]),o=Eo(i),l=n>=r?r:n;for(let e=0;e<l;++e){let t=s,l=o,u=a;[o,s,a]=Xs.tidy((()=>{let t=pu(s,[e,e],[n-e,1]),l=cp(t),u=pu(s,[e,e],[1,1]),h=Ah(Ap(u,0),Cm([[-1]]),Cm([[1]])),p=md(u,il(h,l)),d=al(t,p);o=1===d.shape[0]?Eo(i):su([i,pu(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);let c=ud(al(ou(h,p),l)),f=pu(s,[e,0],[n-e,r]),m=il(c,o),g=Ym(o);if(0===e)s=md(f,ou(m,ou(g,f)));else{let t=md(f,ou(m,ou(g,f)));s=su([pu(s,[0,0],[e,r]),t],0)}let y=Ym(m),b=pu(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=md(b,ou(ou(b,o),y));else{let t=md(b,ou(ou(b,o),y));a=su([pu(a,[0,0],[n,e]),t],1)}return[o,s,a]})),Wo([t,l,u])}return!t&&n>r&&(a=pu(a,[0,0],[n,r]),s=pu(s,[0,0],[r,r])),[a,s]}))}var My,Oy=hi({qr_:Fy});function Ly(e,t,n=My.SUM_BY_NONZERO_WEIGHTS){let r=oi(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=oi(t,"weights","computeWeightedLoss"));let s=null==a?r:il(r,a);if(n===My.NONE)return s;if(n===My.SUM)return hp(s);if(n===My.MEAN){if(null==a)return Wd(s);{let e=r.size/a.size,t=al(hp(s),hp(a));return e>1?al(t,ap(e)):t}}if(n===My.SUM_BY_NONZERO_WEIGHTS){if(null==a)return al(hp(s),ap(r.size));{let e=il(a,Ud(r.shape)),t=Co(hp(ac(e,ap(0))),"float32");return al(hp(s),t)}}throw Error(`Unknown reduction: ${n}`)}(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(My||(My={}));var zy=hi({computeWeightedLoss_:Ly});function Py(e,t,n,r=My.SUM_BY_NONZERO_WEIGHTS){let a=oi(e,"labels","absoluteDifference"),s=oi(t,"predictions","absoluteDifference"),i=null;null!=n&&(i=oi(n,"weights","absoluteDifference")),ue(a.shape,s.shape,"Error in absoluteDifference: ");let o=ll(md(a,s));return zy(o,i,r)}var By=hi({absoluteDifference_:Py});function Wy(e,t,n,r,a=My.SUM_BY_NONZERO_WEIGHTS){let s=oi(e,"labels","cosineDistance"),i=oi(t,"predictions","cosineDistance"),o=null;null!=r&&(o=oi(r,"weights","cosineDistance")),ue(s.shape,i.shape,"Error in cosineDistance: ");let l=ap(1),u=md(l,hp(il(s,i),n,!0));return zy(u,o,a)}var Vy=hi({cosineDistance_:Wy});function Uy(e,t,n,r=My.SUM_BY_NONZERO_WEIGHTS){let a=oi(e,"labels","hingeLoss"),s=oi(t,"predictions","hingeLoss"),i=null;null!=n&&(i=oi(n,"weights","hingeLoss")),ue(a.shape,s.shape,"Error in hingeLoss: ");let o=ap(1);a=md(il(ap(2),a),o);let l=xf(md(o,il(a,s)));return zy(l,i,r)}var Gy=hi({hingeLoss_:Uy});function Hy(e,t,n,r=1,a=My.SUM_BY_NONZERO_WEIGHTS){let s=oi(e,"labels","huberLoss"),i=oi(t,"predictions","huberLoss"),o=null;null!=n&&(o=oi(n,"weights","huberLoss")),ue(s.shape,i.shape,"Error in huberLoss: ");let l=ap(r),u=ll(md(i,s)),h=jd(u,l),p=md(u,h),d=el(il(ap(.5),lp(h)),il(l,p));return zy(d,o,a)}var jy=hi({huberLoss_:Hy});function qy(e,t,n,r=1e-7,a=My.SUM_BY_NONZERO_WEIGHTS){let s=oi(e,"labels","logLoss"),i=oi(t,"predictions","logLoss"),o=null;null!=n&&(o=oi(n,"weights","logLoss")),ue(s.shape,i.shape,"Error in logLoss: ");let l=ap(1),u=ap(r),h=ud(il(s,Jp(el(i,u)))),p=il(md(l,s),Jp(el(md(l,i),u))),d=md(h,p);return zy(d,o,a)}var Ky=hi({logLoss_:qy});function Xy(e,t,n,r=My.SUM_BY_NONZERO_WEIGHTS){let a=oi(e,"labels","meanSquaredError"),s=oi(t,"predictions","meanSquaredError"),i=null;null!=n&&(i=oi(n,"weights","meanSquaredError")),ue(a.shape,s.shape,"Error in meanSquaredError: ");let o=mm(a,s);return zy(o,i,r)}var Yy=hi({meanSquaredError_:Xy});function Zy(e,t){let n=oi(e,"labels","sigmoidCrossEntropyWithLogits"),r=oi(t,"logits","sigmoidCrossEntropyWithLogits");ue(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=xf(r),s=il(r,n),i=ed(yp(ud(ll(r))));return el(md(a,s),i)}function Jy(e,t,n,r=0,a=My.SUM_BY_NONZERO_WEIGHTS){let s=oi(e,"multiClassLabels","sigmoidCrossEntropy"),i=oi(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=oi(n,"weights","sigmoidCrossEntropy")),ue(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let e=ap(r),t=ap(1),n=ap(.5);s=el(il(s,md(t,e)),il(n,e))}let l=Zy(s,i);return zy(l,o,a)}var Qy=hi({sigmoidCrossEntropy_:Jy});function eb(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return id(((e,t,r)=>{let a=xd(t,[n],!0),s=md(Co(t,"float32"),a);r([e,s]);let i=ud(il(s,e));return{value:hp(i,[n]),gradFunc:(e,t)=>{let[r,a]=t,s=qh(e.shape,[n]);return[il(Ql(e,s),md(Co(r,"float32"),yp(a))),il(Ql(e,s),md(yp(a),Co(r,"float32")))]}}}))(e,t)}function tb(e,t,n,r=0,a=My.SUM_BY_NONZERO_WEIGHTS){let s=oi(e,"onehotLabels","softmaxCrossEntropy"),i=oi(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=oi(n,"weights","softmaxCrossEntropy")),ue(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let e=ap(r),t=ap(1),n=ap(s.shape[1]);s=el(il(s,md(t,e)),al(e,n))}let l=eb(s,i);return zy(l,o,a)}var nb=hi({softmaxCrossEntropy_:tb});function rb(e,t,n,r){let a=oi(e,"indices","sparseFillEmptyRows","int32"),s=oi(t,"values","sparseFillEmptyRows"),i=oi(n,"denseShape","sparseFillEmptyRows","int32"),o=oi(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:a,values:s,denseShape:i,defaultValue:o},u=Xs.runKernel(Gr,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var ab=hi({sparseFillEmptyRows_:rb});function sb(e,t,n){let r=oi(e,"inputIndices","sparseReshape","int32"),a=oi(t,"inputShape","sparseReshape","int32"),s=oi(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:r,inputShape:a,newShape:s},o=Xs.runKernel(Hr,i);return{outputIndices:o[0],outputShape:o[1]}}var ib=hi({sparseReshape_:sb});function ob(e,t,n){let r=oi(e,"data","sparseSegmentMean"),a=oi(t,"indices","sparseSegmentMean","int32"),s=oi(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return Xs.runKernel(jr,i)}var lb=hi({sparseSegmentMean_:ob});function ub(e,t,n){let r=oi(e,"data","sparseSegmentSum"),a=oi(t,"indices","sparseSegmentSum","int32"),s=oi(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return Xs.runKernel(qr,i)}var hb=hi({sparseSegmentSum_:ub});function pb(e,t,n,r,a,s,i,o){let l=oi(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=oi(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");let h={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},p={data:l,dataSplits:u},d=Xs.runKernel(Jr,p,h);return{nGrams:d[0],nGramsSplits:d[1]}}var db=hi({stringNGrams_:pb});function cb(e,t,n=!0){let r=oi(e,"input","stringSplit","string"),a=oi(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s={skipEmpty:n},i={input:r,delimiter:a},o=Xs.runKernel(Qr,i,s);return{indices:o[0],values:o[1],shape:o[2]}}var fb=hi({stringSplit_:cb});function mb(e,t){let n=oi(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let a={input:n};return Xs.runKernel(ea,a,r)}var gb=hi({stringToHashBucketFast_:mb}),yb={fft:sm,ifft:om,rfft:cm,irfft:um},bb={hammingWindow:Mg,hannWindow:Lg,frame:Pg,stft:Wg},xb={flipLeftRight:Hg,grayscaleToRGB:qg,resizeNearestNeighbor:Iy,resizeBilinear:vy,rotateWithOffset:Xg,cropAndResize:Ug,nonMaxSuppression:Jg,nonMaxSuppressionAsync:py,nonMaxSuppressionWithScore:cy,nonMaxSuppressionWithScoreAsync:my,nonMaxSuppressionPadded:yy,nonMaxSuppressionPaddedAsync:xy,threshold:Ty,transform:_y},wb={bandPart:$y,gramSchmidt:Ry,qr:Oy},vb={absoluteDifference:By,computeWeightedLoss:zy,cosineDistance:Vy,hingeLoss:Gy,huberLoss:jy,logLoss:Ky,meanSquaredError:Yy,sigmoidCrossEntropy:Qy,softmaxCrossEntropy:nb},kb={sparseFillEmptyRows:ab,sparseReshape:ib,sparseSegmentMean:lb,sparseSegmentSum:hb},Ib={stringNGrams:db,stringSplit:fb,stringToHashBucketFast:gb},Sb={};C(Sb,{Serializable:()=>Nb,SerializationMap:()=>Tb,registerClass:()=>Cb});var Nb=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Tb=class{constructor(){this.classNameMap={}}static getMap(){return null==Tb.instance&&(Tb.instance=new Tb),Tb.instance}static register(e){Tb.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Cb(e){le(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),le("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),le(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Tb.register(e)}var _b=class extends Nb{minimize(e,t=!1,n){let{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){let e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return Wo(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return sd(e,t)}dispose(){null!=this.iterations_&&Wo(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:ap(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(_b,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Eb=class extends _b{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Xs.backend.epsilon())}static get className(){return"Adadelta"}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Xs.registeredVariables[t],a=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Bo((()=>Fh(r).variable(a)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Bo((()=>Fh(r).variable(a)))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Bo((()=>{let e=el(il(i,this.rho),il(lp(s),1-this.rho)),t=il(al(ip(el(o,this.epsilon)),ip(el(i,this.epsilon))),s),n=el(il(o,this.rho),il(lp(t),1-this.rho));i.assign(e),o.assign(n);let a=el(il(t,-this.learningRate),r);r.assign(a)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Wo(this.accumulatedGrads.map((e=>e.variable))),Wo(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},$b=class extends _b{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}static get className(){return"Adagrad"}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Xs.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Bo((()=>Mu(r.shape,this.initialAccumulatorValue).variable(!1)))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable;Bo((()=>{let e=el(s,lp(a));s.assign(e);let t=el(il(al(a,ip(el(e,Xs.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Wo(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(t)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},Ab=class extends _b{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Bo((()=>{this.accBeta1=ap(t).variable(),this.accBeta2=ap(n).variable()})),null==r&&(this.epsilon=Xs.backend.epsilon())}static get className(){return"Adam"}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Bo((()=>{let n=md(1,this.accBeta1),r=md(1,this.accBeta2);t.forEach(((t,a)=>{let s=Xs.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Bo((()=>Fh(s).variable(i)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:Bo((()=>Fh(s).variable(i)))});let o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;let l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,h=el(il(l,this.beta1),il(o,1-this.beta1)),p=el(il(u,this.beta2),il(lp(o),1-this.beta2)),d=al(h,n),c=al(p,r);l.assign(h),u.assign(p);let f=el(il(al(d,el(ip(c),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign(il(this.accBeta1,this.beta1)),this.accBeta2.assign(il(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Wo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Wo(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Bo((()=>{this.accBeta1.assign(rp(this.beta1,this.iterations_+1)),this.accBeta2.assign(rp(this.beta2,this.iterations_+1))}));let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},Rb=class extends _b{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Bo((()=>{this.iteration=ap(0).variable(),this.accBeta1=ap(t).variable()})),null==r&&(this.epsilon=Xs.backend.epsilon())}static get className(){return"Adamax"}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Bo((()=>{let n=md(1,this.accBeta1),r=al(-this.learningRate,el(il(this.iteration,this.decay),1));t.forEach(((t,a)=>{let s=Xs.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Fh(s).variable(i)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Fh(s).variable(i)});let o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;let l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,h=el(il(l,this.beta1),il(o,1-this.beta1)),p=il(u,this.beta2),d=ll(o),c=Pd(p,d);l.assign(h),u.assign(c);let f=el(il(al(r,n),al(h,el(c,this.epsilon))),s);s.assign(f)})),this.iteration.assign(el(this.iteration,1)),this.accBeta1.assign(il(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Wo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Wo(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},Fb=class extends _b{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}static get className(){return"SGD"}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let a=Xs.registeredVariables[t];Bo((()=>{let e=el(il(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Vo(ap(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),0!==e.length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}},Db=class extends Fb{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=ap(this.momentum)}static get className(){return"Momentum"}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Xs.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:Bo((()=>Fh(r).variable(!1)))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Bo((()=>{let e,t=el(il(this.m,a),s);e=this.useNesterov?el(il(this.c,el(s,il(t,this.m))),r):el(il(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Wo(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(t)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},Mb=class extends _b{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=Xs.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}static get className(){return"RMSProp"}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Xs.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Bo((()=>Fh(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Bo((()=>Fh(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Bo((()=>Fh(r).variable(a)))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Bo((()=>{let e=el(il(i,this.decay),il(lp(s),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,a=el(il(t,this.decay),il(s,1-this.decay)),l=al(il(s,this.learningRate),ip(md(e,el(lp(a),this.epsilon)))),u=el(il(o,this.momentum),l);i.assign(e),t.assign(a),o.assign(u);let h=md(r,u);r.assign(h)}else{let e=el(il(i,this.decay),il(lp(s),1-this.decay)),t=el(il(o,this.momentum),al(il(s,this.learningRate),ip(el(e,this.epsilon))));i.assign(e),o.assign(t);let n=md(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Wo(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Wo(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Wo(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},Ob=[Eb,$b,Ab,Rb,Db,Mb,Fb];function Lb(){for(let e of Ob)Cb(e)}var zb={};C(zb,{browserFiles:()=>qb,browserHTTPRequest:()=>sx,concatenateArrayBuffers:()=>Si,copyModel:()=>xo,decodeWeights:()=>bi,encodeWeights:()=>yi,fromMemory:()=>ux,fromMemorySync:()=>hx,getLoadHandlers:()=>Pi,getModelArtifactsForJSON:()=>_i,getModelArtifactsForJSONSync:()=>Ci,getModelArtifactsInfoForJSON:()=>Ei,getSaveHandlers:()=>zi,getWeightSpecs:()=>$i,http:()=>ax,isHTTPScheme:()=>nx,listModels:()=>yo,loadWeights:()=>Yb,moveModel:()=>wo,registerLoadRouter:()=>Li,registerSaveRouter:()=>Oi,removeModel:()=>bo,weightsLoaderFactory:()=>Zb,withSaveHandler:()=>px,withSaveHandlerSync:()=>dx});var Pb="model",Bb=".json",Wb=".weights.bin";function Vb(e){return new Promise((e=>setTimeout(e))).then(e)}var Ub=class{constructor(e){if(!Je().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ub.URL_SCHEME)&&(e=e.slice(Ub.URL_SCHEME.length)),(null==e||0===e.length)&&(e=Pb),this.modelJsonFileName=e+Bb,this.weightDataFileName=e+Wb}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=Ti(e,n),a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=a,await Vb((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Vb((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Ei(e)}}}};Ub.URL_SCHEME="downloads://";var Gb=class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{let n=new FileReader;n.onload=n=>{let r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});let s=_i(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){let t=[],n=[];for(let s of e)t.push(...s.weights),n.push(...s.paths);let r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,Si(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{let a=new FileReader;a.onload=e=>{let t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map((e=>Ni(e.name))),r={};for(let a of e)a.paths.forEach((e=>{let a=Ni(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}},Hb=e=>Je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ub.URL_SCHEME)?jb(e.slice(Ub.URL_SCHEME.length)):null;function jb(e="model"){return new Ub(e)}function qb(e){return new Gb(e)}function Kb(e,t,n,r){i(e),n=null==n?0:n,r=null==r?1:r,o(n,r);let a=0,s=s=>(s.then((s=>{let i=n+ ++a/e.length*(r-n);return t(i),s})),s);function i(e){le(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}function o(e,t){le(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),le(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),le(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}return Promise.all(e.map(s))}async function Xb(e,t){null==t&&(t={});let n=null==t.fetchFunc?Je().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=0,s=.5,i=(null==t.onProgress?await Promise.all(r):await Kb(r,t.onProgress,a,s)).map((e=>e.arrayBuffer())),o=.5,l=1;return null==t.onProgress?await Promise.all(i):await Kb(i,t.onProgress,o,l)}async function Yb(e,t="",n,r){return Zb((e=>Xb(e,{requestInit:r})))(e,t,n)}function Zb(e){return async(t,n="",r)=>{let a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{let l="quantization"in e?e.quantization.dtype:e.dtype,u=mi[l]*pe(e.shape),h=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(h(),i[n]=!0)})):h(),o.push(e.name),n+=u}))})),!i.every((e=>e))){let e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{let t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));let h=await e(u),p={},d=0;return l.forEach((e=>{let n=t[e].paths.length,r=0;for(let t=0;t<n;t++)r+=h[d+t].byteLength;let a=new ArrayBuffer(r),i=new Uint8Array(a),o=0;for(let t=0;t<n;t++){let e=new Uint8Array(h[d+t]);i.set(e,o),o+=e.byteLength}s[e].forEach((e=>{let t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=bi(t,[e.manifestEntry]);for(let r in n)p[r]=n[r]})),d+=n})),p}}Mi.registerSaveRouter(Hb);var Jb="application/octet-stream",Qb="application/json",ex=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(le("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Je().platform.fetch,le(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&le(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=Ti(e,n);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:Qb}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:Jb}),"model.weights.bin");let a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Ei(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(a){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}let n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return _i(e,(e=>this.loadWeights(e)))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=tx(t),a=this.weightPathPrefix||n,s=$i(e),i=[],o=[];for(let u of e)for(let e of u.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);this.weightUrlConverter&&i.push(...await Promise.all(o));let l=await Xb(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,Si(l)]}};function tx(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}function nx(e){return null!=e.match(ex.URL_SCHEME_REGEX)}ex.URL_SCHEME_REGEX=/^https?:\/\//;var rx=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>nx(e))):nx(e),n)return ax(e,t)}return null};function ax(e,t){return new ex(e,t)}function sx(e,t){return ax(e,t)}Mi.registerSaveRouter(rx),Mi.registerLoadRouter(rx);var ix=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},ox=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},lx=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function ux(e,t,n,r){let a=arguments;return new lx(hx(...a))}function hx(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new ix(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ix({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ix({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function px(e){return new ox(e)}function dx(e){return new ox(e)}var cx={};function fx(e,t,n){let r=oi(e,"labels","confusionMatrix"),a=oi(t,"predictions","confusionMatrix");le(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),le(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),le(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),le(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),le(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));let s=ic(Co(r,"int32"),n),i=ic(Co(a,"int32"),n),o=Ym(s),l=ou(o,i);return Co(l,"int32")}C(cx,{confusionMatrix:()=>gx});var mx,gx=hi({confusionMatrix_:fx}),yx={};function bx(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=Ia(fa,Xs.backendName)){let n={pixels:e},r={numChannels:t};return Xs.runKernel(fa,n,r)}let l,u,[h,p]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(i)l=e.getContext("2d").getImageData(0,0,h,p).data;else if(r||n)l=e.data;else if(s||a||o){if(null==mx)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");mx=new OffscreenCanvas(1,1).getContext("2d")}else mx=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});mx.canvas.width=h,mx.canvas.height=p,mx.drawImage(e,0,0,h,p),l=mx.getImageData(0,0,h,p).data}if(4===t)u=new Int32Array(l);else{let e=h*p;u=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)u[n*t+e]=l[4*n+e]}return _m(u,[p,h,t],"int32")}function xx(e){return null!=e&&e.data instanceof Uint8Array}function wx(){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")}function vx(e){return null!=e&&0!==e.width&&0!==e.height}function kx(e){return wx()&&!(e instanceof ImageBitmap)&&vx(e)&&!xx(e)}async function Ix(e,t=3){let n=null;if(Je().getBool("WRAP_TO_IMAGEBITMAP")&&kx(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return bx(n,t)}async function Sx(e,t){let n=oi(e,"img","toPixels");if(!(e instanceof Ts)){let e=n;n=Co(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*r*4);for(let u=0;u<r*a;++u){let e=[0,0,0,255];for(let r=0;r<s;r++){let t=i[u*s+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===s?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[r]=t*o}let t=4*u;l[t+0]=Math.round(e[0]),l[t+1]=Math.round(e[1]),l[t+2]=Math.round(e[2]),l[t+3]=Math.round(e[3])}if(null!=t){t.width=a,t.height=r;let e=t.getContext("2d"),n=new ImageData(l,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}C(yx,{fromPixels:()=>Nx,fromPixelsAsync:()=>Ix,toPixels:()=>Sx});var Nx=hi({fromPixels_:bx}),Tx={};function Cx(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===pe(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let p=0;p<a.length-1;++p)i*=a[p];let o=e.shape,l=a.slice();l.pop();let u=1;for(let p=s;p<n;++p)u*=o[p],l.push(o[p]);let h=[...Oe(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,h]}C(Tx,{prepareAndValidate:()=>Cx});var _x={};C(_x,{assertParamsValid:()=>Ax,computeFlatOffset:()=>Gx,computeOutShape:()=>Fx,getNormalizedAxes:()=>Lx,isSliceContinous:()=>Ux,maskToAxes:()=>Rx,parseSliceParams:()=>Hx,sliceInfo:()=>jx,startForAxis:()=>Wx,startIndicesWithElidedDims:()=>zx,stopForAxis:()=>Vx,stopIndicesWithElidedDims:()=>Px,stridesForAxis:()=>Bx,stridesWithElidedDims:()=>Dx});var Ex=-2,$x=-1;function Ax(e,t,n){let r=e.shape.length;le(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),le(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)le(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function Rx(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Fx(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Dx(e,t,n,r){let a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)0===s?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Mx(e,t,n){return n<=e?n:n-(t-1)}function Ox(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Lx(e,t,n,r,a,s,i,o,l){let u=e.length,h=new Array(u),p=new Array(u),d=new Array(u);if(t.length&&n>0){let l=t[0],u=n+1;h=zx(i,l,u,r,e),p=Px(o,l,u,a,e),d=Dx(s,l,u,e)}else for(let c=0;c<u;c++)h[c]=Wx(i,r,s,e,c,l),p[c]=Vx(o,a,s,e,c,l),d[c]=Bx(s,c,l);return{begin:h,end:p,strides:d}}function zx(e,t,n,r,a){let s=[...a],i=Ox(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{let a=Mx(t,n,o),i=r[a];e&1<<a&&(i=0),s[o]=i}return s}function Px(e,t,n,r,a){let s=[...a],i=Ox(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{let a=Mx(t,n,o),i=r[a];e&1<<a&&(i=Number.MAX_SAFE_INTEGER),s[o]=i}for(let o=0;o<s.length;o++){let e=a[o];s[o]<0&&(s[o]+=e),s[o]=ne(0,s[o],a[o])}return s}function Bx(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Wx(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=ne(0,i,l-1),i}function Vx(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=o>0?ne(0,i,l):ne(-1,i,l-1),i}function Ux(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Gx(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Hx(e,t,n){let r,a,s=e.shape.length;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{le(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(le(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function jx(e,t,n,r,a,s,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let h=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let b=0;b<p.dims;b++)h&&1<<b&o&&p.numAddAxisAfterEllipsis++,1<<b&i&&(h=!0);h||(p.ellipsisMask|=1<<p.dims,p.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};qx(p,d);let c=!0,f=!0,m=!0,g=[],y=[];for(let b=0;b<e.length;++b){if(0===d.strides[b])throw Error(`strides[${b}] must be non-zero`);let t=!!(d.shrinkAxisMask&1<<b),n=e[b];if(-1===n){g.push(t?1:-1);continue}let r=[d.beginMask&1<<b,d.endMask&1<<b],a=[d.strides[b]>0?0:-1,d.strides[b]>0?n:n-1];if(t&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[b];let s=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(t){let e=d.begin[b]<0?n+d.begin[b]:d.begin[b];if(d.begin[b]=e,d.end[b]=d.begin[b]+1,e<0||e>=n)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=Kx(d.begin[b],0,d.strides[b],n,r,a),d.end[b]=Kx(d.end[b],1,d.strides[b],n,r,a);let e=1===d.strides[b]&&0===d.begin[b]&&d.end[b]===n;c=c&&e,f=f&&(0===b&&1===d.strides[b]||e)}else c=c&&1===d.strides[b]&&s,f=f&&(0===b&&1===d.strides[b]||s);let i,o=!1;if(d.beginValid&&d.endValid?(i=d.end[b]-d.begin[b],o=!0):t?(i=1,o=!0):s&&n>=0&&(i=d.strides[b]<0?-n:n,o=!0),o){let e;e=0===i||i<0!=d.strides[b]<0?0:Math.trunc(i/d.strides[b])+(i%d.strides[b]!==0?1:0),g.push(e)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){let e=d.finalShapeGatherIndices[b];e>=0?y.push(g[e]):e===Ex&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>d.finalShapeGatherIndices[t]!==Ex)),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function qx(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(Ex),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push($x),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}function Kx(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}var Xx="4.2.0",Yx=class{static sgd(e){return new Fb(e)}static momentum(e,t,n=!1){return new Db(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Mb(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Ab(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Eb(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Rb(e,t,n,r,a)}static adagrad(e,t=.1){return new $b(e,t)}},Zx=Yx,Jx=(()=>"undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e())();function Qx(){return new Promise((e=>Jx((()=>e()))))}var ew,tw={};function nw(e,t){let n=e[0].length;e.forEach(((e,t)=>{le(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),le(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));let r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)le(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function rw(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}function aw(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){let s=n[a],i=r[r.length-n.length+a],o=r[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${o}`)}else r[i]=s}return r}function sw(e){let t={FIRST_DIM_SIZE:ew.FIRST_DIM_SIZE,VALUE_ROWIDS:ew.VALUE_ROWIDS,ROW_LENGTHS:ew.ROW_LENGTHS,ROW_SPLITS:ew.ROW_SPLITS,ROW_LIMITS:ew.ROW_LIMITS,ROW_STARTS:ew.ROW_STARTS},n=[];for(let r of e){if(!(r in t))break;n.push(t[r])}return n}function iw(e){return 0===e.length?0:e[0]===ew.FIRST_DIM_SIZE?e.length-1:e.length}function ow(e,t){if(null==e||null==t)return;let n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){let n=e[a],r=t[a+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${n} but ragged tensor input.flatValues.shape[${a-e.length}] = ${r}`)}}C(tw,{ERF_A1:()=>xw,ERF_A2:()=>ww,ERF_A3:()=>vw,ERF_A4:()=>kw,ERF_A5:()=>Iw,ERF_P:()=>bw,PARALLELIZE_THRESHOLD:()=>lw,RowPartitionType:()=>ew,SELU_SCALE:()=>yw,SELU_SCALEALPHA:()=>gw,applyActivation:()=>kg,assertAndGetBroadcastShape:()=>Ch,assertAxesAreInnerMostDims:()=>Kh,assertParamsConsistent:()=>nw,assignToTypedArray:()=>Ew,axesAreInnerMostDims:()=>Gh,calculateShapes:()=>ng,checkEinsumDimSizes:()=>zw,checkPadOnDimRoundingMode:()=>Zl,combineLocations:()=>Hh,combineRaggedTensorToTensorShapes:()=>aw,complexWithEvenIndex:()=>Tw,complexWithOddIndex:()=>Cw,computeConv2DInfo:()=>Ol,computeConv3DInfo:()=>Ll,computeDefaultPad:()=>Bl,computeDilation2DInfo:()=>Fl,computeOptimalWindowSize:()=>uw,computeOutAndReduceShapes:()=>jh,computeOutShape:()=>rw,computePool2DInfo:()=>Dl,computePool3DInfo:()=>Ml,convertConv2DDataFormat:()=>Yl,decodeEinsumEquation:()=>Ow,eitherStridesOrDilationsAreOne:()=>Kl,expandShapeToKeepDim:()=>qh,exponent:()=>Aw,exponents:()=>$w,fromStringArrayToUint8:()=>iv,fromUint8ToStringArray:()=>sv,getAxesPermutation:()=>Xh,getBroadcastDims:()=>Nh,getComplexWithIndex:()=>_w,getEinsumComputePath:()=>Pw,getEinsumPermutation:()=>Lw,getFusedBiasGradient:()=>vg,getFusedDyActivation:()=>wg,getImageCenter:()=>hw,getInnerMostAxes:()=>Zh,getPermuted:()=>dw,getRaggedRank:()=>iw,getReductionAxes:()=>Th,getReshaped:()=>pw,getReshapedPermuted:()=>cw,getRowPartitionTypesHelper:()=>sw,getSliceBeginCoords:()=>fw,getSliceSize:()=>mw,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Uw,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Gw,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Hw,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Kw,getSparseReshapeInputOutputMismatchErrorMessage:()=>Yw,getSparseReshapeInputOutputMultipleErrorMessage:()=>Xw,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>jw,getSparseReshapeNegativeOutputDimErrorMessage:()=>qw,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>ev,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Zw,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Jw,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Qw,getUndoAxesPermutation:()=>Yh,isIdentityPermutation:()=>Bw,log:()=>wa,mergeRealAndImagArrays:()=>Sw,prepareAndValidate:()=>Cx,prepareSplitSize:()=>Vw,segment_util:()=>tv,shouldFuse:()=>Ig,slice_util:()=>_x,splitRealAndImagArrays:()=>Nw,stridesOrDilationsArePositive:()=>Xl,tupleValuesAreOne:()=>ql,upcastType:()=>Os,validateDefaultValueShape:()=>ow,validateInput:()=>tg,validateUpdateShape:()=>eg,warn:()=>xa}),function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(ew||(ew={}));var lw=30;function uw(e){return e<=lw?e:Me(e,Math.floor(Math.sqrt(e)))}function hw(e,t,n){let r=n*("number"==typeof e?e:e[0]),a=t*("number"==typeof e?e:e[1]);return[r,a]}function pw(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function dw(e,t,n=!0){let r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{let n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2===1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function cw(e,t,n,r=!0){let a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?r?a.push(t[s-1]*e[s]):a.push(e[s]/t[s-1]):a.push(e[s]);return a}function fw(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function mw(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var gw=1.7580993408473768,yw=1.0507009873554805,bw=.3275911,xw=.254829592,ww=-.284496736,vw=1.421413741,kw=-1.453152027,Iw=1.061405429;function Sw(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Nw(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Tw(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function Cw(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function _w(e,t){let n=e[2*t],r=e[2*t+1];return{real:n,imag:r}}function Ew(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function $w(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Aw(e,t,n){let r=(n?2:-2)*Math.PI*(e/t),a=Math.cos(r),s=Math.sin(r);return{real:a,imag:s}}var Rw="->",Fw=/->/g,Dw=",",Mw="...";function Ow(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(Fw,"").length)/Rw.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Rw}").`);let[r,a]=e.split(Rw);le(-1===r.indexOf(Mw),(()=>`The ellipsis notation ("${Mw}") is not supported yet.`));let s=r.split(Dw),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let d=0;d<a.length;++d){let e=a[d];if(!s.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let d=0;d<r.length;++d){let e=r[d];-1===o.indexOf(e)&&e!==Dw&&o.push(e)}let l=new Array(s.length);for(let d=0;d<i;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error(`Found duplicate axes in input component ${s[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let e=0;e<s[d].length;++e)l[d].push(o.indexOf(s[d][e]))}let u=o.length,h=a.length,p=[];for(let d=h;d<u;++d)p.push(d);return{allDims:o,summedDims:p,idDims:l}}function Lw(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;let r=[];for(let a=0;a<e;++a)-1===n[a]&&r.push(a);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function zw(e,t,n){let r=new Array(e);for(let a=0;a<n.length;++a){let e=n[a].shape;for(let n=0;n<t[a].length;++n)void 0===r[t[a][n]]?r[t[a][n]]=e[n]:le(r[t[a][n]]===e[n],(()=>`Expected dimension ${r[t[a][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function Pw(e,t){let n=e,r=[],a=0;0===e.length&&n.push(-1),a=e.length+1;for(let i=0;i<a;++i)r.push([]);let s=[];for(let i=0;i<n.length;++i){let e=n[i],a=Ww(t,e);for(let t of a)-1===s.indexOf(t)&&(r[i].push(t),s.push(t))}return{path:n,steps:r}}function Bw(e){return e.every(((e,t)=>e===t))}function Ww(e,t){let n=[];for(let r=0;r<e.length;++r)(0===e[r].length||-1!==e[r].indexOf(t)||-1===t)&&n.push(r);return n}function Vw(e,t,n=0){let r=[];if("number"==typeof t)le(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{let a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);le(a<=1,(()=>"There should be only one negative value in split array."));let s=t.indexOf(-1);if(-1!==s){let r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}le(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Uw(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Gw(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Hw(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function jw(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function qw(e,t){return`size ${e} must be non-negative, not ${t}`}function Kw(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Xw(e,t){let n=pe(e),r=pe(t);return`Input to reshape is a SparseTensor with ${n}\n  dense values, but the requested shape requires a multiple of ${r}. inputShape=${e} outputShape= ${t}`}function Yw(e,t){let n=pe(e),r=pe(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${r}. inputShape=${e} outputShape=${t}`}function Zw(){return"segment ids must be >= 0"}function Jw(){return"segment ids are not increasing"}function Qw(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function ev(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var tv={};function nv(e,t){let n,r=!1;for(e<=lw?(n=e,r=!0):n=Me(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Me(e,n+1);return n}function rv(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function av(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let p=0;p<r;++p)if(e.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${e.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let i=e.shape[n],o=[],l=1,u=1,h=1;for(let p=0;p<r;++p)o.push(e.shape[p]),l*=e.shape[p];for(let p=r;p<n;p++)o.push(e.shape[p]),u*=e.shape[p];for(let p=r;p<a;p++)o.push(t.shape[p]);for(let p=n+1;p<s;p++)o.push(e.shape[p]),h*=e.shape[p];return{batchSize:l,sliceSize:h,outerSize:u,dimSize:i,outputShape:o}}function sv(e){try{return e.map((e=>rs(e)))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function iv(e){return e.map((e=>ns(e)))}C(tv,{collectGatherOpShapeInfo:()=>av,computeOutShape:()=>rv,segOpComputeOptimalWindowSize:()=>nv});var ov={};C(ov,{nonMaxSuppressionV3Impl:()=>ry,nonMaxSuppressionV4Impl:()=>ay,nonMaxSuppressionV5Impl:()=>sy,whereImpl:()=>Gm}),Lb();var lv={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>il(e,vm(Co(n,"float32"),-1))}}},uv={kernelName:it,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=lp(Co(n,"float32")),r=ip(md(ap(1),t));return ud(al(e,r))}}}},hv={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=ip(md(lp(Co(n,"float32")),1));return al(e,t)}}}},pv={kernelName:lt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ch(n.shape,r.shape);return{a:()=>{let t=e,r=Th(n.shape,a);return r.length>0&&(t=hp(t,r)),Ql(t,n.shape)},b:()=>{let t=e,n=Th(r.shape,a);return n.length>0&&(t=hp(t,n)),Ql(t,r.shape)}}}},dv={kernelName:ut,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},cv={kernelName:dt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Fh(n)}}},fv={kernelName:ct,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Fh(n)}}},mv={kernelName:ft,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>al(e,ip(md(ap(1),lp(Co(n,"float32")))))}}},gv={kernelName:mt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=ip(el(ap(1),lp(Co(n,"float32"))));return al(e,t)}}}},yv={kernelName:bt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ch(n.shape,r.shape);return{a:()=>{let t=el(lp(n),lp(r)),s=il(e,al(r,t)),i=Th(n.shape,a);return i.length>0&&(s=hp(s,i)),Ql(s,n.shape)},b:()=>{let t=el(lp(n),lp(r)),s=ud(il(e,al(n,t))),i=Th(r.shape,a);return i.length>0&&(s=hp(s,i)),Ql(s,r.shape)}}}},bv={kernelName:gt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>al(e,el(lp(Co(n,"float32")),1))}}},xv={kernelName:yt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>al(e,md(ap(1),lp(Co(n,"float32"))))}}};function wv(e,t,n,r,a,s){let i=oi(e,"dy","avgPool3dGrad"),o=oi(t,"input","avgPool3dGrad"),l=i,u=o,h=!1;4===o.rank&&(h=!0,l=Ql(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Ql(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),le(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),le(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),Zl("avgPool3dGrad",a,s);let p={dy:l,input:u},d={filterSize:n,strides:r,pad:a,dimRoundingMode:s},c=Xs.runKernel(kt,p,d);return h?Ql(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var vv=hi({avgPool3dGrad_:wv}),kv={kernelName:vt,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>vv(e,r,a,s,i,o)}}};function Iv(e,t,n,r,a){let s=oi(e,"dy","avgPoolGrad"),i=oi(t,"input","avgPoolGrad");le(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=Ql(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Ql(s,[1,s.shape[0],s.shape[1],s.shape[2]])),le(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),le(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));let h={dy:l,input:o},p={filterSize:n,strides:r,pad:a},d=Xs.runKernel(wt,h,p);return u?Ql(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Sv=hi({avgPoolGrad_:Iv}),Nv={kernelName:xt,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>Sv(e,r,a,s,i)}}},Tv={kernelName:It,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>ou(e,a,!1,!1),b:()=>ou(e,r,!0,!1)}:s&&!i?{a:()=>ou(a,e,!1,!0),b:()=>ou(r,e,!1,!1)}:{a:()=>ou(a,e,!0,!0),b:()=>ou(e,r,!0,!0)}:{a:()=>ou(e,a,!1,!0),b:()=>ou(r,e,!0,!1)}}},Cv={kernelName:St,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>kc(e,r,a)}}},_v={kernelName:Tt,gradFunc:(e,t,n)=>{let r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let l=a.length-1;l>=0;l--)if(a[l]===s[l])i[l]=1;else if(1!==a[l])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>hp(e,o,!0)}}},Ev={kernelName:_t,gradFunc:e=>({x:()=>e.clone()})},$v={kernelName:Et,gradFunc:e=>({x:()=>Fh(e)})},Av={kernelName:$t,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Ah(vd(Fp(r,a),qp(r,s)),e,Fh(e))}}},Rv={kernelName:Rt,inputsToSave:["x"],gradFunc:lv.gradFunc},Fv={kernelName:Ft,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map((e=>e.shape)),{axis:a}=n,s=ve(a,t[0].shape)[0],i=r.map((e=>e[s]));return pm(e,i,s).map((e=>()=>e))}},Dv={kernelName:Dt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return le(ql(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>Zu(r.shape,e,a,i,o,l),filter:()=>xg(r,e,a.shape,i,o,l)}}},Mv={kernelName:Ot,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>qu(e,a,s,i,o,1,l),filter:()=>xg(e,r,a.shape,s,i,o,l)}}};function Ov(e,t,n,r,a){let s=e;4===e.rank&&(s=Ql(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Ql(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),le(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),le(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),le(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),le(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),le(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));let o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return Xs.runKernel(zt,o,l)}var Lv=hi({conv3DBackpropFilter_:Ov}),zv={kernelName:Lt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;le(ql(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));let[i,o]=t;return{x:()=>rh(i.shape,e,o,a,s),filter:()=>Lv(i,e,o.shape,a,s)}}},Pv={kernelName:Bt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>il(ud(Hf(Co(n,"float32"))),e)}}},Bv={kernelName:Wt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>il(qf(Co(n,"float32")),e)}}},Wv={kernelName:Ut,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let t=Xh([a],r.rank),n=ch(e,a,s,!i);return null!=t&&(n=Ym(n,t)),n}}}},Vv={kernelName:qt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;le(ql(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));let[l,u]=t;return le(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),le(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),le(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),le(Kl(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),Zl("depthwiseConv2d",s,i),{x:()=>Eg(l.shape,e,u,a,s,o,i),filter:()=>Cg(l,e,u.shape,a,s,o,i)}}},Uv={kernelName:Zt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>Xs.runKernel(Jt,s,n),filter:()=>Xs.runKernel(Qt,i,n)}}},Gv={kernelName:nn,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>Xs.runKernel(rn,r)}}},Hv={kernelName:an,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=il(yp(ud(lp(n))),2/Math.sqrt(Math.PI));return{x:()=>il(e,r)}}},jv={kernelName:on,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>il(e,n)}}},qv={kernelName:ln,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>Ql(e,n.shape)}}},Kv={kernelName:un,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>il(e,yp(n))}}},Xv={kernelName:cn,gradFunc:e=>({x:()=>Fh(e)})},Yv={kernelName:fn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ch(n.shape,r.shape);return{a:()=>{let t=al(e,Co(r,"float32")),s=Th(n.shape,a);return s.length>0?Ql(hp(t,s),n.shape):t},b:()=>{let t=il(e,Co(n,"float32")),s=Th(r.shape,a);s.length>0&&(t=Ql(hp(t,s),r.shape));let i=lp(r);return ud(al(t,Co(i,"float32")))}}}},Zv={kernelName:mn,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=null==o?ap(1):o,u=Th(s.shape,a.shape),h=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)h.push(a.shape[e]);h.push(1)}let p=md(a,s),d=il(e,l),c=Mf(el(i,ap(r))),f=il(il(il(c,c),c),ap(-.5));return{x:()=>1===s.rank?Ql(il(il(e,Ip(Ql(c,[1,1,1,s.shape[0]]),h)),l),a.shape):Ql(il(il(e,c),l),a.shape),mean:()=>{let e=il(il(c,ap(-1)),d);return 1===s.rank&&(e=hp(e,u)),Ql(e,s.shape)},variance:()=>{let e=il(il(f,p),d);return 1===s.rank&&(e=hp(e,u)),Ql(e,s.shape)},scale:()=>{let t=il(p,c),n=il(e,t);return 1===s.rank&&(n=hp(n,u)),Ql(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=hp(t,u)),Ql(t,s.shape)}}}},Jv={kernelName:gn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s}=n,i=ve(s,r.shape)[0];return{x:()=>{let t=r.shape,n=a.size,o=t.slice(0,i),l=o.length,u=t.slice(s,t.length).slice(1),h=u.length,p=Qv(0,l),d=Qv(l+1,l+1+h),c=ek([o,[n],u]),f=Ql(e,c),m=Ql(a,[n]),g=ek([[l],p,d]),y=Ym(f,g),b=Pm(y,m,r.shape[i]),x=Yh(g);return b=Ym(b,x),b},indices:()=>a}}};function Qv(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function ek(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var tk={kernelName:xn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Fh(n),b:()=>Fh(r)}}},nk={kernelName:wn,gradFunc:e=>({x:()=>Co(e,"float32")})},rk={kernelName:In,gradFunc:e=>({x:()=>Fh(e)})},ak={kernelName:Sn,gradFunc:e=>({x:()=>Fh(e)})},sk={kernelName:Nn,gradFunc:e=>({x:()=>Fh(e)})},ik={kernelName:Tn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=Ap(r,0);return{x:()=>Ah(s,e,il(e,a))}}},ok={kernelName:An,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>al(e,el(n,1))}}},lk={kernelName:$n,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>al(e,Co(n,"float32"))}}},uk={kernelName:On,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let t=yp(r);return md(e,il(hp(e,a,!0),t))}}}};function hk(e,t,n,r=5,a=1,s=1,i=.5){let o={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:i};return Xs.runKernel(Pn,o,l)}var pk=hi({localResponseNormalizationBackprop_:hk}),dk={kernelName:zn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>pk(r,a,e,s,i,o,l)}}};function ck(e,t,n,r){return t.rank<n.rank&&(t=Ql(t,qh(t.shape,r))),e.rank<n.rank&&(e=Ql(e,qh(e.shape,r))),{x:()=>il(e,Co(Eh(n,t),e.dtype))}}var fk={kernelName:Bn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],i=t[1],o=ve(a,s.shape),l=ck(e,i,s,o);return{x:()=>l.x()}}},mk={kernelName:Wn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>il(e,Co(Fp(n,r),"float32")),b:()=>il(e,Co(Hp(n,r),"float32"))}}};function gk(e,t,n,r,a,s,i){let o=oi(e,"dy","maxPool3dGrad"),l=oi(t,"input","maxPool3dGrad"),u=oi(n,"output","maxPool3dGrad"),h=o,p=l,d=u,c=!1;4===l.rank&&(c=!0,h=Ql(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=Ql(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Ql(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),le(5===h.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),le(5===p.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`)),le(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),Zl("maxPool3dGrad",s,i);let f={dy:h,input:p,output:d},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=Xs.runKernel(Hn,f,m);return c?Ql(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var yk=hi({maxPool3dGrad_:gk}),bk={kernelName:Gn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>yk(e,r,a,s,i,o,l)}}};function xk(e,t,n,r,a,s,i){let o=oi(e,"dy","maxPoolGrad"),l=oi(t,"input","maxPoolGrad"),u=oi(n,"output","maxPoolGrad");le(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),le(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),le(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),Zl("maxPoolGrad",s,i);let h={dy:o,input:l,output:u},p={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return Xs.runKernel(Un,h,p)}var wk=hi({maxPoolGrad_:xk}),vk={kernelName:Vn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>wk(e,r,a,s,i,o)}}},kk={kernelName:qn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=ve(a,r.shape),i=jh(r.shape,s)[1],o=pe(i);return{x:()=>{let t=r.shape.slice();s.forEach((e=>{t[e]=1}));let n=Ql(e,t);return al(il(n,Ud(r.shape,"float32")),o)}}}},Ik={kernelName:Kn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,o=ve(a,s.shape),l=ck(e,i,s,o);return{x:()=>l.x()}}},Sk={kernelName:Xn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>il(e,Co(qp(n,r),"float32")),b:()=>il(e,Co(Ap(n,r),"float32"))}}},Nk={kernelName:Yn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>pu(e,s,r.shape)}}},Tk={kernelName:Zn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ch(n.shape,r.shape);return{a:()=>{let t=Th(n.shape,a);return t.length>0?Ql(hp(e,t),n.shape):e},b:()=>{let t=il(e,ud(Cp(al(n,r)))),s=Th(r.shape,a);return s.length>0?Ql(hp(t,s),r.shape):t}}}},Ck={kernelName:Qn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ch(n.shape,r.shape);return{a:()=>{let t=il(e,Co(r,"float32")),s=Th(n.shape,a);return s.length>0?Ql(hp(t,s),n.shape):t},b:()=>{let t=il(e,Co(n,"float32")),s=Th(r.shape,a);return s.length>0?Ql(hp(t,s),r.shape):t}}}},_k={kernelName:er,gradFunc:e=>({x:()=>ud(e)})},Ek={kernelName:ir,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Vd(n.shape,"float32")}}},$k={kernelName:sr,gradFunc:e=>({x:()=>Fh(e)})},Ak={kernelName:or,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return Wm(e,r).map((e=>()=>e))}},Rk={kernelName:lr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>pu(e,s,r.shape)}}},Fk={kernelName:hr,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=Ch(s.shape,i.shape);return{a:()=>{let t=Co(i,"float32"),n=il(e,il(t,rp(s,md(t,ap(1))))),r=Th(s.shape,o);return r.length>0&&(n=hp(n,r)),Ql(n,s.shape)},b:()=>{let t=Ap(s,0),n=Ah(t,Jp(s),Fh(s)),r=il(e,il(a,n)),l=Th(i.shape,o);return l.length>0&&(r=hp(r,l)),Ql(r,i.shape)}}}},Dk={kernelName:pr,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=Ap(n,0);return{x:()=>Ah(a,e,il(e,r)),alpha:()=>{let t=Ah(a,Fh(e),il(e,n)),s=Th(r.shape,e.shape);return s.length>0&&(t=hp(t,s)),Ql(t,r.shape)}}}};function Mk(e,t,n){let r=e.shape.slice();r[n]=1;let a=Ql(t,r),s=ph(e,n,!0,!1),i=ph(e,n,!0,!0),o=il(s,i);return il(a,o)}function Ok(e,t,n){let r=e.shape.length,a=r-n.length,s=tw.getAxesPermutation(n,r),i=e;null!=s&&(i=Ym(e,s));let o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=i.reshape(o),h=Mk(u,t,a);if(h=h.reshape(i.shape),null!=s){let e=tw.getUndoAxesPermutation(s);h=Ym(h,e)}return h}var Lk={kernelName:dr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=[];return s=null==a?r.shape.map(((e,t)=>t)):"number"==typeof a?[a]:a,{x:()=>Ok(r,e,s)}}},zk={kernelName:en,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ch(n.shape,r.shape);return{a:()=>{let t=al(e,Co(r,"float32")),s=Th(n.shape,a);return s.length>0?Ql(hp(t,s),n.shape):t},b:()=>{let t=il(e,Co(n,"float32")),s=Th(r.shape,a);s.length>0&&(t=Ql(hp(t,s),r.shape));let i=lp(r);return ud(al(t,Co(i,"float32")))}}}},Pk={kernelName:br,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>al(e,ud(lp(n)))}}},Bk={kernelName:Nr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=il(qp(n,6),vm(n));return{x:()=>il(e,Co(r,"float32"))}}},Wk={kernelName:xr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>il(e,Co(vm(n),"float32"))}}},Vk={kernelName:wr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ql(e,n.shape)}}},Uk={kernelName:Ir,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>Xs.runKernel(Sr,a,n)}}},Gk={kernelName:vr,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>Xs.runKernel(kr,a,n)}}},Hk={kernelName:Tr,gradFunc:(e,t,n)=>{let{dims:r}=n,a=ve(r,e.shape);return{x:()=>If(e,a)}}},jk={kernelName:Cr,gradFunc:e=>({x:()=>Fh(e)})},qk={kernelName:_r,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ud(al(e,il(rp(n,1.5),2)))}}},Kk={kernelName:Ar,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>Co(Fh(n),"float32"),t:()=>il(e,Co(n,e.dtype)),e:()=>il(e,Co(Id(n),e.dtype))}}},Xk={kernelName:Rr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=Ap(n,ap(0)),r=ap(gw),a=ap(yw),s=il(e,a),i=il(il(e,r),yp(Co(n,"float32")));return Ah(t,s,i)}}}},Yk={kernelName:Lr,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>il(e,il(n,md(ap(1),n)))}}},Zk={kernelName:Or,gradFunc:e=>({x:()=>Fh(e)})},Jk={kernelName:Dr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>il(oh(Co(n,"float32")),e)}}},Qk={kernelName:Mr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>il(uh(Co(n,"float32")),e)}}},eI={kernelName:Fr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=Hx(r,a,s),u=[];for(let h=0;h<e.rank;h++)u.push([o[h],i[h]-o[h]-l[h]]);return{x:()=>dc(e,u)}}},tI={kernelName:Ur,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=!0,i=il(e,r);return{logits:()=>md(i,il(hp(i,[a],s),r))}}},nI={kernelName:zr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>il(e,uu(n))}}},rI={kernelName:Wr,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>yu(e,r,a)}}},aI={kernelName:Vr,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>su(e,r)}}},sI={kernelName:Pr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>al(e,il(ip(Co(n,"float32")),2))}}},iI={kernelName:Yr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>il(e,il(Co(n,"float32"),2))}}},oI={kernelName:Xr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=ap(2);return{a:()=>il(e,il(a,md(n,r))),b:()=>il(e,il(a,md(r,n)))}}},lI={kernelName:ca,gradFunc:e=>({x:()=>Fh(e)})},uI={kernelName:ta,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ch(n.shape,r.shape);return{a:()=>{let t=e,r=Th(n.shape,a);return r.length>0&&(t=hp(t,r)),Ql(t,n.shape)},b:()=>{let t=e,n=Th(r.shape,a);return n.length>0&&(t=hp(t,n)),Ql(ud(t),r.shape)}}}},hI={kernelName:Br,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;ve(s,r.shape).forEach((e=>{a[e]=1}));let i=Ql(e,a),o=il(i,Ud(r.shape,"float32"));return{x:()=>o}}},pI={kernelName:na,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>al(e,lp(oh(n)))}}},dI={kernelName:ra,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>il(md(ap(1),lp(n)),e)}}},cI={kernelName:aa,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let t=Fh(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=el(t,pu(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=el(t,pu(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=el(t,pu(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=el(t,pu(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},fI={kernelName:oa,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=Yh(a);return{x:()=>Ym(e,s)}}},mI={kernelName:ua,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>xm(e,a)}}},gI={kernelName:ha,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yI(e,n)}}};function yI(e,t){let n=Pd(t,Fh(t)),r=Ep(e,n),a=Fp(t,ap(0,"int32")),s=r.rank-a.rank;for(let o=0;o<s;++o)a=xp(a,o+1);a=vd(a,Ud(r.shape,"bool"));let i=Fh(r);return Ah(a,r,i)}var bI={kernelName:da,gradFunc:e=>({x:()=>Fh(e)})},xI=[lv,uv,hv,pv,dv,cv,fv,mv,gv,yv,bv,xv,kv,Nv,Tv,Cv,_v,Ev,$v,Av,Rv,Fv,Mv,Dv,zv,Pv,Bv,Wv,Vv,Uv,zk,Gv,Hv,jv,qv,Kv,Yv,Xv,Zv,Jv,tk,nk,rk,ak,sk,ik,ok,lk,uk,dk,fk,fk,mk,bk,vk,kk,Ik,Sk,Nk,Tk,Ck,_k,Ek,$k,Ak,Rk,Rk,Fk,Dk,Lk,Pk,Bk,Wk,Vk,Uk,Gk,Hk,jk,qk,Kk,Xk,Yk,Zk,Jk,Qk,eI,tI,nI,rI,rI,aI,aI,sI,oI,iI,lI,uI,hI,pI,dI,cI,fI,mI,gI,bI];for(let Gse of xI)Ca(Gse);Cs().prototype.abs=function(){return this.throwIfDisposed(),ll(this)},Cs().prototype.acos=function(){return this.throwIfDisposed(),hl(this)},Cs().prototype.acosh=function(){return this.throwIfDisposed(),dl(this)},Cs().prototype.add=function(e){return this.throwIfDisposed(),el(this,e)},Cs().prototype.all=function(e,t){return this.throwIfDisposed(),gl(this,e,t)},Cs().prototype.any=function(e,t){return this.throwIfDisposed(),bl(this,e,t)},Cs().prototype.argMax=function(e){return this.throwIfDisposed(),wl(this,e)},Cs().prototype.argMin=function(e){return this.throwIfDisposed(),kl(this,e)},Cs().prototype.asScalar=function(){return this.throwIfDisposed(),le(1===this.size,(()=>"The array must have only 1 element.")),Ql(this,[])},Cs().prototype.asType=function(e){return this.throwIfDisposed(),Co(this,e)},Cs().prototype.as1D=function(){return this.throwIfDisposed(),Ql(this,[this.size])},Cs().prototype.as2D=function(e,t){return this.throwIfDisposed(),Ql(this,[e,t])},Cs().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Ql(this,[e,t,n])},Cs().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Ql(this,[e,t,n,r])},Cs().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Ql(this,[e,t,n,r,a])},Cs().prototype.asin=function(){return this.throwIfDisposed(),Sl(this)},Cs().prototype.asinh=function(){return this.throwIfDisposed(),Tl(this)},Cs().prototype.atan=function(){return this.throwIfDisposed(),_l(this)},Cs().prototype.atan2=function(e){return this.throwIfDisposed(),$l(this,e)},Cs().prototype.atanh=function(){return this.throwIfDisposed(),Rl(this)},Cs().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),tu(this,e,t,n,r)},Cs().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),yu(this,e,t)},Cs().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),wu(this,e,t,n,r,a)},Cs().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Ru(this,e)},Cs().prototype.cast=function(e){return this.throwIfDisposed(),Co(this,e)},Cs().prototype.ceil=function(){return this.throwIfDisposed(),Du(this)},Cs().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Lu(this,e,t)},Cs().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ts&&(e=[e]),su([this,...e],t)},Cs().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Xu(this,e,t,n,r,a,s)},Cs().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Qu(this,e,t,n,r,a)},Cs().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),qu(this,e,t,n,r,a,s)},Cs().prototype.cos=function(){return this.throwIfDisposed(),oh(this)},Cs().prototype.cosh=function(){return this.throwIfDisposed(),uh(this)},Cs().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),ph(this,e,t,n)},Cs().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),ch(this,e,t,n)},Cs().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),yh(this,e,t)},Cs().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),xh(this,e,t,n,r,a,s)},Cs().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Ih(this,e,t,n,r,a)},Cs().prototype.divNoNan=function(e){return this.throwIfDisposed(),Mh(this,e)},Cs().prototype.div=function(e){return this.throwIfDisposed(),al(this,e)},Cs().prototype.dot=function(e){return this.throwIfDisposed(),Lh(this,e)},Cs().prototype.elu=function(){return this.throwIfDisposed(),Wh(this)},Cs().prototype.equal=function(e){return this.throwIfDisposed(),Eh(this,e)},Cs().prototype.erf=function(){return this.throwIfDisposed(),Uh(this)},Cs().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),mp(this,e,t)},Cs().prototype.exp=function(){return this.throwIfDisposed(),yp(this)},Cs().prototype.expandDims=function(e){return this.throwIfDisposed(),xp(this,e)},Cs().prototype.expm1=function(){return this.throwIfDisposed(),vp(this)},Cs().prototype.fft=function(){return this.throwIfDisposed(),sm(this)},Cs().prototype.flatten=function(){return this.throwIfDisposed(),Ql(this,[this.size])},Cs().prototype.floor=function(){return this.throwIfDisposed(),Cp(this)},Cs().prototype.floorDiv=function(e){return this.throwIfDisposed(),nl(this,e)},Cs().prototype.gather=function(e,t){return this.throwIfDisposed(),Ep(this,e,t)},Cs().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Fp(this,e)},Cs().prototype.greater=function(e){return this.throwIfDisposed(),Ap(this,e)},Cs().prototype.ifft=function(){return this.throwIfDisposed(),om(this)},Cs().prototype.irfft=function(){return this.throwIfDisposed(),um(this)},Cs().prototype.isFinite=function(){return this.throwIfDisposed(),Lp(this)},Cs().prototype.isInf=function(){return this.throwIfDisposed(),Pp(this)},Cs().prototype.isNaN=function(){return this.throwIfDisposed(),Wp(this)},Cs().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Up(this,e)},Cs().prototype.lessEqual=function(e){return this.throwIfDisposed(),qp(this,e)},Cs().prototype.less=function(e){return this.throwIfDisposed(),Hp(this,e)},Cs().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Yp(this,e,t,n,r)},Cs().prototype.logSigmoid=function(){return this.throwIfDisposed(),cd(this)},Cs().prototype.logSoftmax=function(e){return this.throwIfDisposed(),yd(this,e)},Cs().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),xd(this,e,t)},Cs().prototype.log=function(){return this.throwIfDisposed(),Jp(this)},Cs().prototype.log1p=function(){return this.throwIfDisposed(),ed(this)},Cs().prototype.logicalAnd=function(e){return this.throwIfDisposed(),vd(this,e)},Cs().prototype.logicalNot=function(){return this.throwIfDisposed(),Id(this)},Cs().prototype.logicalOr=function(e){return this.throwIfDisposed(),Nd(this,e)},Cs().prototype.logicalXor=function(e){return this.throwIfDisposed(),Cd(this,e)},Cs().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),ou(this,e,t,n)},Cs().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Fd(this,e,t,n,r)},Cs().prototype.max=function(e,t){return this.throwIfDisposed(),Qh(this,e,t)},Cs().prototype.maximum=function(e){return this.throwIfDisposed(),Pd(this,e)},Cs().prototype.mean=function(e,t){return this.throwIfDisposed(),Wd(this,e,t)},Cs().prototype.min=function(e,t){return this.throwIfDisposed(),tp(this,e,t)},Cs().prototype.minimum=function(e){return this.throwIfDisposed(),jd(this,e)},Cs().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Kd(this,e,t)},Cs().prototype.mod=function(e){return this.throwIfDisposed(),Yd(this,e)},Cs().prototype.mul=function(e){return this.throwIfDisposed(),il(this,e)},Cs().prototype.neg=function(){return this.throwIfDisposed(),ud(this)},Cs().prototype.norm=function(e,t,n){return this.throwIfDisposed(),cp(this,e,t,n)},Cs().prototype.notEqual=function(e){return this.throwIfDisposed(),ac(this,e)},Cs().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),ic(this,e,t,n)},Cs().prototype.onesLike=function(){return this.throwIfDisposed(),lc(this)},Cs().prototype.pad=function(e,t){return this.throwIfDisposed(),dc(this,e,t)},Cs().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),Tc(this,e,t,n,r,a,s)},Cs().prototype.pow=function(e){return this.throwIfDisposed(),rp(this,e)},Cs().prototype.prelu=function(e){return this.throwIfDisposed(),_c(this,e)},Cs().prototype.prod=function(e,t){return this.throwIfDisposed(),$c(this,e,t)},Cs().prototype.reciprocal=function(){return this.throwIfDisposed(),yf(this)},Cs().prototype.relu=function(){return this.throwIfDisposed(),xf(this)},Cs().prototype.relu6=function(){return this.throwIfDisposed(),vf(this)},Cs().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Ql(this,e.shape)},Cs().prototype.reshape=function(e){return this.throwIfDisposed(),Ql(this,e)},Cs().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),vy(this,e,t,n)},Cs().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Iy(this,e,t,n)},Cs().prototype.reverse=function(e){return this.throwIfDisposed(),If(this,e)},Cs().prototype.rfft=function(){return this.throwIfDisposed(),cm(this)},Cs().prototype.round=function(){return this.throwIfDisposed(),Ff(this)},Cs().prototype.rsqrt=function(){return this.throwIfDisposed(),Mf(this)},Cs().prototype.selu=function(){return this.throwIfDisposed(),Lf(this)},Cs().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Pf(this,e,t,n,r,a,s)},Cs().prototype.sigmoid=function(){return this.throwIfDisposed(),uu(this)},Cs().prototype.sign=function(){return this.throwIfDisposed(),Uf(this)},Cs().prototype.sin=function(){return this.throwIfDisposed(),Hf(this)},Cs().prototype.sinh=function(){return this.throwIfDisposed(),qf(this)},Cs().prototype.slice=function(e,t){return this.throwIfDisposed(),pu(this,e,t)},Cs().prototype.softmax=function(e){return this.throwIfDisposed(),rm(this,e)},Cs().prototype.softplus=function(){return this.throwIfDisposed(),pd(this)},Cs().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),kc(this,e,t)},Cs().prototype.split=function(e,t){return this.throwIfDisposed(),pm(this,e,t)},Cs().prototype.sqrt=function(){return this.throwIfDisposed(),ip(this)},Cs().prototype.square=function(){return this.throwIfDisposed(),lp(this)},Cs().prototype.squaredDifference=function(e){return this.throwIfDisposed(),mm(this,e)},Cs().prototype.squeeze=function(e){return this.throwIfDisposed(),ym(this,e)},Cs().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof Ts?[this,e]:[this,...e];return xm(n,t)},Cs().prototype.step=function(e){return this.throwIfDisposed(),vm(this,e)},Cs().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Im(this,e,t,n,r,a,s,i,o)},Cs().prototype.sub=function(e){return this.throwIfDisposed(),md(this,e)},Cs().prototype.sum=function(e,t){return this.throwIfDisposed(),hp(this,e,t)},Cs().prototype.tan=function(){return this.throwIfDisposed(),Nm(this)},Cs().prototype.tanh=function(){return this.throwIfDisposed(),cu(this)},Cs().prototype.tile=function(e){return this.throwIfDisposed(),Ip(this,e)},Cs().prototype.toBool=function(){return this.throwIfDisposed(),Co(this,"bool")},Cs().prototype.toFloat=function(){return this.throwIfDisposed(),Co(this,"float32")},Cs().prototype.toInt=function(){return this.throwIfDisposed(),Co(this,"int32")},Cs().prototype.topk=function(e,t){return this.throwIfDisposed(),Fm(this,e,t)},Cs().prototype.transpose=function(e){return this.throwIfDisposed(),Ym(this,e)},Cs().prototype.unique=function(e){return this.throwIfDisposed(),Lm(this,e)},Cs().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Pm(this,e,t)},Cs().prototype.unstack=function(e){return this.throwIfDisposed(),Wm(this,e)},Cs().prototype.where=function(e,t){return this.throwIfDisposed(),Ah(e,this,t)},Cs().prototype.zerosLike=function(){return this.throwIfDisposed(),Fh(this)};var wI=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,wI.prototype)}},vI=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,vI.prototype)}},kI=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,kI.prototype)}},II=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,II.prototype)}},SI=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,SI.prototype)}},NI=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}};function TI(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{let n=new Array(t);return n.fill(e),n}}function CI(e,t){if(!e)throw new SI(t)}function _I(e,t){let n=0;for(let r of e)r===t&&n++;return n}function EI(e){return 1===e.length?e[0]:e}function $I(e){return Array.isArray(e)?e:[e]}function AI(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function RI(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}var FI={};function DI(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function MI(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>MI(e)));else{let t=Object.keys(e);for(let n of t){let t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?MI(t):e[n]=t.value)}}}function OI(e,t={},n={},r="object",a=!1){if("string"==typeof e){let a,s=e;if(s in n)a=n[s];else if(s in FI)a=FI[s];else if(a=t[s],null==a)throw new kI(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{let s=e;if(null==s.className||null==s.config)throw new kI(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);let i,o,l=s.className;if(l in n?[i,o]=n[l]:l in FI?[i,o]=FI.className:l in t&&([i,o]=t[l]),null==i)throw new kI(`Unknown ${r}: ${l}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=o){let e={};for(let n of Object.keys(FI))e[n]=FI[n];for(let a of Object.keys(n))e[a]=n[a];let t=s.config;t.customObjects=e;let r=Object.assign({},FI);for(let a of Object.keys(n))FI[a]=n[a];MI(s.config);let l=o(i,s.config,n,a);return FI=Object.assign({},r),l}{let e=Object.assign({},FI);for(let r of Object.keys(n))FI[r]=n[r];let t=new i(s.config);return FI=Object.assign({},e),t}}}function LI(e,t){return e<t?-1:e>t?1:0}function zI(e,t){return-1*LI(e,t)}function PI(e){if(null==e)return e;let t=[];for(let n of e)-1===t.indexOf(n)&&t.push(n);return t}function BI(e){if(null==e)throw new kI(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function WI(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new kI(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function VI(e,t,n=0,r=1/0){return CI(n>=0),CI(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function UI(e,t){Array.isArray(e)?(Ra.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>UI(e,`element ${n+1} of ${t}`)))):Ra.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${GI(e)}.`))}function GI(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>GI(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function HI(e,t,n){let r,a=null!=n?n():Ra.now();return(...s)=>{let i=null!=n?n():Ra.now();return i-a<t||(a=i,r=e(...s)),r}}function jI(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}var qI=0;function KI(){return qI++}var XI={};function YI(e=""){return e in XI||(XI[e]=0),XI[e]+=1,e+XI[e].toString()}var ZI=["channelsFirst","channelsLast"],JI=["nearest","bilinear"],QI=["valid","same","causal"],eS=["max","avg"],tS=["sum","mul","concat","ave"],nS=new Map;function rS(e){WI(ZI,"DataFormat",e)}function aS(e){WI(JI,"InterpolationFormat",e)}function sS(e){WI(QI,"PaddingMode",e)}function iS(e){WI(eS,"PoolMode",e)}var oS=[],lS="/";function uS(e,t){oS.push(e);try{let e=t();return oS.pop(),e}catch(n){throw oS.pop(),n}}function hS(){return 0===oS.length?"":oS.join(lS)+lS}function pS(e){if(!mS(e))throw new Error("Not a valid tensor name: '"+e+"'");return hS()+e}function dS(e){if(!mS(e))throw new Error("Not a valid tensor name: '"+e+"'");nS.has(e)||nS.set(e,0);let t=nS.get(e);if(nS.set(e,nS.get(e)+1),t>0){let n=`${e}_${t}`;return nS.set(n,1),n}return e}var cS,fS=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function mS(e){return!!e.match(fS)}function gS(e){return e===parseInt(e.toString(),10)}function yS(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function bS(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function xS(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function wS(e,t){if(t<e)throw new kI(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}function vS(){return null==cS&&(cS=Zo().epsilon()),cS}function kS(){return"channelsLast"}function IS(e,t){return Co(e,t)}function SS(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Ql(e,n)}function NS(e,t){return Bo((()=>{if(2!==e.shape.length)throw new kI(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=SS(e,1);return FS(n,[1,t,1])}))}function TS(e){let t=[yS(e.shape)];return Ql(e,t)}function CS(e){if(e.rank<=1)throw new kI(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],yS(e.shape,1)];return Ql(e,t)}function _S(e,t,n){return Bo((()=>{switch(e.rank){case 1:return Xf(e,t,n);case 2:return Zf(e,[t,0],[n,e.shape[1]]);case 3:return Qf(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return tm(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return pu(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return pu(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new kI(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ES(e,t,n){return Bo((()=>{switch(e.rank){case 1:return Xf(e,t,n);case 2:return Zf(e,[0,t],[e.shape[0],n]);case 3:return Qf(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return tm(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new kI(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function $S(e,t,n,r){return Bo((()=>{switch(e.rank){case 1:return Xf(e,t,n);case 2:switch(r){case 1:return _S(e,t,n);case 2:return ES(e,t,n);default:throw new kI(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return _S(e,t,n);case 2:return Qf(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return ES(e,t,n);default:throw new kI(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return _S(e,t,n);case 2:return tm(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return tm(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return ES(e,t,n);default:throw new kI(`The axis is not within the rank of the tensor ${r}`)}default:throw new kI(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function AS(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),su(e,t)}function RS(e,t){switch(e.rank){case 1:return Pu([e,t]);case 2:return Wu([e,t],0);case 3:return Uu([e,t],0);case 4:return Hu([e,t],0);default:throw new kI(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function FS(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new kI(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Ip(e,t)}function DS(e,t=0,n=1,r,a){return lf(e,t,n,r,a)}function MS(e,t,n,r){if(e.rank<2||t.rank<2)throw new II(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let n=e.shape.slice(-1)[0],r=t.shape.slice(-2)[0];if(n!==r)throw new II(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank)return yg.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?zS(e.rank,r,kS()):null,activation:n});{let a=e.shape.slice(),s=a.pop();e=Ql(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],h=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Ql(Ym(t,h),[l,-1]);let p=[...a,...u],d=!1,c=!1;return Ql(yg.matMul({a:e,b:t,transposeA:d,transposeB:c,bias:r?zS(e.rank,r,kS()):null,activation:n}),p)}}function OS(e,t,n){return Bo((()=>(t=Array.isArray(t)?Tm(t,"int32"):Co(t,"int32"),Ep(e,t,n))))}function LS(e){return il(e,e)}function zS(e,t,n){let r=t.shape;if(1!==t.rank&&t.rank!==e)throw new kI(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Ql(t,[1,r[0],1,1,1]):Ql(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Ql(t,[1,1,1,1,r[0]]):Ql(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Ql(t,[1,r[0],1,1]):Ql(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Ql(t,[1,1,1,r[0]]):Ql(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Ql(t,[1,r[0],1]):Ql(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Ql(t,[1,1,r[0]]):Ql(t,[1].concat(r))}else if(e<3)return t;throw new kI(`Unsupported input rank by biasAdd: ${t.rank}`)}function PS(e,t,n){return Bo((()=>(null==n&&(n=kS()),rS(n),el(e,zS(e.rank,t,n)))))}function BS(e,t=1){if(1!==t)throw new II(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Wh(e)}function WS(e){return Bo((()=>al(e,el(ll(e),1))))}function VS(e,t,n,r){return Bo((()=>dg(e,t,n,r)))}function US(e){return Bo((()=>{let t=el(.5,il(.2,e));return Lu(t,0,1)}))}function GS(e,t,n=!1){return n?e():t()}var HS=["fanIn","fanOut","fanAvg"],jS=["normal","uniform","truncatedNormal"];function qS(e){WI(HS,"FanMode",e)}function KS(e){WI(jS,"Distribution",e)}var XS=class extends Sb.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},YS=class extends XS{apply(e,t){return Vd(e,t)}};YS.className="Zeros",Sb.registerClass(YS);var ZS=class extends XS{apply(e,t){return Ud(e,t)}};ZS.className="Ones",Sb.registerClass(ZS);var JS=class extends XS{constructor(e){if(super(),"object"!=typeof e)throw new kI(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new kI(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Bo((()=>il(ap(this.value),Ud(e,t))))}getConfig(){return{value:this.value}}};JS.className="Constant",Sb.registerClass(JS);var QS=class extends XS{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return df(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};QS.className="RandomUniform",Sb.registerClass(QS);var eN=class extends XS{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32","float32"!==t&&"int32"!==t)throw new II(`randomNormal does not support dType ${t}.`);return DS(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};eN.className="RandomNormal",Sb.registerClass(eN);var tN=class extends XS{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32","float32"!==t&&"int32"!==t)throw new II(`truncatedNormal does not support dType ${t}.`);return Mm(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};tN.className="TruncatedNormal",Sb.registerClass(tN);var nN=class extends XS{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Bo((()=>{if(2!==e.length||e[0]!==e[1])throw new kI("Identity matrix initializer can only be used for 2D square matrices.");return il(this.gain,Np(e[0]))}))}getConfig(){return{gain:this.gain}}};function rN(e,t="channelsLast"){let n,r;if(rS(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){let t=yS(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){let t=yS(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{let t=yS(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}nN.className="Identity",Sb.registerClass(nN);var aN=class extends XS{constructor(e){if(super(),e.scale<0)throw new kI(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,qS(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,KS(this.distribution),this.seed=e.seed}apply(e,t){let n=rN(e),r=n[0],a=n[1],s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){let n=Math.sqrt(s);if(t=t||"float32","float32"!==t&&"int32"!==t)throw new II(`${this.getClassName()} does not support dType ${t}.`);return Mm(e,0,n,t,this.seed)}{let n=Math.sqrt(3*s);return df(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};aN.className="VarianceScaling",Sb.registerClass(aN);var sN=class extends aN{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return aN.className}};sN.className="GlorotUniform",Sb.registerClass(sN);var iN=class extends aN{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return aN.className}};iN.className="GlorotNormal",Sb.registerClass(iN);var oN=class extends aN{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return aN.className}};oN.className="HeNormal",Sb.registerClass(oN);var lN=class extends aN{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return aN.className}};lN.className="HeUniform",Sb.registerClass(lN);var uN=class extends aN{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return aN.className}};uN.className="LeCunNormal",Sb.registerClass(uN);var hN=class extends aN{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return aN.className}};hN.className="LeCunUniform",Sb.registerClass(hN);var pN=class extends XS{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new II("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Bo((()=>{if(e.length<2)throw new II("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let t=e[0]>e[1]?[e[1],e[0]]:e,n=DS(t,0,1,"float32"),r=wb.gramSchmidt(n);return e[0]>e[1]&&(r=Ym(r)),il(this.gain,r)}))}getConfig(){return{gain:this.gain,seed:this.seed}}};pN.className="Orthogonal",Sb.registerClass(pN);var dN={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function cN(e,t={}){return OI(e,Sb.SerializationMap.getMap().classNameMap,t,"initializer")}function fN(e){return DI(e)}function mN(e){if("string"==typeof e){let t=e in dN?dN[e]:e;if("GlorotNormal"===t)return new iN;if("GlorotUniform"===t)return new sN;if("HeNormal"===t)return new oN;if("HeUniform"===t)return new lN;if("LeCunNormal"===t)return new uN;if("LeCunUniform"===t)return new hN;{let e={};return e.className=t,e.config={},cN(e)}}return e instanceof XS?e:cN(e)}function gN(e){return Array.isArray(e)&&Array.isArray(e[0])}function yN(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function bN(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new kI(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function xN(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new kI(`Expected exactly 1 Shape; got ${e.length}`)}return e}function wN(e){let t=0;for(let n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}var vN="Variable",kN=class{constructor(e,t="float32",n=vN,r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=KI(),n=null==n?vN:n,this.originalName=pS(n),this.name=dS(this.originalName),this.trainable_=r,this.constraint=a,this.val=Um(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),IN(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function IN(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function SN(e){return e.map((e=>e.read()))}function NN(e){e.forEach((e=>{e[0].write(e[1])}))}var TN=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},CN=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=KI(),null!=s&&(this.originalName=pS(s),this.name=dS(this.originalName)),this.rank=t.length}},_N=0,EN=class{constructor(e,t){this.callArgs=t,this.id=_N++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},$N=0,AN=class extends Sb.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=$N++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=AI(e)+"_"+YI(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new vI(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new kI(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return EI(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return EI(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new wI(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new wI(`Layer ${this.name} is not connected, no input to return.`);return EI(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new wI(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new wI(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return EI(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=$I(e),null==this.inputSpec||0===this.inputSpec.length)return;let t=$I(this.inputSpec);if(e.length!==t.length)throw new kI(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let r=e[n],a=t[n];if(null==a)continue;let s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new kI(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new kI(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new kI(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new kI(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){let e=r.shape;for(let t in a.axes){let r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new kI(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){let t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new kI(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=$I(e),r=!0;for(let s of n)if(!(s instanceof CN)){r=!1;break}let a=!0;for(let s of n)if(s instanceof CN){a=!1;break}if(r===a)throw new kI("Arguments to apply() must be all SymbolicTensors or all Tensors");return uS(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);let t=[];for(let n of $I(e))t.push(n.shape);this.build(EI(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t),a=$I(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=EI(s),null!=this.activityRegularizer)throw new II("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{let n,r=RN(e),a=this.computeOutputShape(r),s=FN(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?r[0]:r),n=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,r)=>new CN(s,n,this,$I(e),t,this.name,r))):new CN(s,a,this,$I(e),t,this.name),this.addInboundNode(e,n,null,null,r,a,t),this._refCount++,null!=this.activityRegularizer)throw new II("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return n}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new wI(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new wI(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new vI(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return wN(this.weights)}build(e){this.built=!0}getWeights(e=!1){return SN(e?this.trainableWeights:this.weights)}setWeights(e){Bo((()=>{let t=this.weights;if(t.length!==e.length)throw new kI(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let n=[],r=SN(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!Ra.arraysEqual(s.shape,o.shape))throw new kI(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}NN(n)}))}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new kI(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():mN("zeros"));let l=r.apply(t,n),u=new kN(l,n,e,s,i);return l.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=$I(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){let o=$I(e);t=$I(t),n=$I(n),r=$I(r),a=yN(a),s=yN(s);let l=[],u=[],h=[];for(let p of o)l.push(p.sourceLayer),u.push(p.nodeIndex),h.push(p.tensorIndex);new EN({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:h,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let p=0;p<t.length;p++)t[p].sourceLayer=this,t[p].nodeIndex=this.inboundNodes.length-1,t[p].tensorIndex=p}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function RN(e){e=$I(e);let t=[];for(let n of e)t.push(n.shape);return EI(t)}function FN(e){return"float32"}function DN(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{let e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{let t=[];for(let n=0;n<e.inboundLayers.length;n++){let r=e.inputTensors[n],a=e.inboundLayers[n],s=e.nodeIndices[n],i=DN(r,a,s);for(let e of i)-1===t.indexOf(e)&&t.push(e)}return t}}}var MN=class extends AN{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:YI("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new kI("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new kI("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new kI("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new CN(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new EN({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new kI(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function ON(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new kI("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new MN({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}function LN(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Co(t,e.dtype)}catch(n){throw new kI(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}MN.className="InputLayer",Sb.registerClass(MN);var zN=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof zN)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new kI(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=LN(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof CN){if(null==this.id2Value[e.id])throw new kI(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{let t=this.name2Id[e];if(null==t)throw new kI(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof CN){if(null==this.id2Value[e.id])throw new kI(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{let t=this.name2Id[e];if(null==t)throw new kI(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Wo(this.id2Mask)}},PN=new NI,BN=new NI;function WN(e){null!=PN&&PN.setMaxEntries(e),null!=BN&&BN.setMaxEntries(e)}function VN(e,t,n,r){let a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(let f of o)-1!==u.indexOf(f)?l.push(t.getValue(f)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let h,p=o.join(",")+"|"+t.names().sort().join(","),d=PN.get(p);if(null==d){let e=UN(i,t);d=e.sorted,h=e.recipientCounts,PN.put(p,d),BN.put(p,h)}h={},a||Object.assign(h,BN.get(p));let c=new zN(t);for(let f=0;f<d.length;++f){if(null!=r){let e=zo().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}let e=d[f],s=e.sourceLayer;if(s instanceof MN)continue;let i=[],u=[],p=[],m=!1;for(let n of e.inputs){let e=c.getValue(n),r=c.getMask(n);i.push(e),u.push(r),null!=r&&(m=!0),a||(h[n.name]--,0===h[n.name]&&!t.hasKey(n)&&-1===o.indexOf(n.name)&&!e.isDisposed&&!0!==n.sourceLayer.stateful&&p.push(e))}m&&(n=n||{},n.mask=u[0]);let g=$I(s.apply(i,n)),y=null;s.supportsMasking&&(y=s.computeMask(i,u));let b=jN(e),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){c.hasKey(x[t])||c.add(x[t],g[t],Array.isArray(y)?y[0]:y);let e=o.indexOf(x[t].name);-1!==e&&(l[e]=g[t])}a||Wo(p)}return c.disposeMasks(),s?l:l[0]}function UN(e,t){Ra.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){let a=HN(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:e,recipientMap:i}=HN(s,t);for(let t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(let t in i)null==r[t]&&(r[t]=new Set),i[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:GN(r)}}function GN(e){let t={};for(let n in e)t[n]=e[n].size;return t}function HN(e,t){let n=new Set,r=[],a={};for(let o of t.names())n.add(o);let s=[],i=[];for(s.push(e);s.length>0;){let e=s[s.length-1];if(n.has(e.name)){s.pop();continue}let t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(let t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),!n.has(t.name)&&s.push(t)}}return{sorted:r,recipientMap:a}}function jN(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}var qN=Je();qN.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),WN);var KN={};function XN(e,t){return Bo((()=>ip(hp(il(e,e),t,!0))))}C(KN,{maxNorm:()=>sT,minMaxNorm:()=>lT,nonNeg:()=>oT,unitNorm:()=>iT});var YN=class extends Sb.Serializable{getConfig(){return{}}},ZN=class extends YN{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Bo((()=>{let t=XN(e,this.axis),n=Lu(t,0,this.maxValue);return il(e,al(n,el(vS(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};ZN.className="MaxNorm",Sb.registerClass(ZN);var JN=class extends YN{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Bo((()=>al(e,el(vS(),XN(e,this.axis)))))}getConfig(){return{axis:this.axis}}};JN.className="UnitNorm",Sb.registerClass(JN);var QN=class extends YN{apply(e){return xf(e)}};QN.className="NonNeg",Sb.registerClass(QN);var eT=class extends YN{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Bo((()=>{let t=XN(e,this.axis),n=el(il(this.rate,Lu(t,this.minValue,this.maxValue)),il(1-this.rate,t));return il(e,al(n,el(vS(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};eT.className="MinMaxNorm",Sb.registerClass(eT);var tT={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function nT(e){return DI(e)}function rT(e,t={}){return OI(e,Sb.SerializationMap.getMap().classNameMap,t,"constraint")}function aT(e){if(null==e)return null;if("string"==typeof e){let t={className:e in tT?tT[e]:e,config:{}};return rT(t)}return e instanceof YN?e:rT(e)}function sT(e){return new ZN(e)}function iT(e){return new JN(e)}function oT(){return new QN}function lT(e){return new eT(e)}var uT={};function hT(){return new YS}function pT(){return new ZS}function dT(e){return new JS(e)}function cT(e){return new QS(e)}function fT(e){return new eN(e)}function mT(e){return new tN(e)}function gT(e){return new nN(e)}function yT(e){return new aN(e)}function bT(e){return new sN(e)}function xT(e){return new iN(e)}function wT(e){return new oN(e)}function vT(e){return new lN(e)}function kT(e){return new uN(e)}function IT(e){return new hN(e)}function ST(e){return new pN(e)}C(uT,{constant:()=>dT,glorotNormal:()=>xT,glorotUniform:()=>bT,heNormal:()=>wT,heUniform:()=>vT,identity:()=>gT,leCunNormal:()=>kT,leCunUniform:()=>IT,ones:()=>pT,orthogonal:()=>ST,randomNormal:()=>fT,randomUniform:()=>cT,truncatedNormal:()=>mT,varianceScaling:()=>yT,zeros:()=>hT});var NT,TT={};async function CT(e){if(null==e)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if("number"!=typeof s){let e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){let a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];Wo(r)}}function _T(e){if(null!=e)for(let t in e){let n=e[t];"number"!=typeof n&&n.dispose()}}C(TT,{Layer:()=>AN,RNN:()=>NE,RNNCell:()=>TE,activation:()=>uA,add:()=>bA,alphaDropout:()=>lR,average:()=>xA,averagePooling1d:()=>_A,averagePooling2d:()=>AA,averagePooling3d:()=>DA,avgPool1d:()=>EA,avgPool2d:()=>RA,avgPool3d:()=>MA,avgPooling1d:()=>$A,avgPooling2d:()=>FA,avgPooling3d:()=>OA,batchNormalization:()=>NA,bidirectional:()=>eR,categoryEncoding:()=>cR,centerCrop:()=>pR,concatenate:()=>wA,conv1d:()=>eA,conv2d:()=>tA,conv2dTranspose:()=>nA,conv3d:()=>rA,conv3dTranspose:()=>aA,convLstm2d:()=>YA,convLstm2dCell:()=>ZA,cropping2D:()=>iA,dense:()=>hA,depthwiseConv2d:()=>lA,dot:()=>SA,dropout:()=>pA,elu:()=>K$,embedding:()=>yA,flatten:()=>cA,gaussianDropout:()=>oR,gaussianNoise:()=>iR,globalAveragePooling1d:()=>LA,globalAveragePooling2d:()=>zA,globalMaxPool1d:()=>nR,globalMaxPool2d:()=>rR,globalMaxPooling1d:()=>PA,globalMaxPooling2d:()=>BA,gru:()=>GA,gruCell:()=>HA,input:()=>v_,inputLayer:()=>q$,layerNormalization:()=>TA,leakyReLU:()=>Y$,lstm:()=>jA,lstmCell:()=>qA,masking:()=>uR,maxPool1d:()=>aR,maxPool2d:()=>sR,maxPooling1d:()=>WA,maxPooling2d:()=>VA,maxPooling3d:()=>UA,maximum:()=>vA,minimum:()=>kA,multiply:()=>IA,permute:()=>gA,prelu:()=>Z$,reLU:()=>X$,repeatVector:()=>fA,rescaling:()=>hR,reshape:()=>mA,resizing:()=>dR,rnn:()=>JA,separableConv2d:()=>sA,simpleRNN:()=>KA,simpleRNNCell:()=>XA,softmax:()=>J$,spatialDropout1d:()=>dA,stackedRNNCells:()=>QA,thresholdedReLU:()=>Q$,timeDistributed:()=>tR,upSampling2d:()=>oA,zeroPadding2d:()=>CA}),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(NT||(NT={}));var ET=125,$T=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},AT=class{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},RT=class extends $T{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let n=null==t.size?0:t.size;this.seen+=n;for(let r in t){let e=t[r];if("number"==typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;let a=Bo((()=>el(this.totals[r],il(e,n))));this.totals[r]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let n of this.params.metrics)null!=this.totals[n]&&("number"==typeof this.totals[n]?t[n]=this.totals[n]/this.seen:Bo((()=>{let e=il(al(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),Vo(t[n])})))}},FT=class extends $T{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(let n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let a in this.history){let r=this.history[a];for(let s=0;s<r.length;++s)if("number"!=typeof r[s]){let i=r[s];e.push(i.data()),t.push(a),n.push(s)}}let r=await Promise.all(e);for(let a=0;a<r.length;++a)this.history[t[a]][n[a]].dispose(),this.history[t[a]][n[a]]=r[a][0]}},DT=class extends $T{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Qx,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=ET),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ra.isNumber(this.yieldEvery)&&(this.maybeWait=HI(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];null!=this.yield&&(await CT(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await CT(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];null!=this.epochEnd&&(await CT(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await CT(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];null!=this.batchEnd&&(await CT(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Ra.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await CT(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await CT(e),await this.trainEnd(e))}};function MT(e,t){return null==e&&(e={}),e instanceof $T?[e]:Array.isArray(e)&&e[0]instanceof $T?e:$I(e).map((e=>new DT(e,t)))}var OT=class{constructor(){}static registerCallbackConstructor(e,t){Ra.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),OT.checkForDuplicate(t),null==OT.constructors[e]&&(OT.constructors[e]=[]),OT.constructors[e].push(t)}static checkForDuplicate(e){for(let t in OT.constructors)OT.constructors[+t].forEach((t=>{if(t===e)throw new kI("Duplicate callback constructor.")}))}static clear(){OT.constructors={}}static createCallbacks(e){let t=[];for(let n in OT.constructors){let r=+n;e>=r&&t.push(...OT.constructors[r])}return t.map((e=>new e))}};function LT(e,t,n,r,a,s,i,o,l){let u=new FT,h=[new RT,...OT.createCallbacks(t)];null!=e&&h.push(...e),h.push(u);let p=new AT(h);return p.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:p,history:u}}function zT(e,t={},n=!1){return OI(e,Sb.SerializationMap.getMap().classNameMap,t,"layer",n)}function PT(e,t){return Bo((()=>{"float32"!==e.dtype&&(e=Co(e,"float32"));let n=hp(LS(e),t,!0),r=Mu(n.shape,vS()),a=ip(Pd(n,r));return al(e,a)}))}function BT(e,t){return Bo((()=>Wd(LS(md(t,e)),-1)))}function WT(e,t){return Bo((()=>Wd(ll(md(t,e)),-1)))}function VT(e,t){return Bo((()=>{let n=md(e,t),r=Lu(ll(e),vS(),Number.MAX_VALUE),a=ll(al(n,r));return il(100,Wd(a,-1))}))}function UT(e,t){return Bo((()=>{let n=Lu(t,vS(),Number.MAX_VALUE),r=Jp(el(1,n)),a=Lu(e,vS(),Number.MAX_VALUE),s=Jp(el(1,a));return Wd(LS(md(r,s)),-1)}))}function GT(e,t){return Bo((()=>{let n=Pd(0,md(1,il(e,t)));return Wd(LS(n),-1)}))}function HT(e,t){return Bo((()=>{let n=Pd(0,md(1,il(e,t)));return Wd(n,-1)}))}function jT(e,t){return Bo((()=>{let n=hp(il(e,t),-1),r=Qh(il(md(1,e),t),-1);return Pd(0,el(1,md(r,n)))}))}function qT(e,t){return Bo((()=>{let n=Math.log(2),r=md(t,e),a=md(el(r,pd(il(-2,r))),n);return Wd(a,-1)}))}function KT(e,t,n=!1){return Bo((()=>{if(n)t=rm(t);else{let e=hp(t,t.shape.length-1,!0);t=al(t,e)}return t=Lu(t,vS(),1-vS()),ud(hp(il(Co(e,"float32"),Jp(t)),t.shape.length-1))}))}function XT(e,t,n=!1){return Bo((()=>{let r=Co(Cp(TS(e)),"int32");t=Lu(t,vS(),1-vS());let a=t.shape,s=Ql(ic(r,a[a.length-1]),a);return KT(s,t,n)}))}function YT(e,t){if(!Ra.arraysEqual(e.shape,t.shape))throw new kI(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Bo((()=>{let n=xf(t),r=ud(ll(t));return el(md(n,il(t,e)),ed(yp(r)))}))}function ZT(e,t){return Bo((()=>{let n;return n=Lu(t,vS(),1-vS()),n=Jp(al(n,md(1,n))),Wd(YT(e,n),-1)}))}function JT(e,t){return Bo((()=>{let n=Lu(e,vS(),1),r=Lu(t,vS(),1);return hp(il(e,Jp(al(n,r))),-1)}))}function QT(e,t){return Bo((()=>{let n=Jp(el(vS(),t));return Wd(md(t,il(e,n)),-1)}))}function eC(e,t){return Bo((()=>{let n=PT(e,-1),r=PT(t,-1),a=il(n,r);return ud(hp(a,-1))}))}OT.constructors={};var tC={meanSquaredError:BT,meanAbsoluteError:WT,meanAbsolutePercentageError:VT,meanSquaredLogarithmicError:UT,squaredHinge:GT,hinge:HT,categoricalHinge:jT,logcosh:qT,categoricalCrossentropy:KT,sparseCategoricalCrossentropy:XT,binaryCrossentropy:ZT,kullbackLeiblerDivergence:JT,poisson:QT,cosineProximity:eC};function nC(e){if("string"==typeof e){if(e in tC)return tC[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new kI(t)}return e}function rC(e,t){return Bo((()=>{let n=il(.5,lc(t)),r=IS(Ap(t,n),e.dtype);return Wd(Eh(e,r),-1)}))}function aC(e,t){return Bo((()=>IS(Eh(wl(e,-1),wl(t,-1)),"float32")))}function sC(e,t){return Bo((()=>Co(hp(vd(Eh(e,1),Eh(t,1))),"float32")))}function iC(e,t){return Bo((()=>Co(hp(vd(Eh(e,1),Eh(t,0))),"float32")))}function oC(e,t){return Bo((()=>Co(hp(vd(Eh(e,0),Eh(t,1))),"float32")))}function lC(e,t){return Bo((()=>{let n=sC(e,t),r=oC(e,t),a=el(n,r);return Co(Ah(Ap(a,0),al(n,a),0),"float32")}))}function uC(e,t){return Bo((()=>{let n=sC(e,t),r=iC(e,t),a=el(n,r);return Co(Ah(Ap(a,0),al(n,a),0),"float32")}))}function hC(e,t){return ZT(e,t)}function pC(e,t){return e.rank===t.rank&&(e=ym(e,[e.rank-1])),t=wl(t,-1),t.dtype!==e.dtype&&(t=Co(t,e.dtype)),Co(Eh(e,t),"float32")}var dC=BT,cC=BT,fC=WT,mC=WT,gC=VT,yC=VT,bC=KT,xC=eC,wC=XT,vC={binaryAccuracy:rC,categoricalAccuracy:aC,precision:lC,categoricalCrossentropy:bC,sparseCategoricalCrossentropy:wC,mse:dC,MSE:cC,mae:fC,MAE:mC,mape:gC,MAPE:yC,cosine:xC};function kC(e){if("string"==typeof e&&e in vC)return vC[e];if("string"!=typeof e&&null!=e)return e;throw new kI(`Unknown metric ${e}`)}function IC(e){if(CI(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(let n of Object.keys(tC))if(tC[n]===e){t=n;break}if(void 0!==t)return t;for(let n of Object.keys(vC))if(vC[n]===e){t=n;break}return void 0!==t?t:e.name}}function SC(e){let t={Adagrad:()=>Zx.adagrad(.01),Adadelta:()=>Zx.adadelta(1,.95,vS()),Adam:()=>Zx.adam(.001,.9,.999,vS()),Adamax:()=>Zx.adamax(.002,.9,.999,vS(),0),RMSProp:()=>Zx.rmsprop(.001,.9,0,vS()),SGD:()=>Zx.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new kI(`Unknown Optimizer ${e}`)}function NC(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!TC(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function TC(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if("string"!=typeof n||!TC(e[n]))return!1;return!0}if(Array.isArray(e)){for(let t of e)if(!TC(t))return!1;return!0}return!1}{let t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function CC(e,t,n,r=console.log){let a,s=EC(e),i=["Layer (type)","Input Shape","Output shape","Param #"];if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){i.push("Receives inputs"),a=[];for(let t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}r("_".repeat(t)),$C(i,n,r),r("=".repeat(t));let o=e.layers;for(let h=0;h<o.length;++h)s?AC(o[h],n,r):RC(o[h],n,a,r),r((h===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=_C(e),u=wN(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function _C(e){let t;return t=null!=e.collectedTrainableWeights?wN(e.collectedTrainableWeights):wN(e.trainableWeights),t}function EC(e){let t=!0,n=[],r=[];for(let a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(let a of n){if(a.length>1||1===a.length&&a[0].inboundLayers.length>1){t=!1;break}r.push(...a)}if(t)for(let a of e.layers){let e=!1;for(let n of a.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}function $C(e,t,n=console.log){let r="";for(let a=0;a<e.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=e[a],r=r.slice(0,t[a]),r+=" ".repeat(t[a]-r.length);n(r)}function AC(e,t,n){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(l){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(l){r="multiple"}let s=e.name,i=e.getClassName(),o=[`${s} (${i})`,a,r,e.countParams().toString()];$C(o,t,n)}function RC(e,t,n,r){let a,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(p){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(p){a="multiple"}let i=[];for(let d of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(d)))for(let e=0;e<d.inboundLayers.length;++e){let t=d.inboundLayers[e].name,n=d.nodeIndices[e],r=d.tensorIndices[e];i.push(`${t}[${n}][${r}]`)}let o=e.name,l=e.getClassName(),u=0===i.length?"":i[0],h=[`${o} (${l})`,s,a,e.countParams().toString(),u];$C(h,t,r);for(let d=1;d<i.length;++d)$C(["","","","",i[d]],t,r)}function FC(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function DC(e,t){if(null===e)return null;if("string"==typeof e)return RI(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];FC(t,a,r)?n.push(r):n.push(DC(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{let e=RI(n);t[e]=DC(r,e)}}return t}}function MC(e,t){if(null==e)return null;if("string"==typeof e)return AI(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];FC(t,a,r)?n.push(r):n.push(MC(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n],a=AI(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof r?MC(r,n):r}return t}}var OC="4.2.0",LC=class extends AN{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){let e=this.getClassName().toLowerCase();this.name=YI(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],PI(this.inputs).length!==this.inputs.length)throw new kI(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);PI(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(let y of this.inputs){let e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;CI(0===t,"input layer has >1 nodes"),CI(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let t=this.inputLayers[y];if(!(t instanceof MN))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));let t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,l)=>{(null==r||null==a||null==l)&&(r=e.sourceLayer,a=e.nodeIndex,l=e.tensorIndex);let u=r.inboundNodes[a];if(-1!==n.indexOf(u))throw new vI(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(LC.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);let h=u.inboundLayers.length;for(let s=0;s<h;s++){let e=u.inputTensors[s],r=u.inboundLayers[s],a=u.nodeIndices[s],i=u.tensorIndices[s];o(e,t,n,r,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(let y of this.outputs)o(y,l,u);let h=i.slice().reverse();for(let y of h){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id],s=null==r[y.outboundLayer.id]?0:r[y.outboundLayer.id];e=Math.max(e,s),r[y.outboundLayer.id]=e,a[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let r=0;r<y.inboundLayers.length;r++){let a=y.inboundLayers[r],s=y.nodeIndices[r],i=a.inboundNodes[s],o=null==t[i.id]?0:t[i.id];t[i.id]=Math.max(e+1,o),n[i.id]=i}}let p={};for(let y in t){let e=t[y];e in p||(p[e]=[]),p[e].push(n[y])}let d={};for(let y in r){let e=r[y];e in d||(d[e]=[]),d[e].push(a[y])}let c=Object.keys(d).map((e=>parseInt(e,10))).sort(zI);this.layers=[];for(let y of c){let e=d[y];e.sort(((e,t)=>{let n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(let t of e)t instanceof LC&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,c=Object.keys(p).map((e=>parseInt(e,10))).sort(zI);let f=this.inputs.slice(),m=[];for(let y of c)for(let e of p[y]){let t=e.outboundLayer;if(null!=t){for(let n of e.inputTensors)if(-1===f.indexOf(n))throw new vI(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(let t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=p;let g=this.layers.map((e=>e.name));for(let y of g){let e=g.filter((e=>e===y)).length;if(1!==e)throw new vI(`The name "${y}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new EN({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new kI("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},r=0;for(let s of this.layers)for(let e of s.weights){if(null!=n[e.originalName])throw new kI(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}let a=[];for(let s in e){let r=s;if(null==n[s]){let e=s.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])a.push([n[r],e[s]]);else if(t)throw new kI(`Provided weight data has no target variable: ${s}`);delete n[r]}if(t){let e=[];for(let t in n)e.push(t);if(e.length>0)throw new kI(`${e.length} of ${r} weights are not set: ${e}`)}NN(a)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${OC}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=MC(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Bo((()=>{e=$I(e);let n=new zN;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return VN(this.outputs,n,t)}))}computeMask(e,t){return Bo((()=>{let n;return e=$I(e),n=null==t?TI(null,e.length):$I(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){let t=yN(e);if(t.length!==this.inputLayers.length)throw new kI(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let e=this.inputLayers[i],r=t[i],a=e.name+"_0_0";n[a]=r}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(zI);if(r.length>1)for(let i of r){let e=this.nodesByDepth[i];for(let t of e){let e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;let r=[];for(let o=0;o<t.inboundLayers.length;o++){let e=t.inboundLayers[o],a=t.nodeIndices[o],s=t.tensorIndices[o],i=`${e.name}_${a}_${s}`,l=n[i];r.push(l)}let a=e.computeOutputShape(EI(r)),s=yN(a),i=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++){let r=`${e.name}_${i}_${t}`;n[r]=s[t]}}}let a=[],s=[];for(let i=0;i<this.outputLayers.length;i++){let e=this.outputLayers[i],t=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],r=`${e.name}_${t}_${n}`;s.push(r)}for(let i=0;i<s.length;i++){let e=s[i];CI(e in n),a.push(n[e])}return EI(a)}runInternalGraph(e,t){null==t&&(t=TI(null,e.length));let n={};for(let o=0;o<this.inputs.length;++o){let r=this.inputs[o],a=e[o],s=t[o];n[r.id]=[a,s]}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(zI);for(let o of r){let e=this.nodesByDepth[o];for(let t of e){let e=t.outboundLayer,r=t.inputTensors,a=t.outputTensors,s=new Array;for(let t of r)t.id in n&&s.push(n[t.id]);if(s.length===r.length){let r,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===s.length){let[t,n]=s[0];null==u.mask&&(u.mask=n),o=$I(e.call(t,u)),l=$I(e.computeMask(t,n)),r=[t],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==u.mask&&(u.mask=i),o=$I(e.call(r,u)),l=$I(e.computeMask(r,i));if(e.activityRegularizer)throw new II("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){let t=a[e],r=o[e],s=l[e];n[t.id]=[r,s]}}}}let a=[],s=[],i=[];for(let o of this.outputs){CI(o.id in n,`Could not compute output ${o.name} : ${o.id}`);let[e,t]=n[o.id];i.push(e.shape),a.push(e),s.push(t)}return[a,s,i]}buildNodeConversionMap(e){let t,n={};for(let r of this.layers){t=r instanceof LC?1:0;for(let e=0;e<r.inboundNodes.length;e++){let a=LC.nodeKey(r,e);this.containerNodes.has(a)&&(n[a]=t,t+=1)}}return n}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new kI(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new kI("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new kI(`No such layer: ${e}`)}calculateLosses(){return Bo((()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let r=LC.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let i of this.layers){let e=i.getClassName(),r=i.getConfig(),a=[];for(let n=0;n<i.inboundNodes.length;n++){let e=i.inboundNodes[n],r=LC.nodeKey(i,n),o={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),o=e.callArgs}catch(s){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),o={}}if(e.inboundLayers.length>0){let n=[];for(let r=0;r<e.inboundLayers.length;r++){let a=e.inboundLayers[r],s=e.nodeIndices[r],i=e.tensorIndices[r],l=LC.nodeKey(a,s),u=t[l];null==u&&(u=0),n.push([a.name,u,i,o])}a.push(n)}}}let o={};o.name=i.name,o.className=e,o.config=r,o.inboundNodes=a,n.push(o)}e.layers=n;let r=[];for(let i=0;i<this.inputLayers.length;i++){let e=this.inputLayers[i],n=this.inputLayersNodeIndices[i],a=LC.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let s=t[a];null==s&&(s=0);let o=this.inputLayersTensorIndices[i];r.push([e.name,s,o])}e.inputLayers=r;let a=[];for(let i=0;i<this.outputLayers.length;i++){let e=this.outputLayers[i],n=this.outputLayersNodeIndices[i],r=LC.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let s=t[r];null==s&&(s=0);let o=this.outputLayersTensorIndices[i];a.push([e.name,s,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){let a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){let n,r=[];for(let s of t){let o=s[0],l=s[1],u=s[2];if(n=null==s[3]?{}:s[3],!(o in a))return void i(e,t);let h=a[o];if(h.inboundNodes.length<=l)return void i(e,t);let p=h.inboundNodes[l];r.push(p.outputTensors[u])}r.length>0&&e.apply(EI(r),n)}function l(e){let n=e.name,s=zT(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new kI(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}let u=t.name,h=t.layers;for(let m of h)l(m);for(;!BI(s);)for(let e of h){let t=a[e.name];if(t.name in s){let e=s[t.name];delete s[t.name];for(let n of e)o(t,n)}}let p=[],d=[],c=t.inputLayers;for(let m of c){let e=m[0],t=m[1],n=m[2];CI(e in a);let r=a[e].inboundNodes[t].outputTensors;p.push(r[n])}let f=t.outputLayers;for(let m of f){let e=m[0],t=m[1],n=m[2];CI(e in a);let r=a[e].inboundNodes[t].outputTensors;d.push(r[n])}return new e({inputs:p,outputs:d,name:u})}get stateful(){if(this._stateful)throw new kI("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Bo((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}};function zC(e,t,n){let r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function PC(e,t){return zC(e,t,"classWeight")}async function BC(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){let t=Bo((()=>{if(1===e.shape.length)return Eo(e);if(2===e.shape.length){if(e.shape[1]>1)return wl(e,1);if(1===e.shape[1])return Ql(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Wo(t);let a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),Tm(a,"float32")}return null}function WC(e,t){return il(e,t)}var VC=32;function UC(e,t){let n,r,a=t;n=a.xs,r=a.ys,Ra.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));let s=GC("input",e.inputNames,n),i=GC("output",e.outputNames,r),o=s[0].shape[0];Ra.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),Ra.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let l=0;l<s.length;l++)Ra.assert(s[l].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[l]} has ${s[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let l=0;l<i.length;l++)Ra.assert(i[l].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function GC(e,t,n){if(n instanceof Ts)return[n];if(Array.isArray(n))return Ra.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{let r=[];for(let a of t){if(null==n[a])throw new kI(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function HC(e){if(3===e.length)throw new II("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function jC(e,t,n){let r=null!=n.batchesPerEpoch;if(Ra.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),Ra.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),Ra.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),Ra.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),Ra.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a,s,i=null!=n.validationData;if(i)if(KC(n.validationData))Ra.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{let e=HC(n.validationData);a=e.xs,s=e.ys}let o,l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();o=i?u.slice().concat(u.map((e=>"val_"+e))):u.slice();let h=MT(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:d,history:c}=LT(h,p,n.epochs,null,null,qC(t,n),null,i,o);d.setModel(e),e.history=c,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let o={};await d.onEpochBegin(f);let h=0,p=0;for(r||(m=await t.iterator());!r||h<n.batchesPerEpoch;){let t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${h} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){let{xs:r,ys:a}=UC(e,t.value),s={};s.batch=p,s.size=r[0].shape[0],await d.onBatchBegin(p,s);let i=[];if(null!=n.classWeight){let t=PC(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await BC(a[e],null,t[e]))}let o=r.concat(a).concat(i),c=l(o);Wo(o);for(let e=0;e<u.length;++e){let t=u[e],n=c[e];s[t]=n,Vo(n)}await d.onBatchEnd(p,s),_T(s),p++,h++}if(r?h>=n.batchesPerEpoch:t.done){if(i){let t;t=KC(n.validationData)?$I(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):$I(e.evaluate(a,s,{batchSize:null==n.validationBatchSize?VC:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)o[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,o),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function qC(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function KC(e){return"function"==typeof e.iterator}function XC(e){return"function"==typeof e.next}async function YC(e,t,n){n=n||{};let r=null!=n.batches,a=e.testFunction,s=[];if(n.verbose>0)throw new II("Verbose mode is not implemented yet.");Ra.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));let i=XC(t)?t:await t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let t=await i.next();if(s=Bo((()=>{if(t.value){let{xs:n,ys:r}=UC(e,t.value),i=n.concat(r),u=Bo((()=>a(i)));if(Wo(i),0===l)for(let e=0;e<u.length;++e)s.push(ap(0));let h=i[0].shape[0];for(let e=0;e<u.length;++e){let t=u[e],n=s[e];s[e]=Bo((()=>el(s[e],il(h,t)))),l>0&&Wo(n)}Wo(u),o+=h,++l}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let e=s[u];s[u]=al(s[u],o),Wo(e)}return EI(s)}function ZC(e){Ra.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function JC(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>_S(e,t,n-t))):_S(e,t,n-t)}function QC(e,t){return Bo((()=>null==e?null:Array.isArray(e)?e.map((e=>QC(e,t))):OS(e,"int32"===t.dtype?t:Co(t,"int32"))))}function e_(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function t_(e){let t=[];e instanceof Ts&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(1===r.rank)t.push(SS(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function n_(e,t){if(null==e)return;let n=[];if(t instanceof Ts)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(let a in t){let e=t[a];n.push(e.id)}let r=[];if(e instanceof Ts)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(let a in e){let t=e[a];-1===n.indexOf(t.id)&&r.push(t)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function r_(e){return e instanceof Ts}function a_(e){return Array.isArray(e)}function s_(e){return!r_(e)&&!a_(e)}function i_(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(a_(e)&&e.length>0)t=!0;else if(s_(e)){for(let n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new kI(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(s_(e)){s=[];for(let n of t){if(null==e[n])throw new kI(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(a_(e)){if(e.length!==t.length)throw new kI(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(t.length>1)throw new kI(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=t_(s),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;let e=s[i];if(e.shape.length!==n[i].length)throw new kI(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[i].length;++t){if(0===t&&!r)continue;let s=e.shape[t],o=n[i][t];if(null!=o&&o>=0&&s!==o)throw new kI(`${a} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${a} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return s}function o_(e,t,n){let r=PI(e.map((e=>e.shape[0])));r.sort();let a=PI(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new kI(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new kI(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!Ra.arraysEqual(r,a))throw new kI(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}function l_(e,t,n){let r=[BT,ZT,KT];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(null!=i){if(i===KT&&1===s.shape[s.shape.length-1])throw new kI(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){let e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){let r=e[n],a=t[n];if(null!=a&&r!==a)throw new kI(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function u_(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new kI(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new kI(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;let e=s[i];if(e.shape.length!==n[i].length)throw new kI(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let s=0;s<n[i].length;++s){if(0===s&&!r)continue;let o=e.shape[s],l=n[i][s];if(null!=l&&l!==o)throw new kI(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}function h_(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{let e=[];for(let r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}var p_="layers-model",d_=class extends LC{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new kI("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");CC(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=SC(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof _b))throw new kI("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new kI(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map((e=>nC(e)))}else{let n=nC(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(let t in e.loss)if(-1===this.outputNames.indexOf(t))throw new kI(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(let n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(nC(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){let e=this.internalOutputShapes[s],t=this.outputNames[s];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[s])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],uS("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));let r=h_(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};uS("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=r[e];(t=>{let n,r,s,i="";for(let o of t){if("string"==typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){let t,a=this.internalOutputShapes[e];1===a[a.length-1]||this.lossFunctions[e]===ZT?-1!==["accuracy","acc"].indexOf(o)?r=rC:-1!==["crossentropy","ce"].indexOf(o)&&(r=hC):this.lossFunctions[e]===XT?-1!==["accuracy","acc"].indexOf(o)?r=pC:-1!==["crossentropy","ce"].indexOf(o)&&(r=wC):-1!==["accuracy","acc"].indexOf(o)?r=aC:-1!==["crossentropy","ce"].indexOf(o)&&(r=bC),-1!==["accuracy","acc"].indexOf(o)?t="acc":-1!==["crossentropy","ce"].indexOf(o)&&(t="ce"),s=r,n=i+t}else s=kC(o),n=i+IC(o);let t;uS(n,(()=>{t=s})),a(e,n,t)}})(t)}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let r=null==n.batchSize?32:n.batchSize;ZC(r);let a=!0,s=this.standardizeUserDataXY(e,t,a,r);try{let e=s[0].concat(s[1]);this.makeTestFunction();let t=this.testFunction,a=this.testLoop(t,e,r,n.verbose,n.steps);return EI(a)}finally{n_(s[0],e),n_(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),YC(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new kI(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new kI(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new kI("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new zN;if(e instanceof Ts&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new kI(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(let o of this.inputs){let t=e[o.name];if(null==t)throw new kI(`No value is provided for the model's input ${o.name}`);s.add(o,t)}let i=VN(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=TI(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){let i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){let n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new kI(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Bo((()=>{let r=this.checkNumSamples(e);if(n)throw new II("Verbose predictLoop() is not implemented yet.");let a=e_(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)Bo((()=>{let n=a[t][0],r=a[t][1],s=JC(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});let o=new zN(i);return VN(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return EI(s.map((e=>su(e,0))))}))}predict(e,t={}){let n=t_(e);u_(n,this.inputNames,this.feedInputShapes,!1);try{let e=null==t.batchSize?32:t.batchSize;return ZC(e),this.predictLoop(n,e)}finally{n_(n,e)}}predictOnBatch(e){u_(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new vI("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let s=0;s<this.feedOutputShapes.length;++s){let e=this.feedOutputShapes[s];this.feedLossFns[s]===XT?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(e=i_(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=i_(t,this.feedOutputNames,a,!1,"target"),o_(e,t,null),l_(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!==0)throw new kI(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){let e=PC(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await BC(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,a){return Bo((()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new II("Verbose mode is not implemented yet.");if(null!=a)throw new II("steps mode in testLoop() is not implemented yet");{let r=e_(s,n),a=Tm(wS(0,s));for(let n=0;n<r.length;++n){let s=r[n][0],o=r[n][1],l=_S(a,s,o-s),u=QC(t,l),h=e(u);if(0===n)for(let e=0;e<h.length;++e)i.push(ap(0));for(let e=0;e<h.length;++e){let t=h[e];i[e]=el(i[e],il(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=al(i[e],s)}return i}))}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;if(_I(e,r)>1){let t=_I(e.slice(0,n),r);a+=`_${t}`}t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=()=>{let e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});let i,o=new zN(e),l=VN(this.outputs,o,{training:!0});for(let n=0;n<this.lossFunctions.length;++n){let e=this.lossFunctions[n],s=e(r[n],l[n]);null!=a[n]&&(s=WC(s,a[n]));let o=Wd(s);t.push(o),i=0===n?s:el(i,s)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{let t=this.metricsTensors[n][0],a=this.metricsTensors[n][1];e=Wd(t(r[a],l[a]))}Vo(e),s.push(e)}return i=Wd(i),this.calculateLosses().forEach((e=>{i=el(i,e)})),i},o=this.collectedTrainableWeights.map((e=>e.read())),l=!0;return[this.optimizer_.minimize(i,l,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>Bo((()=>{let t,n=[],r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});let i=new zN(s),o=VN(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){let r=this.lossFunctions[e],s=Wd(r(a[e],o[e]));t=0===e?s:el(t,s),n.push(t)}for(let e=0;e<this.metricsTensors.length;++e){let t=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=Wd(t(a[r],o[r]));n.push(s)}return n}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,a,s,i,o,l,u,h,p;this.isTraining=!0;try{let d=null==n.batchSize?32:n.batchSize;ZC(d);let c=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,c,d);r=f[0],a=f[1],p=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new II("validationData including sample weights is not supported yet."):new kI(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];let e=!0,t=await this.standardizeUserData(o,l,null,null,e,d);u=t[0],h=t[1],m=u.concat(h)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;let e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];u=JC(r,e,t),s=r,r=JC(r,0,e),h=JC(a,e,t),i=a,a=JC(a,0,e),m=u.concat(h)}else null!=n.validationSteps&&(g=!0);let y=r.concat(a).concat(p);this.checkTrainableWeightsConsistency();let b,x,w=this.makeTrainFunction(),v=this.getDedupedMetricsNames();g?(this.makeTestFunction(),b=this.testFunction,x=v.slice().concat(v.map((e=>"val_"+e)))):(b=null,m=[],x=v.slice());let k=MT(n.callbacks,n.yieldEvery);return await this.fitLoop(w,y,v,d,n.epochs,n.verbose,k,b,m,n.shuffle,x,n.initialEpoch,null,null)}finally{this.isTraining=!1,n_(r,e),n_(a,t),n_(s,e),n_(i,t),n_(u,o),n_(h,l),null!=p&&Wo(p)}}async fitLoop(e,t,n,r,a,s,i,o,l,u,h,p,d,c){null==r&&(r=32),null==a&&(a=1),null==u&&(u=!0),null==p&&(p=0);let f=!1;if(null!=o&&null!=l&&(f=!0),null!=c&&(f=!0,null==d))throw new kI("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let m,g=this.checkNumSamples(t,r,d,"steps_per_epoch");null!=g&&(m=wS(0,g)),null==s&&(s=1);let{callbackList:y,history:b}=LT(i,s,a,p,g,d,r,f,h);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let x=p;x<a;++x){await y.onEpochBegin(x);let a={};if(null!=d)throw new II("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new II("batch shuffling is not implemneted yet");u&&Ra.shuffle(m);let s=Tm(m),i=e_(g,r);for(let u=0;u<i.length;++u){let h={};if(await y.onBatchBegin(u,h),Bo((()=>{let p=i[u][0],d=i[u][1],c=_S(s,p,d-p);h.batch=u,h.size=d-p;let m=QC(t,c),g=e(m);for(let e=0;e<n.length;++e){let t=n[e],r=g[e];h[t]=r,Vo(r)}if(u===i.length-1&&f){let e=this.testLoop(o,l,r);for(let t=0;t<n.length;++t){let r=n[t],s=e[t];Vo(s),a["val_"+r]=s}}})),await y.onBatchEnd(u,h),_T(h),this.stopTraining_)break}s.dispose()}if(await y.onEpochEnd(x,a),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return jC(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let o of s){let e=await o.data();i.push(e[0])}return Wo(s),n_(n[0],e),n_(n[1],t),EI(i)}getNamedWeights(e){let t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||t.push({name:r[s].originalName,tensor:a[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=zo().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-zo().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=AI(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>AI(e)))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=AI(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[AI(IC(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>AI(IC(e))));{let e={};for(let t in this.metrics)e[t]=AI(IC(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");let t,n,r=DC(e.optimizer_config),a=zT(r);if("string"==typeof e.loss)t=RI(e.loss);else if(Array.isArray(e.loss))t=e.loss.map((e=>RI(e)));else if(null!=e.loss){t={};for(let n in e.loss)t[n]=RI(e.loss[n])}if(Array.isArray(e.metrics))n=e.metrics.map((e=>RI(e)));else if(null!=e.metrics){n={};for(let t in e.metrics)n[t]=RI(e.metrics[t])}this.compile({loss:t,metrics:n,optimizer:a})}async save(e,t){if("string"==typeof e){let t=zb.getSaveHandlers(e);if(0===t.length)throw new kI(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new kI(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new kI("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await zb.encodeWeights(this.getNamedWeights(t)),r=!1,a=null,s={modelTopology:this.toJSON(a,r),format:p_,generatedBy:`TensorFlow.js tfjs-layers v${OC}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();let e="optimizer",{data:t,specs:r}=await zb.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=zb.concatenateArrayBuffers([n.data,t])}return null!=this.userDefinedMetadata&&(NC(this.userDefinedMetadata,this.name,!0),s.userDefinedMetadata=this.userDefinedMetadata),s.weightData=n.data,s.weightSpecs=n.specs,e.save(s)}setUserDefinedMetadata(e){NC(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};d_.className="Model",Sb.registerClass(d_);var c_=class extends d_{};async function f_(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);let r=DC(n),a=zT(r,t);if(null!=e.weightsManifest){let t=await zb.loadWeights(e.weightsManifest,e.pathPrefix,a.weights.map((e=>e.originalName))),n={};for(let e of a.weights)n[e.originalName]=t[e.originalName];a.loadWeights(n),Wo(t)}return a}async function m_(e,t){if(null==t&&(t={}),"string"==typeof e){let n=zb.getLoadHandlers(e,t);if(0===n.length)n.push(zb.browserHTTPRequest(e,t));else if(n.length>1)throw new kI(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return g_(e,void 0,t)}async function g_(e,t,n){if(null==n&&(n={}),null==e.load)throw new kI("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;null!=a.model_config&&(a=a.model_config);let s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=zT(DC(a),t,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new kI("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:e,optimizerWeights:t}=y_(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),Wo(e),Wo(t.map((e=>e.tensor)))}return o}function y_(e,t){let n=zb.decodeWeights(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}c_.className="Functional",Sb.registerClass(c_);var b_=class extends d_{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:YI("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new kI(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t,n=e instanceof b_||e instanceof d_;if(n){if(t=e,1!==t.outputs.length)throw new kI("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==t.inputs.length)throw new kI("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new kI("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let t=ON({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(n)this.outputs=t.outputs,this.inputs=t.inputs;else{if(1!==e.inboundNodes.length)throw new kI(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new kI("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=DN(this.outputs[0])}this.inboundNodes=[],new EN({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:TI(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{let t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(xN(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new d_({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new vI("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new vI("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new vI("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new vI("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new kI("Legacy serialization format not supported yet.");a=t}else Ra.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof b_))throw new II(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let o of a){let e=zT(o,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(e){if(null==this.model)throw new kI("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new kI("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};function x_(e){return new d_(e)}function w_(e){return new b_(e)}function v_(e){return ON(e)}function k_(e,t){OT.registerCallbackConstructor(e,t)}b_.className="Sequential",Sb.registerClass(b_);var I_=class extends Sb.Serializable{getConfig(){return{}}},S_=class extends I_{apply(e,t=1){return BS(e,t)}};S_.className="elu",Sb.registerClass(S_);var N_=class extends I_{apply(e){return Lf(e)}};N_.className="selu",Sb.registerClass(N_);var T_=class extends I_{apply(e){return xf(e)}};T_.className="relu",Sb.registerClass(T_);var C_=class extends I_{apply(e){return Bo((()=>jd(6,xf(e))))}};C_.className="relu6",Sb.registerClass(C_);var __=class extends I_{apply(e){return e}};__.className="linear",Sb.registerClass(__);var E_=class extends I_{apply(e){return uu(e)}};E_.className="sigmoid",Sb.registerClass(E_);var $_=class extends I_{apply(e){return US(e)}};$_.className="hardSigmoid",Sb.registerClass($_);var A_=class extends I_{apply(e){return pd(e)}};A_.className="softplus",Sb.registerClass(A_);var R_=class extends I_{apply(e){return WS(e)}};R_.className="softsign",Sb.registerClass(R_);var F_=class extends I_{apply(e){return cu(e)}};F_.className="tanh",Sb.registerClass(F_);var D_=class extends I_{apply(e,t=-1){return rm(e,t)}};D_.className="softmax",Sb.registerClass(D_);var M_=class extends I_{apply(e,t=-1){return yd(e,t)}};M_.className="logSoftmax",Sb.registerClass(M_);var O_=class extends I_{apply(e,t=1){return Bo((()=>il(uu(il(e,t)),e)))}};O_.className="swish",Sb.registerClass(O_);var L_=class extends I_{apply(e){return Bo((()=>il(e,cu(pd(e)))))}};function z_(e){return e.getClassName()}function P_(e,t={}){return OI(e,Sb.SerializationMap.getMap().classNameMap,t,"activation")}function B_(e){if(null==e){let e={className:"linear",config:{}};return P_(e)}if("string"==typeof e){let t={};return t.className=e,t.config={},P_(t)}return e instanceof I_?e:P_(e)}function W_(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}L_.className="mish",Sb.registerClass(L_);var V_=class extends Sb.Serializable{},U_=class extends V_{constructor(e){super(),W_(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Bo((()=>{let t=Vd([1]);return this.hasL1&&(t=el(t,hp(il(this.l1,ll(e))))),this.hasL2&&(t=el(t,hp(il(this.l2,LS(e))))),Ql(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};function G_(e){return W_(e),new U_({l1:null!=e?e.l1:null,l2:0})}function H_(e){return W_(e),new U_({l2:null!=e?e.l2:null,l1:0})}U_.className="L1L2",Sb.registerClass(U_);var j_={l1l2:"L1L2"};function q_(e){return DI(e)}function K_(e,t={}){return OI(e,Sb.SerializationMap.getMap().classNameMap,t,"regularizer")}function X_(e){if(null==e)return null;if("string"==typeof e){let t={className:e in j_?j_[e]:e,config:{}};return K_(t)}return e instanceof V_?e:K_(e)}var Y_=class extends AN{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=bN(e);let n=xf(e);return null!=this.maxValue&&(n=Lu(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Y_.className="ReLU",Sb.registerClass(Y_);var Z_=class extends AN{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=bN(e);return Up(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Z_.className="LeakyReLU",Sb.registerClass(Z_);var J_=class extends AN{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=mN(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=X_(e.alphaRegularizer),this.alphaConstraint=aT(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new kI(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){e=xN(e);let t=e.slice(1);if(null!=this.sharedAxes)for(let r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new TN({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=bN(e),_c(e,this.alpha.read())}getConfig(){let e={alphaInitializer:fN(this.alphaInitializer),alphaRegularizer:q_(this.alphaRegularizer),alphaConstraint:nT(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};J_.className="PReLU",Sb.registerClass(J_);var Q_=class extends AN{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new II(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=bN(e);return Wh(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Q_.className="ELU",Sb.registerClass(Q_);var eE=class extends AN{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let n=bN(e);return il(n,Co(Ap(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};eE.className="ThresholdedReLU",Sb.registerClass(eE);var tE=class extends AN{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new D_).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){let n=bN(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function nE(e,t,n){if("number"==typeof e)return TI(e,t);if(e.length!==t)throw new kI(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!gS(a))throw new kI(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function rE(e,t,n,r,a=1){if(null==e)return e;let s,i=t+(t-1)*(a-1);return s="same"===n?e:e-i+1,Math.floor((s+r-1)/r)}function aE(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+xS([n-t,0]);else{if("same"!==r)throw new kI(`Unsupport padding mode: ${r}.`);e*=t}return e}function sE(e,t){return Bo((()=>(rS(t),"channelsFirst"===t?Ym(e,[0,2,3,1]):e)))}function iE(e,t){return Bo((()=>(rS(t),"channelsFirst"===t?Ym(e,[0,2,3,4,1]):e)))}function oE(e,t,n,r=1,a="valid",s,i=1){return Bo((()=>{if(null==s&&(s=kS()),rS(s),3!==e.shape.length)throw new kI(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new kI(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new kI(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=Ym(e,[0,2,1])),"causal"===a)throw new II("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Xu(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=PS(o,n)),o}))}function lE(e,t,n,r=[1,1],a="valid",s,i,o=null){return Bo((()=>{if(null==s&&(s=kS()),rS(s),3!==e.rank&&4!==e.rank)throw new kI(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new kI(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=sE(e,s);if("causal"===a)throw new II("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=yg.conv2d({x:l,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=Ym(l,[0,3,1,2])),l}))}function uE(e,t,n,r=[1,1,1],a="valid",s,i){return Bo((()=>{if(null==s&&(s=kS()),rS(s),4!==e.rank&&5!==e.rank)throw new kI(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new kI(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=iE(e,s);if("causal"===a)throw new II("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=th(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=PS(o,n)),"channelsFirst"===s&&(o=Ym(o,[0,4,1,2,3])),o}))}tE.className="Softmax",Sb.registerClass(tE);var hE=class extends AN{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",hE.verifyArgs(t),this.rank=e,UI(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new II(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=nE(t.kernelSize,e,"kernelSize"),this.strides=nE(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,sS(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,rS(this.dataFormat),this.activation=B_(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=mN(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=aT(t.biasConstraint),this.biasRegularizer=X_(t.biasRegularizer),this.activityRegularizer=X_(t.activityRegularizer),this.dilationRate=nE(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new kI(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new kI(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new kI(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(CI("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!VI(e.kernelSize,"number",1,3))throw new kI(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:z_(this.activation),useBias:this.useBias,biasInitializer:fN(this.biasInitializer),biasRegularizer:q_(this.biasRegularizer),activityRegularizer:q_(this.activityRegularizer),biasConstraint:nT(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},pE=class extends hE{constructor(e,t){super(e,t),this.kernel=null,pE.verifyArgs(t),this.filters=t.filters,UI(this.filters,"filters"),this.kernelInitializer=mN(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=aT(t.kernelConstraint),this.kernelRegularizer=X_(t.kernelRegularizer)}build(e){e=xN(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new kI(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Bo((()=>{e=bN(e);let t,n=null==this.bias?null:this.bias.read(),r=jI(this.activation.getClassName());if(null!=r&&2===this.rank)t=lE(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=oE(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=lE(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new II("convolutions greater than 3D are not implemented yet.");t=uE(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=xN(e);let t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<n.length;++a){let e=rE(n[a],this.kernelSize[a],this.padding,this.strides[a],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:fN(this.kernelInitializer),kernelRegularizer:q_(this.kernelRegularizer),kernelConstraint:nT(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new kI(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},dE=class extends pE{constructor(e){super(2,e),dE.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!VI(e.kernelSize,"number",1,2))throw new kI(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};dE.className="Conv2D",Sb.registerClass(dE);var cE=class extends pE{constructor(e){super(3,e),cE.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new kI(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};cE.className="Conv3D",Sb.registerClass(cE);var fE=class extends dE{constructor(e){if(super(e),this.inputSpec=[new TN({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new kI(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=xN(e),4!==e.length)throw new kI("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new kI("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new TN({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Bo((()=>{let t=bN(e);if(4!==t.shape.length)throw new kI(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a=t.shape,s=a[0];"channelsFirst"===this.dataFormat?(n=2,r=3):(n=1,r=2);let i=a[n],o=a[r],l=this.kernelSize[0],u=this.kernelSize[1],h=this.strides[0],p=this.strides[1],d=aE(i,h,l,this.padding),c=aE(o,p,u,this.padding),f=[s,d,c,this.filters];"channelsLast"!==this.dataFormat&&(t=Ym(t,[0,2,3,1]));let m=Qu(t,this.kernel.read(),f,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(m=Ym(m,[0,3,1,2])),null!=this.bias&&(m=PS(m,this.bias.read(),this.dataFormat)),null!=this.activation&&(m=this.activation.apply(m)),m}))}computeOutputShape(e){e=xN(e);let t,n,r,a=e.slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3):(t=3,n=1,r=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return a[t]=this.filters,a[n]=aE(a[n],o,s,this.padding),a[r]=aE(a[r],l,i,this.padding),a}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};fE.className="Conv2DTranspose",Sb.registerClass(fE);var mE=class extends cE{constructor(e){if(super(e),this.inputSpec=[new TN({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new kI(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=xN(e),5!==e.length)throw new kI("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new kI("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new TN({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Bo((()=>{let t=bN(e);if(5!==t.shape.length)throw new kI(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a,s=t.shape,i=s[0];"channelsFirst"===this.dataFormat?(a=2,n=3,r=4):(a=1,n=2,r=3);let o=s[a],l=s[n],u=s[r],h=this.kernelSize[0],p=this.kernelSize[1],d=this.kernelSize[2],c=this.strides[0],f=this.strides[1],m=this.strides[2],g=aE(o,c,h,this.padding),y=aE(l,f,p,this.padding),b=aE(u,m,d,this.padding),x=[i,g,y,b,this.filters];"channelsLast"!==this.dataFormat&&(t=Ym(t,[0,2,3,4,1]));let w=sh(t,this.kernel.read(),x,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(w=Ym(w,[0,4,1,2,3])),null!==this.bias&&(w=PS(w,this.bias.read(),this.dataFormat)),null!==this.activation&&(w=this.activation.apply(w)),w}))}computeOutputShape(e){e=xN(e);let t,n,r,a,s=e.slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3,a=4):(t=4,n=1,r=2,a=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],h=this.strides[1],p=this.strides[2];return s[t]=this.filters,s[n]=aE(s[n],u,i,this.padding),s[r]=aE(s[r],h,o,this.padding),s[a]=aE(s[a],p,l,this.padding),s}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};mE.className="Conv3DTranspose",Sb.registerClass(mE);var gE=class extends pE{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new kI("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new kI("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new kI(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=mN(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=X_(t.depthwiseRegularizer),this.depthwiseConstraint=aT(t.depthwiseConstraint),this.pointwiseInitializer=mN(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=X_(t.pointwiseRegularizer),this.pointwiseConstraint=aT(t.pointwiseConstraint)}build(e){if(e=xN(e),e.length<this.rank+2)throw new kI(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new kI(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let i=0;i<this.rank;++i)a.push(1);a.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new TN({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Bo((()=>{let t;if(e=bN(e),1===this.rank)throw new II("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Ym(e,[0,2,3,1])),t=Pf(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=PS(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Ym(t,[0,3,1,2])),t}))}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=fN(this.depthwiseInitializer),e.pointwiseInitializer=fN(this.pointwiseInitializer),e.depthwiseRegularizer=q_(this.depthwiseRegularizer),e.pointwiseRegularizer=q_(this.pointwiseRegularizer),e.depthwiseConstraint=nT(this.depthwiseConstraint),e.pointwiseConstraint=nT(this.pointwiseConstraint),e}};gE.className="SeparableConv";var yE=class extends gE{constructor(e){super(2,e)}};yE.className="SeparableConv2D",Sb.registerClass(yE);var bE=class extends pE{constructor(e){super(1,e),bE.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!VI(e.kernelSize,"number",1,1))throw new kI(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};bE.className="Conv1D",Sb.registerClass(bE);var xE=class extends AN{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Bo((()=>{if(e=bN(e),"channelsLast"===this.dataFormat){let t=$S(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return $S(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let t=$S(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return $S(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};xE.className="Cropping2D",Sb.registerClass(xE);var wE=class extends AN{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,rS(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,aS(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){let t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{let t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Bo((()=>{let t=bN(e),n=t.shape;if("channelsFirst"===this.dataFormat){t=Ym(t,[0,2,3,1]);let e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?xb.resizeNearestNeighbor(t,[e,r]):xb.resizeBilinear(t,[e,r]);return Ym(a,[0,3,1,2])}{let e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?xb.resizeNearestNeighbor(t,[e,r]):xb.resizeBilinear(t,[e,r])}}))}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};function vE(e,t,n=[1,1],r="valid",a,s){return Bo((()=>{null==a&&(a=kS()),rS(a);let i=sE(e,a);if(4!==e.rank)throw new kI(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new kI(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=xh(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Ym(i,[0,3,1,2])),i}))}wE.className="UpSampling2D",Sb.registerClass(wE);var kE=class extends hE{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=mN(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=aT(e.depthwiseConstraint),this.depthwiseRegularizer=X_(e.depthwiseRegularizer)}build(e){if(e=xN(e),e.length<4)throw new kI(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new kI(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Bo((()=>{e=bN(e);let t=vE(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=PS(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=xN(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=rE(t,this.kernelSize[0],this.padding,this.strides[0]),s=rE(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=fN(this.depthwiseInitializer),e.depthwiseRegularizer=q_(this.depthwiseRegularizer),e.depthwiseConstraint=nT(this.depthwiseRegularizer),e}};function IE(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new kI("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return t=a(t),n=a(n),{inputs:e,initialState:t,constants:n}}function SE(e,t,n,r=!1,a,s,i=!1,o=!1){return Bo((()=>{let l=t.shape.length;if(l<3)throw new kI(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(wS(2,l));if(t=Ym(t,u),null!=s)throw new II("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&(a=Co(Co(a,"bool"),"float32"),a.rank===l-1&&(a=xp(a,-1)),a=Ym(a,u)),r&&(t=If(t,0),null!=a&&(a=If(a,0)));let h,p,d,c=[],f=n,m=t.shape[0],g=Wm(t);null!=a&&(p=Wm(a));for(let t=0;t<m;++t){let n=g[t],r=Bo((()=>e(n,f)));if(null==a)h=r[0],f=r[1];else{let e=Bo((()=>{let e=p[t],n=md(lc(e),e),a=el(il(r[0],e),il(f[0],n)),s=f.map(((t,a)=>el(il(r[1][a],e),il(t,n))));return{output:a,newStates:s}}));h=e.output,f=e.newStates}o&&c.push(h)}return o&&(d=xm(c,1)),[h,d,f]}))}kE.className="DepthwiseConv2D",Sb.registerClass(kE);var NE=class extends AN{constructor(e){let t;if(super(e),null==e.cell)throw new kI("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new FE({cells:e.cell}):e.cell,null==t.stateSize)throw new kI("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new TN({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return wS(0,e).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){gN(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n,r=t[0];if(n=this.returnSequences?[e[0],e[1],r]:[e[0],r],this.returnState){let r=[];for(let n of t)r.push([e[0],n]);return[n].concat(r)}return n}computeMask(e,t){return Bo((()=>{Array.isArray(t)&&(t=t[0]);let e=this.returnSequences?t:null;if(this.returnState){let t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new II("Constants support is not implemented in RNN yet.");gN(e)&&(e=e[0]);let t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new TN({shape:[t,null,...n]});let r,a=[e[0]].concat(e.slice(2));if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!Ra.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new kI(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new TN({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Bo((()=>{if(!this.stateful)throw new wI("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(null==n)throw new kI("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Vd([n,e]))):this.states_=[Vd([n,this.cell.stateSize])];else if(null==e)Wo(this.states_),null!=this.keptStates&&(Wo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Vd([n,e]))):this.states_[0]=Vd([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new kI(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Wo(this.states_);for(let t=0;t<this.states_.length;++t){let r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!Ra.arraysEqual(r.shape,s))throw new kI(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>Vo(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=IE(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let e of n)this.stateSpec.push(new TN({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof CN){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Bo((()=>{let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;e=bN(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new kI(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:r},o=SE(((e,t)=>{let n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],h=o[2];this.stateful&&this.resetStates(h,r);let p=this.returnSequences?u:l;return this.returnState?[p].concat(h):p}))}getInitialState(e){return Bo((()=>{let t=Vd(e.shape);return t=hp(t,[1,2]),t=SS(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?FS(t,[1,e]):t)):this.cell.stateSize>1?[FS(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===NE.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){let r=t.cell,a=zT(r,n);return new e(Object.assign(t,{cell:a}))}};NE.className="RNN",Sb.registerClass(NE);var TE=class extends AN{},CE=class extends TE{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,UI(this.units,"units"),this.activation=B_(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=mN(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=mN(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=mN(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=X_(e.kernelRegularizer),this.recurrentRegularizer=X_(e.recurrentRegularizer),this.biasRegularizer=X_(e.biasRegularizer),this.kernelConstraint=aT(e.kernelConstraint),this.recurrentConstraint=aT(e.recurrentConstraint),this.biasConstraint=aT(e.biasConstraint),this.dropout=bS([1,xS([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=bS([1,xS([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=xN(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Bo((()=>{if(2!==e.length)throw new kI(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=DE({ones:()=>lc(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=DE({ones:()=>lc(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;a=MS(null!=s?il(e,s):e,this.kernel.read()),null!=this.bias&&(a=PS(a,this.bias.read())),null!=i&&(n=il(n,i));let o=el(a,MS(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:z_(this.activation),useBias:this.useBias,kernelInitializer:fN(this.kernelInitializer),recurrentInitializer:fN(this.recurrentInitializer),biasInitializer:fN(this.biasInitializer),kernelRegularizer:q_(this.kernelRegularizer),recurrentRegularizer:q_(this.recurrentRegularizer),biasRegularizer:q_(this.biasRegularizer),activityRegularizer:q_(this.activityRegularizer),kernelConstraint:nT(this.kernelConstraint),recurrentConstraint:nT(this.recurrentConstraint),biasConstraint:nT(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}};CE.className="SimpleRNNCell",Sb.registerClass(CE);var _E=class extends NE{constructor(e){e.cell=new CE(e),super(e)}call(e,t){return Bo((()=>{null!=this.cell.dropoutMask&&(Wo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Wo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}};_E.className="SimpleRNN",Sb.registerClass(_E);var EE=class extends TE{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new kI("GRUCell does not support reset_after parameter set to true.");this.units=e.units,UI(this.units,"units"),this.activation=B_(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=B_(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=mN(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=mN(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=mN(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=X_(e.kernelRegularizer),this.recurrentRegularizer=X_(e.recurrentRegularizer),this.biasRegularizer=X_(e.biasRegularizer),this.kernelConstraint=aT(e.kernelConstraint),this.recurrentConstraint=aT(e.recurrentConstraint),this.biasConstraint=aT(e.biasConstraint),this.dropout=bS([1,xS([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=bS([1,xS([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=xN(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Bo((()=>{if(2!==e.length)throw new kI(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=null!=t.training&&t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=DE({ones:()=>lc(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=DE({ones:()=>lc(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let a,s,i,o=this.dropoutMask,l=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=il(e,o[0]));let u=MS(e,this.kernel.read());this.useBias&&(u=PS(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=il(r,l[0]));let h=this.recurrentKernel.read(),[p,d]=pm(h,[2*this.units,this.units],h.rank-1),c=MS(r,p),[f,m,g]=pm(u,3,u.rank-1),[y,b]=pm(c,2,c.rank-1);a=this.recurrentActivation.apply(el(f,y)),s=this.recurrentActivation.apply(el(m,b));let x=MS(il(s,r),d);i=this.activation.apply(el(g,x));let w=el(il(a,r),il(el(1,ud(a)),i));return[w,w]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:z_(this.activation),recurrentActivation:z_(this.recurrentActivation),useBias:this.useBias,kernelInitializer:fN(this.kernelInitializer),recurrentInitializer:fN(this.recurrentInitializer),biasInitializer:fN(this.biasInitializer),kernelRegularizer:q_(this.kernelRegularizer),recurrentRegularizer:q_(this.recurrentRegularizer),biasRegularizer:q_(this.biasRegularizer),activityRegularizer:q_(this.activityRegularizer),kernelConstraint:nT(this.kernelConstraint),recurrentConstraint:nT(this.recurrentConstraint),biasConstraint:nT(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}};EE.className="GRUCell",Sb.registerClass(EE);var $E=class extends NE{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new EE(e),super(e)}call(e,t){return Bo((()=>{null!=this.cell.dropoutMask&&(Wo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Wo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};$E.className="GRU",Sb.registerClass($E);var AE=class extends TE{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,UI(this.units,"units"),this.activation=B_(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=B_(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=mN(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=mN(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=mN(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=X_(e.kernelRegularizer),this.recurrentRegularizer=X_(e.recurrentRegularizer),this.biasRegularizer=X_(e.biasRegularizer),this.kernelConstraint=aT(e.kernelConstraint),this.recurrentConstraint=aT(e.recurrentConstraint),this.biasConstraint=aT(e.biasConstraint),this.dropout=bS([1,xS([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=bS([1,xS([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=xN(e);let n,r=e[e.length-1];if(this.kernel=this.addWeight("kernel",[r,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let e=this.biasInitializer,r=this.units;n=new(t=class extends XS{apply(t,n){let a=e.apply([r]),s=(new ZS).apply([r]),i=e.apply([2*r]);return RS(RS(a,s),i)}},t.className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Bo((()=>{let n=null!=t.training&&t.training;if(3!==e.length)throw new kI(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=DE({ones:()=>lc(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=DE({ones:()=>lc(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let s,i,o,l,u=this.dropoutMask,h=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=il(e,u[0]));let p=MS(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=il(r,h[0])),p=el(p,MS(r,this.recurrentKernel.read())),this.useBias&&(p=PS(p,this.bias.read()));let[d,c,f,m]=pm(p,4,p.rank-1);s=this.recurrentActivation.apply(d),i=this.recurrentActivation.apply(c),o=el(il(i,a),il(s,this.activation.apply(f))),l=this.recurrentActivation.apply(m);let g=il(l,this.activation.apply(o));return[g,g,o]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:z_(this.activation),recurrentActivation:z_(this.recurrentActivation),useBias:this.useBias,kernelInitializer:fN(this.kernelInitializer),recurrentInitializer:fN(this.recurrentInitializer),biasInitializer:fN(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:q_(this.kernelRegularizer),recurrentRegularizer:q_(this.recurrentRegularizer),biasRegularizer:q_(this.biasRegularizer),activityRegularizer:q_(this.activityRegularizer),kernelConstraint:nT(this.kernelConstraint),recurrentConstraint:nT(this.recurrentConstraint),biasConstraint:nT(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}};AE.className="LSTMCell",Sb.registerClass(AE);var RE=class extends NE{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new AE(e),super(e)}call(e,t){return Bo((()=>{null!=this.cell.dropoutMask&&(Wo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Wo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};RE.className="LSTM",Sb.registerClass(RE);var FE=class extends TE{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Bo((()=>{let n=e.slice(1),r=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();let a,s=[];for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(let e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;gN(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{uS(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){let e=super.getConfig(),t=e=>({className:e.getClassName(),config:e.getConfig()}),n={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),n)}static fromConfig(e,t,n={}){let r=[];for(let a of t.cells)r.push(zT(a,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return SN(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}NN(t)}};function DE(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):VS(t(),n),o=()=>GS(i,t,r);return!a||a<=1?Vo(o().clone()):Array(a).fill(void 0).map(o).map((e=>Vo(e.clone())))}FE.className="StackedRNNCells",Sb.registerClass(FE);var ME=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n},OE=class extends NE{constructor(e){if(e.unroll)throw new II("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new II("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new TN({ndim:5})]}call(e,t){return Bo((()=>{if(null!=this.cell.dropoutMask&&(Wo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Wo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new kI("ConvRNN2D cell does not support constants");let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Bo((()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],s=Vd(a);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){Bo((()=>{if(!this.stateful)throw new wI("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new kI("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Vd(a))):this.states_=[Vd(a)];else if(null==e)Wo(this.states_),null!=this.keptStates&&(Wo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Vd(a))):this.states_[0]=Vd(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new kI(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Wo(this.states_);for(let t=0;t<this.states_.length;++t){let n=e[t],r=a;if(!Ra.arraysEqual(n.shape,r))throw new kI(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Vo(e.clone())))}))}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],h=rE(l,r[0],a,s[0],i[0]),p=rE(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,h,p]:[h,p,n]]}};OE.className="ConvRNN2D";var LE=class extends AE{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,UI(this.filters,"filters"),this.kernelSize=nE(n,2,"kernelSize"),this.kernelSize.forEach((e=>UI(e,"kernelSize"))),this.strides=nE(r||1,2,"strides"),this.strides.forEach((e=>UI(e,"strides"))),this.padding=a||"valid",sS(this.padding),this.dataFormat=s||"channelsLast",rS(this.dataFormat),this.dilationRate=nE(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>UI(e,"dilationRate")))}build(e){var t;e=xN(e);let n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new kI(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],a=4,s=this.kernelSize.concat([r,this.filters*a]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*a]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let n=this.biasInitializer,r=this.filters;e=new(t=class extends XS{apply(e,t){let a=n.apply([r]),s=Ud([r]),i=n.apply([2*r]);return AS([a,s,i])}},t.className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*a],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Bo((()=>{if(3!==e.length)throw new kI(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2],i=4;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=DE({ones:()=>lc(r),rate:this.dropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let o=this.dropoutMask,l=(e,t,n)=>t&&t[n]?il(t[n],e):e,u=l(r,o,0),h=l(r,o,1),p=l(r,o,2),d=l(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=DE({ones:()=>lc(a),rate:this.recurrentDropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let c=this.recurrentDropoutMask,f=l(a,c,0),m=l(a,c,1),g=l(a,c,2),y=l(a,c,3),b=3,[x,w,v,k]=pm(this.kernel.read(),i,b),[I,S,N,T]=this.useBias?pm(this.bias.read(),i):[null,null,null,null];u=this.inputConv(u,x,I,this.padding),h=this.inputConv(h,w,S,this.padding),p=this.inputConv(p,v,N,this.padding),d=this.inputConv(d,k,T,this.padding);let[C,_,E,$]=pm(this.recurrentKernel.read(),i,b);f=this.recurrentConv(f,C),m=this.recurrentConv(m,_),g=this.recurrentConv(g,E),y=this.recurrentConv(y,$);let A=this.recurrentActivation.apply(el(u,f)),R=this.recurrentActivation.apply(el(h,m)),F=el(il(R,s),il(A,this.activation.apply(el(p,g)))),D=il(this.recurrentActivation.apply(el(d,y)),this.activation.apply(F));return[D,D,F]}))}getConfig(){let e=super.getConfig(),{units:t}=e,n=ME(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){let a=qu(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?PS(a,n,this.dataFormat):a}recurrentConv(e,t){return qu(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};LE.className="ConvLSTM2DCell",Sb.registerClass(LE);var zE=class extends OE{constructor(e){let t=new LE(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}};zE.className="ConvLSTM2D",Sb.registerClass(zE);var PE=class extends AN{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return Bo((()=>{this.invokeCallHook(e,t);let n=bN(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,r=this.getNoiseShape(n);return GS((()=>VS(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};PE.className="Dropout",Sb.registerClass(PE);var BE=class extends PE{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};BE.className="SpatialDropout1D",Sb.registerClass(BE);var WE=class extends AN{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,UI(this.units,"units"),this.activation=B_(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=mN(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=mN(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=aT(e.kernelConstraint),this.biasConstraint=aT(e.biasConstraint),this.kernelRegularizer=X_(e.kernelRegularizer),this.biasRegularizer=X_(e.biasRegularizer),this.activityRegularizer=X_(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=xN(e);let t=e[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=xN(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return Bo((()=>{this.invokeCallHook(e,t);let n,r=bN(e),a=jI(this.activation.getClassName());return null!=a?n=MS(r,this.kernel.read(),a,this.bias?this.bias.read():null):(n=MS(r,this.kernel.read()),null!=this.bias&&(n=PS(n,this.bias.read())),null!=this.activation&&(n=this.activation.apply(n))),n}))}getConfig(){let e={units:this.units,activation:z_(this.activation),useBias:this.useBias,kernelInitializer:fN(this.kernelInitializer),biasInitializer:fN(this.biasInitializer),kernelRegularizer:q_(this.kernelRegularizer),biasRegularizer:q_(this.biasRegularizer),activityRegularizer:q_(this.activityRegularizer),kernelConstraint:nT(this.kernelConstraint),biasConstraint:nT(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};WE.className="Dense",Sb.registerClass(WE);var VE=class extends AN{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=xN(e);for(let t of e.slice(1))if(null==t)throw new kI(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],yS(e,1)]}call(e,t){return Bo((()=>{this.invokeCallHook(e,t);let n=bN(e);if("channelsFirst"===this.dataFormat&&n.rank>1){let e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Ym(n,e)}return CS(n)}))}getConfig(){let e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};VE.className="Flatten",Sb.registerClass(VE);var UE=class extends AN{constructor(e){super(e),this.supportsMasking=!0,this.activation=B_(e.activation)}call(e,t){return Bo((()=>{this.invokeCallHook(e,t);let n=bN(e);return this.activation.apply(n)}))}getConfig(){let e={activation:z_(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};UE.className="Activation",Sb.registerClass(UE);var GE=class extends AN{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Bo((()=>(e=bN(e),NS(e,this.n))))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};GE.className="RepeatVector",Sb.registerClass(GE);var HE=class extends AN{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let o=0;o<r.length;++o){let e=r[o];if(this.isUnknown(e)){if(null!==s)throw new kI("Can only specifiy one unknown dimension.");s=o}else a*=e}let i=yS(e);if(null!==s){if(0===a||i%a!==0)throw new kI(n);r[s]=i/a}else if(i!==a)throw new kI(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Bo((()=>{this.invokeCallHook(e,t);let n=bN(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Ql(n,a)}))}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};HE.className="Reshape",Sb.registerClass(HE);var jE=class extends AN{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=wS(1,e.dims.length+1);if(!Ra.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new TN({ndim:this.dims.length+1})]}computeOutputShape(e){e=xN(e);let t=e.slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Ym(bN(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};jE.className="Permute",Sb.registerClass(jE);var qE=class extends AN{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=bN(e),r=-1;return bl(ac(n,this.maskValue),r)}call(e,t){return Bo((()=>{this.invokeCallHook(e,t);let n=bN(e),r=-1,a=!0,s=bl(ac(n,this.maskValue),r,a);return il(n,Co(s,n.dtype))}))}};qE.className="Masking",Sb.registerClass(qE);var KE=class extends AN{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat($I(e.inputLength))}this.inputDim=e.inputDim,UI(this.inputDim,"inputDim"),this.outputDim=e.outputDim,UI(this.outputDim,"outputDim"),this.embeddingsInitializer=mN(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=X_(e.embeddingsRegularizer),this.activityRegularizer=X_(e.activityRegularizer),this.embeddingsConstraint=aT(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Bo((()=>this.maskZero?(e=bN(e),ac(e,Fh(e))):null))}computeOutputShape(e){if(e=xN(e),null==this.inputLength)return[...e,this.outputDim];let t=$I(this.inputLength);if(t.length!==e.length-1)throw new kI(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new kI(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Bo((()=>{this.invokeCallHook(e,t);let n=bN(e);"int32"!==n.dtype&&(n=IS(n,"int32"));let r=OS(this.embeddings.read(),Ql(n,[n.size]));return Ql(r,xN(this.computeOutputShape(n.shape)))}))}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:fN(this.embeddingsInitializer),embeddingsRegularizer:q_(this.embeddingsRegularizer),activityRegularizer:q_(this.activityRegularizer),embeddingsConstraint:nT(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};KE.className="Embedding",Sb.registerClass(KE);var XE=class extends AN{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new II}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new kI("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[xN(e)]),e.length<2)throw new kI(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let a of e)null!=a&&null!==a[0]&&t.push(a[0]);if(t=PI(t),t.length>1)throw new kI(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){let t=null==e[a]?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}let r=e.map((e=>e.length));-1===e.indexOf(null)&&1===PI(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Bo((()=>{if(this.reshapeRequired){let t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){let r=xS(n);for(let n of e){let e=n.rank;for(let t=0;t<r-e;++t)n=SS(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(let s of e){let e=s.rank;if(null==e){let e=s.shape,r=e[0],a=e.slice(1).concat([r]),i=Ql(s,[r].concat(yS(e.slice(1))));i=Ym(i,[1,0]),i=Ql(i,a),t.push(i),n=!0}else if(e>1){let r=wS(1,e).concat([0]);t.push(Ym(s,r)),n=!0}else t.push(s)}let r=this.mergeFunction(t),a=r.rank;if(n)if(null==a){let e=r.shape,t=e.length,n=e[t-1],a=[n].concat(e.slice(0,e.length-1));r=Ql(Ym(Ql(r,[-1,n]),[1,0]),a)}else if(a>1){let e=[a-1].concat(wS(0,a-1));r=Ym(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){let n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(let r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=PI(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Bo((()=>{if(null==t)return null;if(!Array.isArray(t))throw new kI("`mask` should be an Array");if(!Array.isArray(e))throw new kI("`inputs` should be an Array");if(t.length!==e.length)throw new kI(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;t=t.map((e=>null==e?e:xp(e,0)));let n=t[0];for(let e=1;e<t.length-1;++e)n=vd(n,t[e]);return n}))}},YE=class extends XE{constructor(e){super(e)}mergeFunction(e){return Bo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=el(t,e[n]);return t}))}};YE.className="Add",Sb.registerClass(YE);var ZE=class extends XE{constructor(e){super(e)}mergeFunction(e){return Bo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=il(t,e[n]);return t}))}};ZE.className="Multiply",Sb.registerClass(ZE);var JE=class extends XE{constructor(e){super(e)}mergeFunction(e){return Bo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=el(t,e[n]);return il(1/e.length,t)}))}};JE.className="Average",Sb.registerClass(JE);var QE=class extends XE{constructor(e){super(e)}mergeFunction(e){return Bo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Pd(t,e[n]);return t}))}};QE.className="Maximum",Sb.registerClass(QE);var e$=class extends XE{constructor(e){super(e)}mergeFunction(e){return Bo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=jd(t,e[n]);return t}))}};e$.className="Minimum",Sb.registerClass(e$);var t$=class extends XE{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new kI("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(let r of e)if(null!=r){t=!1;break}if(t)return;let n=[];for(let r=0;r<e.length;++r){let t=e[r].slice();t.splice(this.axis,1);let a=!1;for(let e of n)if(Ra.arraysEqual(e,t)){a=!0;break}a||n.push(t)}if(n.length>1)throw new kI("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Bo((()=>AS(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new kI("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let a of t.slice(1)){if(null==n[r]||null==a[r]){n[r]=null;break}n[r]+=a[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new kI("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new kI("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new kI(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Bo((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;let r=[];for(let s=0;s<e.length;++s)null==t[s]?r.push(Co(lc(e[s]),"bool")):t[s].rank<e[s].rank?r.push(xp(t[s],-1)):r.push(t[s]);let a=su(r,this.axis);return gl(a,-1,!1)}))}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function n$(e,t){for(;e<0;)e+=t;return e}function r$(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new II("batchDot is not implemented for tensors of 4D or higher rank yet");if(Ra.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),Ra.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new II("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);let s=n;return Bo((()=>{let n,i;if(r>a){n=r-a;let e=[];for(let t=0;t<n;++t)e.push(1);t=Ql(t,t.shape.concat(e))}else if(a>r){n=a-r;let t=[];for(let e=0;e<n;++e)t.push(1);e=Ql(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?hp(il(e,t),s[0]):hp(il(Ym(e,[1,0]),t),s[1]);else{let n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=ou(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;let t=[];for(let r=e;r<e+n;++r)t.push(r);i=ym(i,t)}return 1===i.shape.length&&(i=xp(i,1)),i}))}t$.className="Concatenate",Sb.registerClass(t$);var a$=class extends XE{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){Ra.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new II("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new kI(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new kI(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>n$(t,e[n].shape.length))):[n$(this.axes,n.shape.length),n$(this.axes,r.shape.length)],this.normalize&&(n=PT(n,t[0]),r=PT(r,t[1])),r$(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[n$(this.axes,e.length),n$(this.axes,t.length)],n}computeOutputShape(e){Ra.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new II("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};a$.className="Dot",Sb.registerClass(a$);var s$=class extends AN{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Bo((()=>{this.invokeCallHook(e,t);let n=bN(e);return GS((()=>el(DS(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}};s$.className="GaussianNoise",Sb.registerClass(s$);var i$=class extends AN{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Bo((()=>{this.invokeCallHook(e,t);let n=bN(e);return this.rate>0&&this.rate<1?GS((()=>{let e=Math.sqrt(this.rate/(1-this.rate));return il(n,DS(n.shape,1,e))}),(()=>n),t.training||!1):n}))}};i$.className="GaussianDropout",Sb.registerClass(i$);var o$=class extends AN{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||bN(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Bo((()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return GS((()=>{let t=bN(e),r=1.6732632423543772,a=1.0507009873554805,s=-r*a,i=Fp(df(n),this.rate);i=IS(i,"float32");let o=((1-this.rate)*(1+this.rate*s**2))**-.5,l=-o*s*this.rate,u=el(il(t,i),il(el(i,-1),s));return el(il(u,o),l)}),(()=>bN(e)),t.training||!1)}return e}))}};function l$(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=ku(e,t,n,r,a,s);else if(3===e.rank)i=Su(e,t,n,r,a,s);else{if(4!==e.rank)throw new II(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Tu(e,t,n,r,a,s)}return i}function u$(e,t,n,r,a=.001){return Bo((()=>{let s=Jd(e,r),i=s.mean,o=s.variance;return[l$(e,i,o,n,t,a),i,o]}))}function h$(e,t,n,r,a=.001){return Bo((()=>{let s=Jd(e,r),i=s.mean,o=s.variance,l=[];for(let t of wS(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);let u=Ql(i,l),h=Ql(o,l),p=null==t?null:Ql(t,l),d=null==n?null:Ql(n,l);return[l$(e,u,h,d,p,a),i,o]}))}function p$(e,t,n,r,a=.001){return Ra.arraysEqual(r.slice().sort(),wS(0,e.rank-1))?u$(e,t,n,r,a):h$(e,t,n,r,a)}o$.className="AlphaDropout",Sb.registerClass(o$);var d$=class extends AN{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=mN(e.betaInitializer||"zeros"),this.gammaInitializer=mN(e.gammaInitializer||"ones"),this.movingMeanInitializer=mN(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=mN(e.movingVarianceInitializer||"ones"),this.betaConstraint=aT(e.betaConstraint),this.gammaConstraint=aT(e.gammaConstraint),this.betaRegularizer=X_(e.betaRegularizer),this.gammaRegularizer=X_(e.gammaRegularizer)}build(e){e=xN(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new kI(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new TN({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Bo((()=>{let n=null!=t.training&&t.training,r=bN(e),a=r.shape,s=a.length,i=wS(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=TI(1,s);l[o]=a[o];let u=i.slice();u.sort();let h=!Ra.arraysEqual(u,wS(0,s).slice(0,s-1)),p=()=>{if(h){let e=Ql(this.movingMean.read(),l),t=Ql(this.movingVariance.read(),l),n=this.center?Ql(this.beta.read(),l):null,a=this.scale?Ql(this.gamma.read(),l):null;return l$(r,e,t,n,a,this.epsilon)}return l$(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)};if(!n)return p();let[d,c,f]=p$(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(e,t,n)=>{Bo((()=>{let r=1-n,a=e.read(),s=il(md(a,t),r);e.write(md(a,s))}))};return m(this.movingMean,c,this.momentum),m(this.movingVariance,f,this.momentum),d}))}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:fN(this.betaInitializer),gammaInitializer:fN(this.gammaInitializer),movingMeanInitializer:fN(this.movingMeanInitializer),movingVarianceInitializer:fN(this.movingVarianceInitializer),betaRegularizer:q_(this.betaRegularizer),gammaRegularizer:q_(this.gammaRegularizer),betaConstraint:nT(this.betaConstraint),gammaConstraint:nT(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};d$.className="BatchNormalization",Sb.registerClass(d$);var c$=class extends AN{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(let e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=mN(e.betaInitializer||"zeros"),this.gammaInitializer=mN(e.gammaInitializer||"ones"),this.betaRegularizer=X_(e.betaRegularizer),this.gammaRegularizer=X_(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=xN(e);let t=e.length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=t);for(let a of this.axis)if(a<0||a>=t)throw new Error(`Invalid axis: ${a}`);if(this.axis.length!==PI(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){let n=bN(e),r=n.shape,a=r.length;return Bo((()=>{let{mean:e,variance:t}=Jd(n,this.axis,!0),s=TI(1,a);for(let n of this.axis)s[n]=r[n];let i=e=>null!=e&&e.shape.length!==a?Ql(e,s):e,o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null,u=[],h=[];for(let n=0;n<a;++n)-1!==this.axis.indexOf(n)?(u.push(r[n]),h.push(1)):(u.push(1),h.push(r[n]));return e=Ip(e,u),t=Ip(t,u),null!=o&&(o=Ip(o,h)),null!=l&&(l=Ip(l,h)),l$(n,e,t,l,o,this.epsilon)}))}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:fN(this.betaInitializer),gammaInitializer:fN(this.gammaInitializer),betaRegularizer:q_(this.betaRegularizer),gammaRegularizer:q_(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};function f$(e,t,n){return Bo((()=>{if(4!==e.rank)throw new kI(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new kI("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n=kS()),"channelsLast"!==n&&"channelsFirst"!==n)throw new kI(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],dc(e,r)}))}c$.className="LayerNormalization",Sb.registerClass(c$);var m$=class extends AN{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?kS():e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new kI(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new kI(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new kI(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new TN({ndim:4})]}computeOutputShape(e){let t,n;return e=xN(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Bo((()=>f$(bN(e),this.padding,this.dataFormat)))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function g$(e,t,n,r,a,s){return Bo((()=>{rS(a),iS(s),sS(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a=kS()),null==s&&(s="max"),e=sE(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Fd(e,t,n,o):tu(e,t,n,o),"channelsFirst"===a&&(i=Ym(i,[0,3,1,2])),i}))}function y$(e,t,n,r,a,s){return Bo((()=>{rS(a),iS(s),sS(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a=kS()),null==s&&(s="max"),e=iE(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Md(e,t,n,o):ru(e,t,n,o),"channelsFirst"===a&&(i=Ym(i,[0,4,1,2,3])),i}))}m$.className="ZeroPadding2D",Sb.registerClass(m$);var b$=class extends AN{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new kI(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(UI(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new kI(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}UI(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,sS(this.padding),this.inputSpec=[new TN({ndim:3})]}computeOutputShape(e){e=xN(e);let t=rE(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Bo((()=>{this.invokeCallHook(e,t),e=SS(bN(e),2);let n=this.poolingFunction(bN(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ym(n,[2])}))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},x$=class extends b${constructor(e){super(e)}poolingFunction(e,t,n,r,a){return rS(a),sS(r),g$(e,t,n,r,a,"max")}};x$.className="MaxPooling1D",Sb.registerClass(x$);var w$=class extends b${constructor(e){super(e)}poolingFunction(e,t,n,r,a){return rS(a),sS(r),g$(e,t,n,r,a,"avg")}};w$.className="AveragePooling1D",Sb.registerClass(w$);var v$=class extends AN{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new kI(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];UI(this.poolSize,"poolSize"),UI(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,rS(this.dataFormat),sS(this.padding),this.inputSpec=[new TN({ndim:4})]}computeOutputShape(e){e=xN(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=rE(t,this.poolSize[0],this.padding,this.strides[0]),n=rE(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Bo((()=>(this.invokeCallHook(e,t),this.poolingFunction(bN(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},k$=class extends v${constructor(e){super(e)}poolingFunction(e,t,n,r,a){return rS(a),sS(r),g$(e,t,n,r,a,"max")}};k$.className="MaxPooling2D",Sb.registerClass(k$);var I$=class extends v${constructor(e){super(e)}poolingFunction(e,t,n,r,a){return rS(a),sS(r),g$(e,t,n,r,a,"avg")}};I$.className="AveragePooling2D",Sb.registerClass(I$);var S$=class extends AN{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new kI(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];UI(this.poolSize,"poolSize"),UI(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,rS(this.dataFormat),sS(this.padding),this.inputSpec=[new TN({ndim:5})]}computeOutputShape(e){e=xN(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=rE(t,this.poolSize[0],this.padding,this.strides[0]),n=rE(n,this.poolSize[1],this.padding,this.strides[1]),r=rE(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Bo((()=>(this.invokeCallHook(e,t),this.poolingFunction(bN(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},N$=class extends S${constructor(e){super(e)}poolingFunction(e,t,n,r,a){return rS(a),sS(r),y$(e,t,n,r,a,"max")}};N$.className="MaxPooling3D",Sb.registerClass(N$);var T$=class extends S${constructor(e){super(e)}poolingFunction(e,t,n,r,a){return rS(a),sS(r),y$(e,t,n,r,a,"avg")}};T$.className="AveragePooling3D",Sb.registerClass(T$);var C$=class extends AN{constructor(e){super(e),this.inputSpec=[new TN({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new II}},_$=class extends C${constructor(e){super(e||{})}call(e,t){return Bo((()=>{let t=bN(e);return Wd(t,1)}))}};_$.className="GlobalAveragePooling1D",Sb.registerClass(_$);var E$=class extends C${constructor(e){super(e||{})}call(e,t){return Bo((()=>{let t=bN(e);return Qh(t,1)}))}};E$.className="GlobalMaxPooling1D",Sb.registerClass(E$);var $$=class extends AN{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,rS(this.dataFormat),this.inputSpec=[new TN({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new II}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},A$=class extends $${call(e,t){return Bo((()=>{let t=bN(e);return"channelsLast"===this.dataFormat?Wd(t,[1,2]):Wd(t,[2,3])}))}};A$.className="GlobalAveragePooling2D",Sb.registerClass(A$);var R$=class extends $${call(e,t){return Bo((()=>{let t=bN(e);return"channelsLast"===this.dataFormat?Qh(t,[1,2]):Qh(t,[2,3])}))}};R$.className="GlobalMaxPooling2D",Sb.registerClass(R$);var F$=class extends AN{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=t.layer,a=zT(r,n);delete t.layer;let s={layer:a};return Object.assign(s,t),new e(s)}},D$=class extends F${constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=xN(e),e.length<3)throw new kI(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=xN(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Bo((()=>(e=bN(e),SE(((e,n)=>[bN(this.layer.call(e,t)),[]]),e,[],!1,null,null,!1,!0)[1])))}};function M$(e){WI(tS,"BidirectionalMergeMode",e)}D$.className="TimeDistributed",Sb.registerClass(D$);var O$="concat",L$=class extends F${constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=zT(n),t.goBackwards=!0!==t.goBackwards;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=zT(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?O$:e.mergeMode,M$(this.mergeMode),e.weights)throw new II("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState&&(r=a.slice(1)),t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):EI(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=IE(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);let s=[],i=[];if(null!=n){let e=n.length;if(e%2>0)throw new kI("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let r=n.map((e=>new TN({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new II("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof CN;for(let l of s)if(l instanceof CN!==o)throw new kI("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Bo((()=>{let n,r,a,s,i=t.initialState;if(null==i)n=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let a=i.slice(0,i.length/2),s=i.slice(i.length/2);n=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(n)&&(a=n.slice(1).concat(r.slice(1))),n=n[0],r=r[0]),this.returnSequences&&(r=If(r,1)),"concat"===this.mergeMode?s=AS([n,r]):"sum"===this.mergeMode?s=el(n,r):"ave"===this.mergeMode?s=il(.5,el(n,r)):"mul"===this.mergeMode?s=il(n,r):null==this.mergeMode&&(s=[n,r]),this.returnState?null==this.mergeMode?s.concat(a):[s].concat(a):s}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){uS(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),uS(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){let e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=zT(t.layer);if(delete t.layer,null!=t.numConstants)throw new II("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};L$.className="Bidirectional",Sb.registerClass(L$);var z$=class extends AN{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Bo((()=>(e=bN(e),"float32"!==e.dtype&&(e=IS(e,"float32")),el(il(e,this.scale),this.offset))))}};z$.className="Rescaling",Sb.registerClass(z$);var{resizeBilinear:P$,cropAndResize:B$}=xb,W$=class extends AN{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,a,s,i,o){return Bo((()=>{let l,u=!1,h=t/s,p=n/i,d=(r+t)/s,c=(a+n)/i,f=[h,p,d,c],m=[];3===e.rank?(u=!0,l=xm([e])):l=e;for(let e=0;e<l.shape[0];e++)m.push(f);let g=fi(m,[m.length,4]),y=cf(0,m.length,1,"int32"),b=B$(l,g,y,[r,a],"nearest");return IS(u?bN(Wm(b)):b,o)}))}upsize(e,t,n,r){return Bo((()=>{let a=P$(e,[t,n]);return IS(a,r)}))}call(e,t){return Bo((()=>{let t=bN(e),n=t.dtype,r=t.shape,a=r[r.length-3],s=r[r.length-2],i=0;a!==this.height&&(i=Math.floor((a-this.height)/2));let o=0;return s!==this.width&&(o=Math.floor((s-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,a,s,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){let e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=xN(e);let t=e.length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}};function V$(e,t,n,r){let a=bN(e);if("int32"!==a.dtype&&(a=IS(a,"int32")),"int"===t)return a;let s=a.shape;if(0===a.rank&&(a=xp(a,-1)),"oneHot"===t&&1!==a.shape[a.shape.length-1]&&(a=xp(a,-1)),a.rank>2)throw new kI(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${a.rank}.`);let i,o=["multiHot","oneHot"].includes(t),l=a;if(i=mh(l,"undefined"!=typeof r&&"count"===t?r:[],n,o),"tfIdf"!==t)return i;if(r)return il(i,r);throw new kI("When outputMode is 'tfIdf', weights must be provided.")}W$.className="CenterCrop",Sb.registerClass(W$);var U$=class extends AN{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=xN(e),null==e?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Bo((()=>{let n;if(e=bN(e),"int32"!==e.dtype&&(e=IS(e,"int32")),"undefined"!=typeof t.countWeights){if("count"!==this.outputMode)throw new kI(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=bN(t.countWeights)}let r=Qh(e),a=tp(e),s=Ap(this.numTokens,r).bufferSync().get(0),i=Fp(a,0).bufferSync().get(0);if(!s||!i)throw new kI(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return V$(e,this.outputMode,this.numTokens,n)}))}};U$.className="CategoryEncoding",Sb.registerClass(U$);var G$=["bilinear","nearest"],H$=new Set(G$),j$=class extends AN{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!H$.has(e.interpolation))throw new kI(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){e=xN(e);let t=e[2];return[this.height,this.width,t]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Bo((()=>{let t=[this.height,this.width];if("bilinear"===this.interpolation)return xb.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return xb.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...H$]} are supported`)}))}};function q$(e){return new MN(e)}function K$(e){return new Q_(e)}function X$(e){return new Y_(e)}function Y$(e){return new Z_(e)}function Z$(e){return new J_(e)}function J$(e){return new tE(e)}function Q$(e){return new eE(e)}function eA(e){return new bE(e)}function tA(e){return new dE(e)}function nA(e){return new fE(e)}function rA(e){return new cE(e)}function aA(e){return new mE(e)}function sA(e){return new yE(e)}function iA(e){return new xE(e)}function oA(e){return new wE(e)}function lA(e){return new kE(e)}function uA(e){return new UE(e)}function hA(e){return new WE(e)}function pA(e){return new PE(e)}function dA(e){return new BE(e)}function cA(e){return new VE(e)}function fA(e){return new GE(e)}function mA(e){return new HE(e)}function gA(e){return new jE(e)}function yA(e){return new KE(e)}function bA(e){return new YE(e)}function xA(e){return new JE(e)}function wA(e){return new t$(e)}function vA(e){return new QE(e)}function kA(e){return new e$(e)}function IA(e){return new ZE(e)}function SA(e){return new a$(e)}function NA(e){return new d$(e)}function TA(e){return new c$(e)}function CA(e){return new m$(e)}function _A(e){return new w$(e)}function EA(e){return _A(e)}function $A(e){return _A(e)}function AA(e){return new I$(e)}function RA(e){return AA(e)}function FA(e){return AA(e)}function DA(e){return new T$(e)}function MA(e){return DA(e)}function OA(e){return DA(e)}function LA(e){return new _$(e)}function zA(e){return new A$(e)}function PA(e){return new E$(e)}function BA(e){return new R$(e)}function WA(e){return new x$(e)}function VA(e){return new k$(e)}function UA(e){return new N$(e)}function GA(e){return new $E(e)}function HA(e){return new EE(e)}function jA(e){return new RE(e)}function qA(e){return new AE(e)}function KA(e){return new _E(e)}function XA(e){return new CE(e)}function YA(e){return new zE(e)}function ZA(e){return new LE(e)}function JA(e){return new NE(e)}function QA(e){return new FE(e)}function eR(e){return new L$(e)}function tR(e){return new D$(e)}j$.className="Resizing",Sb.registerClass(j$);var nR=PA,rR=BA,aR=WA,sR=VA;function iR(e){return new s$(e)}function oR(e){return new i$(e)}function lR(e){return new o$(e)}function uR(e){return new qE(e)}function hR(e){return new z$(e)}function pR(e){return new W$(e)}function dR(e){return new j$(e)}function cR(e){return new U$(e)}var fR={};function mR(e,t){return rC(e,t)}function gR(e,t){return hC(e,t)}function yR(e,t){return pC(e,t)}function bR(e,t){return aC(e,t)}function xR(e,t){return bC(e,t)}function wR(e,t){return lC(e,t)}function vR(e,t){return uC(e,t)}function kR(e,t){return eC(e,t)}function IR(e,t){return WT(e,t)}function SR(e,t){return VT(e,t)}function NR(e,t){return VT(e,t)}function TR(e,t){return VT(e,t)}function CR(e,t){return BT(e,t)}function _R(e,t){return BT(e,t)}function ER(e,t){return BT(e,t)}C(fR,{MAPE:()=>NR,MSE:()=>_R,binaryAccuracy:()=>mR,binaryCrossentropy:()=>gR,categoricalAccuracy:()=>bR,categoricalCrossentropy:()=>xR,cosineProximity:()=>kR,mape:()=>TR,meanAbsoluteError:()=>IR,meanAbsolutePercentageError:()=>SR,meanSquaredError:()=>CR,mse:()=>ER,precision:()=>wR,recall:()=>vR,sparseCategoricalAccuracy:()=>yR});var $R={};C($R,{modelFromJSON:()=>f_});var AR={};function RR(e){return new U_(e)}function FR(e){return G_(e)}function DR(e){return H_(e)}C(AR,{l1:()=>FR,l1l2:()=>RR,l2:()=>DR});var MR=class extends $T{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof d_))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function OR(e,t){return e<t}function LR(e,t){return e>t}var zR=class extends MR{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new II("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=OR:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=LR:this.monitorFunc=OR,this.monitorFunc===OR&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===OR?1/0:-1/0}async onEpochEnd(e,t){await CT(t);let n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});let t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function PR(e){return new zR(e)}var BR,WR,VR={earlyStopping:PR},UR=Je();UR.registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(BR||(BR={})),function(e){let t;(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(WR||(WR={}));var GR={};function HR(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};GR[e]=n}function jR(e){return GR[e]}function qR(e){delete GR[e]}function KR(e,t,n,r,a){let s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){let e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return XR(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>XR(e,n,r,a)));let o=XR(t.inputNames.slice(e)[0],n,r,a),l=o.dataSync();return"number"===s.type?l[0]:Ra.toNestedArray(o.shape,l)}let i=t.attrParams[e];return i&&i.value}function XR(e,t,n,r){let[a,s]=QR(e);if(null!=r){let e=r.getHashTableHandleByName(a);if(null!=e)return e}let i=n.currentContextIds.find((e=>!!t[JR(a,e)]));return void 0!==i?t[JR(a,i)][s]:void 0}function YR(e,t,n){return t[JR(e,n.currentContextId)]}function ZR(e,t){let[n,r,a]=QR(e);return[JR(n,t&&t.currentContextId),r,a]}function JR(e,t){return t?`${e}-${t}`:e}function QR(e){let t=e.split(":");if(1===t.length)return[e,0,void 0];let n=t[0],r=3===t.length?t[1]:void 0,a=Number(t[t.length-1]);return[n,a,r]}function eF(e,t,n){let r=KR("pad",e,t,n);if("explicit"===r){r=KR("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function tF(e){return e.kept?e:Eo(e)}var nF={};C(nF,{json:()=>rF});var rF=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],aF={};C(aF,{json:()=>sF});var sF=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],iF={};C(iF,{json:()=>oF});var oF=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],lF={};C(lF,{json:()=>uF});var uF=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],hF={};C(hF,{json:()=>pF});var pF=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],dF={};C(dF,{json:()=>cF});var cF=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],fF={};C(fF,{json:()=>mF});var mF=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],gF={};C(gF,{json:()=>yF});var yF=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],bF={};C(bF,{json:()=>xF});var xF=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],wF={};C(wF,{json:()=>vF});var vF=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],kF={};C(kF,{json:()=>IF});var IF=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],SF={};C(SF,{json:()=>NF});var NF=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],TF={};C(TF,{json:()=>CF});var CF=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],_F={};C(_F,{json:()=>EF});var EF=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],$F={};C($F,{json:()=>AF});var AF=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],RF={};C(RF,{json:()=>FF});var FF=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],DF={};C(DF,{json:()=>MF});var MF=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],OF={};C(OF,{json:()=>LF});var LF=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],zF={};C(zF,{json:()=>PF});var PF=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],BF=class{constructor(){let e=[nF,aF,iF,lF,hF,dF,fF,gF,bF,wF,kF,SF,TF,_F,$F,RF,DF,OF,zF],t=[].concat(...e.map((e=>e.json)));this.opMappers=t.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}static get Instance(){return this._instance||(this._instance=new this)}transformGraph(e,t={}){let n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&s.push(e[t.name]),e)),{}),o=[],l=[],u={},h={};null!=t&&(u=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));let p=Object.keys(i);p.forEach((e=>{let t=i[e];t.inputNames.forEach(((e,n)=>{let[r,,a]=ZR(e),s=i[r];if(null!=s.outputs){let e=s.outputs.indexOf(a);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(h).length?p.forEach((e=>{let t=i[e];0===t.children.length&&l.push(t)})):Object.keys(h).forEach((e=>{let[t]=ZR(e),n=i[t];null!=n&&(n.signatureKey=h[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{let[t]=ZR(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:d};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){let t=jR(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{let r,a=n.type;switch(n.type){case"string":r=UF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=UF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=QF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=QF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=HF(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=HF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=JF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=JF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=GF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=GF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=tD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=tD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=ZF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ZF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=eD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=eD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=KF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=KF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=XF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=XF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=qF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=qF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){let t=e.nodeDef,n=[],r=[],a={};null!=t&&(a=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&r.push(e[t.name]),e)),{}));let s=[],i=[];e.signature.inputArg.forEach((e=>{let[t]=ZR(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:jF(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),a[t]=n})),Object.keys(a).forEach((e=>{let t=a[e];t.inputNames.forEach(((e,n)=>{let[r,,s]=ZR(e),i=a[r];if(null!=i.outputs){let e=i.outputs.indexOf(s);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(i),i.children.push(t)}))}));let o=e.ret;e.signature.outputArg.forEach((e=>{let[t,n]=ZR(o[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,i.push(r))}));let l=this.mapArgsToSignature(e);return{nodes:a,inputs:s,outputs:i,weights:r,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function WF(e){let t=Je().global;if("undefined"!=typeof t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function VF(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):WF(e);return t?n:n.toLowerCase()}function UF(e,t,n,r=!1){let a=e[t];return null!=a?VF(a.s,r):n}function GF(e,t,n){let r=e[t];return r?r.b:n}function HF(e,t,n){let r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function jF(e){switch("string"==typeof e&&(e=BR[e]),e){case BR.DT_FLOAT:case BR.DT_HALF:return"float32";case BR.DT_INT32:case BR.DT_INT64:case BR.DT_INT8:case BR.DT_UINT8:return"int32";case BR.DT_BOOL:return"bool";case BR.DT_DOUBLE:return"float32";case BR.DT_STRING:return"string";default:return null}}function qF(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function KF(e,t,n){let r=e[t];return r&&r.type?jF(r.type):n}function XF(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>jF(e))):n}function YF(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function ZF(e,t,n){let r=e[t];return r&&r.shape?YF(r.shape):n}function JF(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function QF(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>VF(e,r))):n}function eD(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>YF(e))):n}function tD(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var nD=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return XR(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return XR(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return HF(this.node.rawAttrs,e,t);if(null!=n.s)return UF(this.node.rawAttrs,e,t);if(null!=n.b)return GF(this.node.rawAttrs,e,t);if(null!=n.shape)return ZF(this.node.rawAttrs,e,t);if(null!=n.type)return KF(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return JF(this.node.rawAttrs,e,t);if(null!=n.list.s)return QF(this.node.rawAttrs,e,t);if(null!=n.list.shape)return eD(this.node.rawAttrs,e,t);if(null!=n.list.b)return tD(this.node.rawAttrs,e,t);if(null!=n.list.type)return XF(this.node.rawAttrs,e,t)}return t}},rD={};C(rD,{OP_SCOPE_SUFFIX:()=>ui,abs:()=>ll,acos:()=>hl,acosh:()=>dl,add:()=>el,addN:()=>fl,all:()=>gl,any:()=>bl,argMax:()=>wl,argMin:()=>kl,asin:()=>Sl,asinh:()=>Tl,atan:()=>_l,atan2:()=>$l,atanh:()=>Rl,avgPool:()=>tu,avgPool3d:()=>ru,basicLSTMCell:()=>mu,batchNorm:()=>wu,batchNorm2d:()=>ku,batchNorm3d:()=>Su,batchNorm4d:()=>Tu,batchToSpaceND:()=>yu,bincount:()=>_u,booleanMaskAsync:()=>Km,broadcastArgs:()=>$u,broadcastTo:()=>Ru,buffer:()=>No,cast:()=>Co,ceil:()=>Du,clipByValue:()=>Lu,clone:()=>Eo,complex:()=>di,concat:()=>su,concat1d:()=>Pu,concat2d:()=>Wu,concat3d:()=>Uu,concat4d:()=>Hu,conv1d:()=>Xu,conv2d:()=>qu,conv2dTranspose:()=>Qu,conv3d:()=>th,conv3dTranspose:()=>sh,cos:()=>oh,cosh:()=>uh,cosineWindow:()=>fg,cumprod:()=>ph,cumsum:()=>ch,denseBincount:()=>mh,depthToSpace:()=>yh,depthwiseConv2d:()=>xh,diag:()=>vh,dilation2d:()=>Ih,div:()=>al,divNoNan:()=>Mh,dot:()=>Lh,dropout:()=>dg,einsum:()=>Ph,elu:()=>Wh,enclosingPowerOfTwo:()=>cg,equal:()=>Eh,erf:()=>Uh,euclideanNorm:()=>mp,exp:()=>yp,expandDims:()=>xp,expm1:()=>vp,eye:()=>Np,fft:()=>sm,fill:()=>Mu,floor:()=>Cp,floorDiv:()=>nl,fused:()=>yg,gather:()=>Ep,gatherND:()=>ug,greater:()=>Ap,greaterEqual:()=>Fp,ifft:()=>om,imag:()=>Mp,image:()=>xb,inTopKAsync:()=>gg,irfft:()=>um,isFinite:()=>Lp,isInf:()=>Pp,isNaN:()=>Wp,leakyRelu:()=>Up,less:()=>Hp,lessEqual:()=>qp,linalg:()=>wb,linspace:()=>Kp,localResponseNormalization:()=>Yp,log:()=>Jp,log1p:()=>ed,logSigmoid:()=>cd,logSoftmax:()=>yd,logSumExp:()=>xd,logicalAnd:()=>vd,logicalNot:()=>Id,logicalOr:()=>Nd,logicalXor:()=>Cd,losses:()=>vb,lowerBound:()=>Ad,matMul:()=>ou,max:()=>Qh,maxPool:()=>Fd,maxPool3d:()=>Md,maxPoolWithArgmax:()=>Ld,maximum:()=>Pd,mean:()=>Wd,meshgrid:()=>Gd,min:()=>tp,minimum:()=>jd,mirrorPad:()=>Kd,mod:()=>Yd,moments:()=>Jd,movingAverage:()=>Jm,mul:()=>il,multiRNNCell:()=>ec,multinomial:()=>nc,neg:()=>ud,norm:()=>cp,notEqual:()=>ac,oneHot:()=>ic,ones:()=>Ud,onesLike:()=>lc,op:()=>hi,outerProduct:()=>hc,pad:()=>dc,pad1d:()=>fc,pad2d:()=>gc,pad3d:()=>bc,pad4d:()=>wc,pool:()=>Tc,pow:()=>rp,prelu:()=>_c,print:()=>$o,prod:()=>$c,raggedGather:()=>Rc,raggedRange:()=>Dc,raggedTensorToTensor:()=>Oc,rand:()=>zc,randomGamma:()=>sf,randomNormal:()=>lf,randomStandardNormal:()=>hf,randomUniform:()=>df,range:()=>cf,real:()=>mf,reciprocal:()=>yf,relu:()=>xf,relu6:()=>vf,reshape:()=>Ql,reverse:()=>If,reverse1d:()=>Nf,reverse2d:()=>Cf,reverse3d:()=>Ef,reverse4d:()=>Af,rfft:()=>cm,round:()=>Ff,rsqrt:()=>Mf,scalar:()=>ap,scatterND:()=>ag,searchSorted:()=>$d,selu:()=>Lf,separableConv2d:()=>Pf,setdiff1dAsync:()=>Wf,sigmoid:()=>uu,sign:()=>Uf,signal:()=>bb,sin:()=>Hf,sinh:()=>qf,slice:()=>pu,slice1d:()=>Xf,slice2d:()=>Zf,slice3d:()=>Qf,slice4d:()=>tm,softmax:()=>rm,softplus:()=>pd,spaceToBatchND:()=>kc,sparse:()=>kb,sparseToDense:()=>og,spectral:()=>yb,split:()=>pm,sqrt:()=>ip,square:()=>lp,squaredDifference:()=>mm,squeeze:()=>ym,stack:()=>xm,step:()=>vm,stridedSlice:()=>Im,string:()=>Ib,sub:()=>md,sum:()=>hp,tan:()=>Nm,tanh:()=>cu,tensor:()=>fi,tensor1d:()=>Tm,tensor2d:()=>Cm,tensor3d:()=>_m,tensor4d:()=>Em,tensor5d:()=>$m,tensor6d:()=>Am,tile:()=>Ip,topk:()=>Fm,transpose:()=>Ym,truncatedNormal:()=>Mm,unique:()=>Lm,unsortedSegmentSum:()=>Pm,unstack:()=>Wm,upperBound:()=>Vm,variable:()=>Um,where:()=>Ah,whereAsync:()=>jm,zeros:()=>Vd,zerosLike:()=>Fh});var aD=(e,t,n,r=rD)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(KR("a",e,t,n),KR("b",e,t,n))];case"AddN":return[r.addN(KR("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(KR("a",e,t,n),KR("b",e,t,n))];case"Mul":return[r.mul(KR("a",e,t,n),KR("b",e,t,n))];case"RealDiv":case"Div":return[r.div(KR("a",e,t,n),KR("b",e,t,n))];case"DivNoNan":return[r.divNoNan(KR("a",e,t,n),KR("b",e,t,n))];case"FloorDiv":return[r.floorDiv(KR("a",e,t,n),KR("b",e,t,n))];case"Sub":return[r.sub(KR("a",e,t,n),KR("b",e,t,n))];case"Minimum":return[r.minimum(KR("a",e,t,n),KR("b",e,t,n))];case"Maximum":return[r.maximum(KR("a",e,t,n),KR("b",e,t,n))];case"Pow":return[r.pow(KR("a",e,t,n),KR("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(KR("a",e,t,n),KR("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},sD=(e,t,n,r=rD)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(KR("x",e,t,n))];case"Acos":return[r.acos(KR("x",e,t,n))];case"Acosh":return[r.acosh(KR("x",e,t,n))];case"Asin":return[r.asin(KR("x",e,t,n))];case"Asinh":return[r.asinh(KR("x",e,t,n))];case"Atan":return[r.atan(KR("x",e,t,n))];case"Atan2":return[r.atan2(KR("x",e,t,n),KR("y",e,t,n))];case"Atanh":return[r.atanh(KR("x",e,t,n))];case"Ceil":return[r.ceil(KR("x",e,t,n))];case"Complex":return[r.complex(KR("real",e,t,n),KR("imag",e,t,n))];case"Cos":return[r.cos(KR("x",e,t,n))];case"Cosh":return[r.cosh(KR("x",e,t,n))];case"Elu":return[r.elu(KR("x",e,t,n))];case"Erf":return[r.erf(KR("x",e,t,n))];case"Exp":return[r.exp(KR("x",e,t,n))];case"Expm1":return[r.expm1(KR("x",e,t,n))];case"Floor":return[r.floor(KR("x",e,t,n))];case"Log":return[r.log(KR("x",e,t,n))];case"Log1p":return[r.log1p(KR("x",e,t,n))];case"Imag":return[r.imag(KR("x",e,t,n))];case"Neg":return[r.neg(KR("x",e,t,n))];case"Reciprocal":return[r.reciprocal(KR("x",e,t,n))];case"Real":return[r.real(KR("x",e,t,n))];case"Relu":return[r.relu(KR("x",e,t,n))];case"Round":return[r.round(KR("x",e,t,n))];case"Selu":return[r.selu(KR("x",e,t,n))];case"Sigmoid":return[r.sigmoid(KR("x",e,t,n))];case"Sin":return[r.sin(KR("x",e,t,n))];case"Sign":return[r.sign(KR("x",e,t,n))];case"Sinh":return[r.sinh(KR("x",e,t,n))];case"Softplus":return[r.softplus(KR("x",e,t,n))];case"Sqrt":return[r.sqrt(KR("x",e,t,n))];case"Square":return[r.square(KR("x",e,t,n))];case"Tanh":return[r.tanh(KR("x",e,t,n))];case"Tan":return[r.tan(KR("x",e,t,n))];case"ClipByValue":return[r.clipByValue(KR("x",e,t,n),KR("clipValueMin",e,t,n),KR("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(KR("x",e,t,n))];case"Rsqrt":return[r.rsqrt(XR(e.inputNames[0],t,n))];case"Prod":return[r.prod(KR("x",e,t,n),KR("axes",e,t,n))];case"LeakyRelu":return[r.leakyRelu(KR("x",e,t,n),KR("alpha",e,t,n))];case"Prelu":return[r.prelu(KR("x",e,t,n),KR("alpha",e,t,n))];case"IsNan":return[r.isNaN(XR(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function iD(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){Ra.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){let a=e[r],s=t[r];Ra.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function oD(e){return!("number"==typeof e||e.some((e=>e<0)))}function lD(e,t,n){let r=uD(e,n),a=!oD(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=uD(e.shape,r)})),!oD(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function uD(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var hD=class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=ap(0),Vo(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),iD(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Vo(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return fi([],[0].concat(this.elementShape));let n=this.readMany(e);return iD(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),xm(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return fi([],[0].concat(this.elementShape));let t=[];for(let r=0;r<this.size();r++)t.push(r);let n=this.readMany(t);return iD(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),su(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Wm(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===n?0:t.size/n,s=[];Bo((()=>{t=Ql(t,[1,n,a]);for(let n=0;n<e.length;++n){let i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=Ql(pu(t,i,o),this.elementShape)}return s}));let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}},pD=class{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);iD(t,e.shape,"TensorList shape mismatch: "),Vo(e)})),this.idTensor=ap(0),this.maxNumElements=r,Vo(this.idTensor)}get id(){return this.idTensor.id}copy(){return new pD([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.id))&&t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);iD(e,this.elementShape,"TensorList shape mismatch: ");let r=lD(this.elementShape,this.tensors,e);return Bo((()=>{let e=this.tensors.map((e=>Ql(e,r)));return xm(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");let n=lD(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,iD(r.shape,e,"TensorList shape mismatch: "),Ql(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(iD(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Vo(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new pD([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);iD(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=lD(this.elementShape,this.tensors,t);return Ql(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);iD(this.elementShape,t.shape,"TensorList shape mismatch: "),Vo(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);iD(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=lD(this.elementShape,this.tensors,n);return 0===e.length?fi([],[0].concat(r)):Bo((()=>{let t=e.map((e=>Ql(this.tensors[e],r)));return xm(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);iD(this.elementShape,t,"TensorList shape mismatch: ");let n=lD(this.elementShape,this.tensors,t);return 0===this.size()?fi([],[0].concat(n)):Bo((()=>{let e=this.tensors.map((e=>Ql(e,n)));return su(e,0)}))}};function dD(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let a=e.shape.slice(1);iD(a,t,"TensorList shape mismatch: ");let s=Wm(e);return new pD(s,t,r)}function cD(e,t,n,r){return new pD([],e,t,r)}function fD(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new pD([],n,e.dtype,r),i=Wm(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}function mD(e,t,n){let r=0,a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);let s=e.shape.slice(1),i=uD(s,n),o=0===r?0:e.size/r,l=Bo((()=>{let n=[];e=Ql(e,[1,r,o]);for(let r=0;r<t.length;++r){let s=[0,0===r?0:a[r-1],0],l=[1,t[r],o];n[r]=Ql(pu(e,s,l),i)}return e.dispose(),n})),u=new pD([],n,e.dtype,t.length);for(let h=0;h<l.length;h++)u.setItem(h,l[h]);return u}var gD=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=KR("thenBranch",e,t,n),a=KR("elseBranch",e,t,n),s=KR("cond",e,t,n),i=KR("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=KR("body",e,t,n),a=KR("cond",e,t,n),s=KR("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id)),l=await i[0].data();i.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&e.dispose()}));let u=s;for(;l[0];){let e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let t=u.map((e=>e.id));e.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}));let s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}))}return u}case"LoopCond":{let r=KR("pred",e,t,n);return[tF(r)]}case"Switch":{let r=KR("pred",e,t,n),a=KR("data",e,t,n);return a.kept||(a=tF(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find((e=>void 0!==XR(e,t,n)));if(r){let e=XR(r,t,n);return[tF(e)]}return}case"Enter":{let r=KR("frameName",e,t,n),a=KR("tensor",e,t,n);return n.enterFrame(r),[tF(a)]}case"Exit":{let r=KR("tensor",e,t,n);return n.exitFrame(),[tF(r)]}case"NextIteration":{let r=KR("tensor",e,t,n);return n.nextIteration(),[tF(r)]}case"TensorArrayV3":{let r=KR("size",e,t,n),a=KR("dtype",e,t,n),s=KR("elementShape",e,t,n),i=KR("dynamicSize",e,t,n),o=KR("clearAfterRead",e,t,n),l=KR("identicalElementShapes",e,t,n),u=KR("name",e,t,n),h=new hD(u,a,r,s,l,i,o);return n.addTensorArray(h),[h.idTensor,ap(1)]}case"TensorArrayWriteV3":{let r=KR("tensorArrayId",e,t,n),a=KR("index",e,t,n),s=KR("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=KR("tensorArrayId",e,t,n),a=KR("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=KR("tensorArrayId",e,t,n),a=KR("indices",e,t,n),s=KR("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=KR("tensorArrayId",e,t,n),a=KR("indices",e,t,n),s=KR("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=KR("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=KR("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=KR("tensorArrayId",e,t,n),a=KR("tensor",e,t,n),s=KR("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=KR("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[ap(a.size(),"int32")]}case"TensorArrayCloseV3":{let r=KR("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=KR("tensorListId",e,t,n),a=KR("index",e,t,n),s=KR("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=KR("tensorListId",e,t,n),a=KR("index",e,t,n),s=KR("elementShape",e,t,n),i=KR("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=KR("indices",e,t,n),a=KR("tensor",e,t,n),s=KR("elementShape",e,t,n),i=KR("numElements",e,t,n),o=fD(a,r,s,i);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r,a=KR("elementShape",e,t,n),s=KR("elementDType",e,t,n);r="TensorListReserve"===e.op?"numElements":"maxNumElements";let i=KR(r,e,t,n),o="TensorListReserve"===e.op?-1:i,l=cD(a,s,i,o);return n.addTensorList(l),[l.idTensor]}case"TensorListGather":{let r=KR("tensorListId",e,t,n),a=KR("indices",e,t,n),s=KR("elementShape",e,t,n),i=KR("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=KR("tensorListId",e,t,n),a=KR("elementShape",e,t,n),s=KR("elementDType",e,t,n),i=KR("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=KR("tensor",e,t,n),a=KR("elementShape",e,t,n),s=KR("elementDType",e,t,n),i=dD(r,a,s);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let r=KR("tensorListId",e,t,n),a=n.getTensorList(r.id),s=KR("dtype",e,t,n),i=KR("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=KR("tensorListId",e,t,n),a=KR("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=KR("tensorListId",e,t,n),a=KR("elementShape",e,t,n),s=KR("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=KR("tensor",e,t,n),a=KR("elementShape",e,t,n),s=KR("lengths",e,t,n),i=mD(r,s,a);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{let r=KR("tensorListId",e,t,n),a=n.getTensorList(r.id);return[ap(a.size(),"int32")]}case"TensorListResize":{let r=KR("tensorListId",e,t,n),a=KR("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function yD(e,t,n){let[r,a]=KR("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,l="fusedbatchnorm"===r,u=KR("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let h=KR("strides",e,t,n),p=eF(e,t,n),d=KR("dataFormat",e,t,n).toUpperCase(),c=KR("dilations",e,t,n),[f,m]=KR("args",e,t,n);i&&(m=f,f=void 0);let g=KR("leakyreluAlpha",e,t,n);return{stride:h,pad:p,dataFormat:d,dilations:c,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:g}}var bD=(e,t,n,r=rD)=>{switch(e.op){case"Conv1D":{let a=KR("stride",e,t,n),s=KR("pad",e,t,n),i=KR("dataFormat",e,t,n).toUpperCase(),o=KR("dilation",e,t,n);return[r.conv1d(KR("x",e,t,n),KR("filter",e,t,n),a,s,i,o)]}case"Conv2D":{let a=KR("strides",e,t,n),s=eF(e,t,n),i=KR("dataFormat",e,t,n).toUpperCase(),o=KR("dilations",e,t,n);return[r.conv2d(KR("x",e,t,n),KR("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:h,leakyreluAlpha:p}=yD(e,t,n);return[r.fused.conv2d({x:KR("x",e,t,n),filter:KR("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:h,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:h,leakyreluAlpha:p}=yD(e,t,n);return[r.fused.depthwiseConv2d({x:KR("x",e,t,n),filter:KR("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:h,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=KR("outputShape",e,t,n),s=KR("strides",e,t,n),i=eF(e,t,n);return[r.conv2dTranspose(KR("x",e,t,n),KR("filter",e,t,n),a,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=KR("strides",e,t,n),s=eF(e,t,n),i=KR("dilations",e,t,n),o=KR("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(KR("input",e,t,n),KR("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let a=KR("strides",e,t,n),s=KR("pad",e,t,n),i=KR("dataFormat",e,t,n).toUpperCase(),o=KR("dilations",e,t,n);return[r.conv3d(KR("x",e,t,n),KR("filter",e,t,n),[a[1],a[2],a[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let a=KR("strides",e,t,n),s=KR("pad",e,t,n),i=KR("kernelSize",e,t,n);return[r.avgPool(KR("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPool":{let a=KR("strides",e,t,n),s=KR("pad",e,t,n),i=KR("kernelSize",e,t,n);return[r.maxPool(KR("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{let a=KR("strides",e,t,n),s=KR("pad",e,t,n),i=KR("kernelSize",e,t,n),o=KR("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(KR("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s,o);return[l,u]}case"AvgPool3D":{let a=KR("strides",e,t,n),s=KR("pad",e,t,n),i=KR("kernelSize",e,t,n);return[r.avgPool3d(KR("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{let a=KR("strides",e,t,n),s=KR("pad",e,t,n),i=KR("kernelSize",e,t,n);return[r.maxPool3d(KR("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{let a=KR("strides",e,t,n),s=KR("pad",e,t,n),i=KR("dilations",e,t,n),o=a[1],l=a[2],u=i[1],h=i[2];return[r.dilation2d(KR("x",e,t,n),KR("filter",e,t,n),[o,l],s,[u,h],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},xD=(e,t,n,r=rD)=>{switch(e.op){case"Fill":{let a=KR("shape",e,t,n),s=KR("dtype",e,t,n),i=KR("value",e,t,n);return[r.fill(a,i,s)]}case"LinSpace":{let a=KR("start",e,t,n),s=KR("stop",e,t,n),i=KR("num",e,t,n);return[r.linspace(a,s,i)]}case"Multinomial":{let a=KR("logits",e,t,n),s=KR("numSamples",e,t,n),i=KR("seed",e,t,n);return[r.multinomial(a,s,i)]}case"OneHot":{let a=KR("indices",e,t,n),s=KR("depth",e,t,n),i=KR("onValue",e,t,n),o=KR("offValue",e,t,n),l=KR("dtype",e,t,n);return[r.oneHot(a,s,i,o,l)]}case"Ones":return[r.ones(KR("shape",e,t,n),KR("dtype",e,t,n))];case"OnesLike":return[r.onesLike(KR("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(KR("shape",e,t,n),KR("dtype",e,t,n),KR("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(KR("shape",e,t,n),KR("minval",e,t,n),KR("maxval",e,t,n),KR("dtype",e,t,n))];case"Range":{let a=KR("start",e,t,n),s=KR("stop",e,t,n),i=KR("step",e,t,n);return[r.range(a,s,i,KR("dtype",e,t,n))]}case"TruncatedNormal":{let a=KR("shape",e,t,n),s=KR("mean",e,t,n),i=KR("stdDev",e,t,n),o=KR("seed",e,t,n);return[r.truncatedNormal(a,s,i,KR("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(KR("shape",e,t,n),KR("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(KR("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function wD(e,t,n){let r=KR("boxes",e,t,n),a=KR("scores",e,t,n),s=KR("maxOutputSize",e,t,n),i=KR("iouThreshold",e,t,n),o=KR("scoreThreshold",e,t,n),l=KR("softNmsSigma",e,t,n);return{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}}var vD=async(e,t,n,r,a=rD)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=wD(e,t,n),h=await a.image.nonMaxSuppressionWithScoreAsync(r,s,i,o,l,u);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=wD(e,t,n),u=KR("padToMaxOutputSize",e,t,n),h=await a.image.nonMaxSuppressionPaddedAsync(r,s,i,o,l,u);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=wD(e,t,n);return[await a.image.nonMaxSuppressionAsync(r,s,i,o,l)]}case"Where":{let r=a.cast(KR("condition",e,t,n),"bool"),s=[await a.whereAsync(r)];return r.dispose(),s}case"ListDiff":return a.setdiff1dAsync(KR("x",e,t,n),KR("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},kD=(e,t,n,r=rD)=>{switch(e.op){case"LowerBound":{let a=KR("sortedSequence",e,t,n),s=KR("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{let a=KR("x",e,t,n),s=KR("k",e,t,n),i=KR("sorted",e,t,n),o=r.topk(a,s,i);return[o.values,o.indices]}case"UpperBound":{let a=KR("sortedSequence",e,t,n),s=KR("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{let a=KR("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{let a=KR("x",e,t,n),s=KR("axis",e,t,n),i=r.unique(a,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},ID=(e,t,n,r=rD)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=KR("default",e,t,n);return[XR(e.name,t,n)||a];case"Placeholder":return[XR(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let r=KR("x",e,t,n);return[tF(r)]}case"IdentityN":return KR("x",e,t,n).map((e=>tF(e)));case"Snapshot":let s=KR("x",e,t,n);return[tF(s)];case"Shape":return[r.tensor1d(KR("x",e,t,n).shape,"int32")];case"ShapeN":return KR("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(KR("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(KR("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":let i=KR("x",e,t,n),o=KR("data",e,t,n),l=KR("message",e,t,n),u=KR("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}},SD=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ap(0),this.tensorMap=new Map,Vo(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ap(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Bo((()=>{let e=Wm(t),r=n.length,a=e.length;Ra.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){let r=n[t],a=e[t];Vo(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return Bo((()=>{let e=[];for(let r=0;r<n.length;r++){let a=n[r],s=this.findWithDefault(a,t);e.push(s)}return xm(e)}))}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},ND=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=r.getHashTableHandleByName(e.name);if(null!=a)return[a];{let a=KR("keyDType",e,t,n),s=KR("valueDType",e,t,n),i=new SD(a,s);return r.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let a=KR("tableHandle",e,t,n,r),s=KR("keys",e,t,n),i=KR("values",e,t,n);return[await r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=KR("tableHandle",e,t,n,r),s=KR("keys",e,t,n),i=KR("defaultValue",e,t,n);return[await r.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=KR("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},TD=(e,t,n,r=rD)=>{switch(e.op){case"ResizeBilinear":{let a=KR("images",e,t,n),s=KR("size",e,t,n),i=KR("alignCorners",e,t,n),o=KR("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let a=KR("images",e,t,n),s=KR("size",e,t,n),i=KR("alignCorners",e,t,n),o=KR("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],i,o)]}case"CropAndResize":{let a=KR("image",e,t,n),s=KR("boxes",e,t,n),i=KR("boxInd",e,t,n),o=KR("cropSize",e,t,n),l=KR("method",e,t,n),u=KR("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,i,o,l,u)]}case"ImageProjectiveTransformV3":{let a=KR("images",e,t,n),s=KR("transforms",e,t,n),i=KR("outputShape",e,t,n),o=KR("fillValue",e,t,n),l=KR("interpolation",e,t,n),u=KR("fillMode",e,t,n);return[r.image.transform(a,s,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},CD=(e,t,n,r=rD)=>{switch(e.op){case"Equal":return[r.equal(KR("a",e,t,n),KR("b",e,t,n))];case"NotEqual":return[r.notEqual(KR("a",e,t,n),KR("b",e,t,n))];case"Greater":return[r.greater(KR("a",e,t,n),KR("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(KR("a",e,t,n),KR("b",e,t,n))];case"Less":return[r.less(KR("a",e,t,n),KR("b",e,t,n))];case"LessEqual":return[r.lessEqual(KR("a",e,t,n),KR("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(KR("a",e,t,n),KR("b",e,t,n))];case"LogicalNot":return[r.logicalNot(KR("a",e,t,n))];case"LogicalOr":return[r.logicalOr(KR("a",e,t,n),KR("b",e,t,n))];case"Select":case"SelectV2":return[r.where(KR("condition",e,t,n),KR("a",e,t,n),KR("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},_D=(e,t,n,r=rD)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(KR("a",e,t,n),KR("b",e,t,n),KR("transposeA",e,t,n),KR("transposeB",e,t,n))];case"Einsum":return[r.einsum(KR("equation",e,t,n),...KR("tensors",e,t,n))];case"Transpose":return[r.transpose(KR("x",e,t,n),KR("perm",e,t,n))];case"_FusedMatMul":let[a,s]=KR("fusedOps",e,t,n),i="biasadd"===a,o="prelu"===s,l=KR("numArgs",e,t,n),u=KR("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[h,p]=KR("args",e,t,n);return[r.fused.matMul({a:KR("a",e,t,n),b:KR("b",e,t,n),transposeA:KR("transposeA",e,t,n),transposeB:KR("transposeB",e,t,n),bias:h,activation:s,preluActivationWeights:p,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},ED=(e,t,n,r=rD)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(KR("x",e,t,n),KR("axis",e,t,n),KR("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(KR("x",e,t,n),KR("mean",e,t,n),KR("variance",e,t,n),KR("offset",e,t,n),KR("scale",e,t,n),KR("epsilon",e,t,n))];case"FusedBatchNormV3":return[r.batchNorm(KR("x",e,t,n),KR("mean",e,t,n),KR("variance",e,t,n),KR("offset",e,t,n),KR("scale",e,t,n),KR("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(KR("x",e,t,n),KR("radius",e,t,n),KR("bias",e,t,n),KR("alpha",e,t,n),KR("beta",e,t,n))];case"Softmax":return[r.softmax(KR("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(KR("x",e,t,n))];case"SparseToDense":return[r.sparseToDense(KR("sparseIndices",e,t,n),KR("outputShape",e,t,n),KR("sparseValues",e,t,n),KR("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},$D=(e,t,n,r=rD)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:a,outputDenseValues:s}=r.raggedGather(KR("paramsNestedSplits",e,t,n),KR("paramsDenseValues",e,t,n),KR("indices",e,t,n),KR("outputRaggedRank",e,t,n));return a.concat(s)}case"RaggedRange":{let{rtNestedSplits:a,rtDenseValues:s}=r.raggedRange(KR("starts",e,t,n),KR("limits",e,t,n),KR("splits",e,t,n));return[a,s]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(KR("shape",e,t,n),KR("values",e,t,n),KR("defaultValue",e,t,n),KR("rowPartitionTensors",e,t,n),KR("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},AD=(e,t,n,r=rD)=>{switch(e.op){case"Max":{let a=KR("axis",e,t,n),s=KR("keepDims",e,t,n);return[r.max(KR("x",e,t,n),a,s)]}case"Mean":{let a=KR("axis",e,t,n),s=KR("keepDims",e,t,n);return[r.mean(KR("x",e,t,n),a,s)]}case"Min":{let a=KR("axis",e,t,n),s=KR("keepDims",e,t,n);return[r.min(KR("x",e,t,n),a,s)]}case"Sum":{let a=KR("axis",e,t,n),s=KR("keepDims",e,t,n);return[r.sum(KR("x",e,t,n),a,s)]}case"All":{let a=KR("axis",e,t,n),s=KR("keepDims",e,t,n);return[r.all(KR("x",e,t,n),a,s)]}case"Any":{let a=KR("axis",e,t,n),s=KR("keepDims",e,t,n);return[r.any(KR("x",e,t,n),a,s)]}case"ArgMax":{let a=KR("axis",e,t,n);return[r.argMax(KR("x",e,t,n),a)]}case"ArgMin":{let a=KR("axis",e,t,n);return[r.argMin(KR("x",e,t,n),a)]}case"Prod":{let a=KR("axis",e,t,n),s=KR("keepDims",e,t,n);return[r.prod(KR("x",e,t,n),a,s)]}case"Cumprod":{let a=KR("axis",e,t,n),s=KR("exclusive",e,t,n),i=KR("reverse",e,t,n);return[r.cumprod(KR("x",e,t,n),a,s,i)]}case"Cumsum":{let a=KR("axis",e,t,n),s=KR("exclusive",e,t,n),i=KR("reverse",e,t,n);return[r.cumsum(KR("x",e,t,n),a,s,i)]}case"Bincount":let a=KR("x",e,t,n),s=KR("weights",e,t,n),i=KR("size",e,t,n);return[r.bincount(a,s,i)];case"DenseBincount":{let a=KR("x",e,t,n),s=KR("weights",e,t,n),i=KR("size",e,t,n),o=KR("binaryOutput",e,t,n);return[r.denseBincount(a,s,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},RD=(e,t,n,r=rD)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=KR("n",e,t,n),s=KR("axis",e,t,n),i=KR("tensors",e,t,n);return i=i.slice(0,a),[r.concat(i,s)]}case"Gather":{let a=KR("x",e,t,n),s=KR("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{let a=KR("axis",e,t,n),s=KR("batchDims",e,t,n),i=KR("x",e,t,n),o=KR("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),a,s)]}case"Reverse":{let a=KR("dims",e,t,n),s=[];for(let e=0;e<a.length;e++)a[e]&&s.push(e);let i=KR("x",e,t,n);return[r.reverse(i,s)]}case"ReverseV2":{let a=KR("axis",e,t,n),s=KR("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{let a=KR("begin",e,t,n),s=KR("size",e,t,n);return[r.slice(KR("x",e,t,n),a,s)]}case"StridedSlice":{let a=KR("begin",e,t,n),s=KR("end",e,t,n),i=KR("strides",e,t,n),o=KR("beginMask",e,t,n),l=KR("endMask",e,t,n),u=KR("ellipsisMask",e,t,n),h=KR("newAxisMask",e,t,n),p=KR("shrinkAxisMask",e,t,n),d=KR("x",e,t,n);return[r.stridedSlice(d,a,s,i,o,l,u,h,p)]}case"Pack":return Bo((()=>{let a=KR("axis",e,t,n),s=KR("tensors",e,t,n),i=s[0].shape,o=r.squeeze(s[0]).shape,l=s.map((e=>{let t=Ra.arraysEqual(e.shape,i);if(!t&&!Ra.arraysEqual(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,i)}));return[r.stack(l,a)]}));case"Unpack":{let a=KR("axis",e,t,n),s=KR("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{let a=KR("reps",e,t,n);return[r.tile(KR("x",e,t,n),a)]}case"Split":case"SplitV":{let a=KR("axis",e,t,n),s=KR("numOrSizeSplits",e,t,n),i=KR("x",e,t,n);return r.split(i,s,a)}case"ScatterNd":{let a=KR("indices",e,t,n),s=KR("values",e,t,n),i=KR("shape",e,t,n);return[r.scatterND(a,s,i)]}case"GatherNd":{let a=KR("x",e,t,n),s=KR("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{let a=KR("sparseIndices",e,t,n),s=KR("outputShape",e,t,n),i=KR("sparseValues",e,t,n),o=KR("defaultValue",e,t,n);return[r.sparseToDense(a,i,s,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},FD=(e,t,n,r=rD)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(KR("indices",e,t,n),KR("values",e,t,n),KR("denseShape",e,t,n),KR("defaultValue",e,t,n));return[a,s,i,o]}case"SparseReshape":{let{outputIndices:a,outputShape:s}=r.sparse.sparseReshape(KR("inputIndices",e,t,n),KR("inputShape",e,t,n),KR("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(KR("data",e,t,n),KR("indices",e,t,n),KR("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(KR("data",e,t,n),KR("indices",e,t,n),KR("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},DD=(e,t,n,r=rD)=>{switch(e.op){case"FFT":return[r.fft(KR("x",e,t,n))];case"IFFT":return[r.ifft(KR("x",e,t,n))];case"RFFT":return[r.rfft(KR("x",e,t,n))];case"IRFFT":return[r.irfft(KR("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},MD=(e,t,n,r=rD)=>{switch(e.op){case"StringNGrams":{let{nGrams:a,nGramsSplits:s}=r.string.stringNGrams(KR("data",e,t,n),KR("dataSplits",e,t,n),KR("separator",e,t,n),KR("nGramWidths",e,t,n),KR("leftPad",e,t,n),KR("rightPad",e,t,n),KR("padWidth",e,t,n),KR("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{let{indices:a,values:s,shape:i}=r.string.stringSplit(KR("input",e,t,n),KR("delimiter",e,t,n),KR("skipEmpty",e,t,n));return[a,s,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(KR("input",e,t,n),KR("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},OD=(e,t,n,r=rD)=>{switch(e.op){case"Cast":return[r.cast(KR("x",e,t,n),KR("dtype",e,t,n))];case"ExpandDims":{let a=KR("axis",e,t,n);return[r.expandDims(KR("x",e,t,n),a)]}case"Squeeze":{let a=KR("axis",e,t,n);return[r.squeeze(KR("x",e,t,n),a)]}case"Reshape":return[r.reshape(KR("x",e,t,n),KR("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(KR("x",e,t,n),KR("padding",e,t,n),KR("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(KR("x",e,t,n),KR("padding",e,t,n),KR("constantValue",e,t,n))];case"SpaceToBatchND":{let a=KR("blockShape",e,t,n),s=KR("paddings",e,t,n);return[r.spaceToBatchND(KR("x",e,t,n),a,s)]}case"BatchToSpaceND":{let a=KR("blockShape",e,t,n),s=KR("crops",e,t,n);return[r.batchToSpaceND(KR("x",e,t,n),a,s)]}case"DepthToSpace":{let a=KR("blockSize",e,t,n),s=KR("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(KR("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo(KR("x",e,t,n),KR("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(KR("s0",e,t,n),KR("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function LD(e,t,n,r,a=Bo){let s=((e,t,n)=>{switch(e.category){case"arithmetic":return a((()=>aD(e,t,n)));case"basic_math":return a((()=>sD(e,t,n)));case"control":return gD(e,t,n);case"convolution":return a((()=>bD(e,t,n)));case"creation":return a((()=>xD(e,t,n)));case"dynamic":return vD(e,t,n);case"evaluation":return a((()=>kD(e,t,n)));case"image":return a((()=>TD(e,t,n)));case"graph":return a((()=>ID(e,t,n)));case"logical":return a((()=>CD(e,t,n)));case"matrices":return a((()=>_D(e,t,n)));case"normalization":return a((()=>ED(e,t,n)));case"ragged":return a((()=>$D(e,t,n)));case"reduction":return a((()=>AD(e,t,n)));case"slice_join":return a((()=>RD(e,t,n)));case"sparse":return a((()=>FD(e,t,n)));case"spectral":return a((()=>DD(e,t,n)));case"string":return a((()=>MD(e,t,n)));case"transformation":return a((()=>OD(e,t,n)));case"hash_table":return ND(e,t,n,r);case"custom":let s=jR(e.op);if(s&&s.customExecutor)return s.customExecutor(new nD(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Ra.isPromise(s)?s.then((e=>[].concat(e))):[].concat(s)}var zD=class{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function PD(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,u=Object.keys(e).map((e=>QR(e)[0])),h=[];null!=r&&(h=r.map((e=>QR(e.name)[0])));let p=[...t];for(;p.length>0;){let e=p.pop();if((GD(e)||HD(e)||jD(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===h.indexOf(e.name)){if(0===e.inputs.length){s.push(e.name);continue}e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),p.push(e))}))}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}function BD(e,t,n){let{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>QR(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));let l=new Set,u=[];for(;s.length>0;){let e=s.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&s.push(e)}))}return u}var WD=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],VD=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],UD=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function GD(e){return WD.indexOf(e.op)>=0}function HD(e){return VD.indexOf(e.op)>=0}function jD(e){return UD.indexOf(e.op)>=0}var qD=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new qD(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){let n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){let n=PD(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return BD(this.graph,this.weightMap,n)}cloneAndKeepTensor(e){if(null==e)return null;let t=e.clone();return Vo(t),t}cloneTensorList(e){return e?e.map((e=>this.cloneAndKeepTensor(e))):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map((e=>this.graph.nodes[QR(e)[0]])),a=t.map((e=>QR(e)[0])),s=a.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);let i=this.getCompilationKey(r,s),o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));try{this.keepIntermediateTensors=Je().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}let l={},u={};return Bo((()=>{let n=new zD(this.weightMap,l,u,this.functionExecutorMap),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{let[n,a]=QR(t),s=[];s[a]=e[t],r[n]=s,this.keepIntermediateTensors&&(this.clonedTensorsMap[n]=this.cloneTensorList(s))}));let s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){let t=o[e];if(!r[t.name]){let e=LD(t,r,n,this._resourceManager);if(Ra.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.keepIntermediateTensors&&(this.clonedTensorsMap[t.name]=this.cloneTensorList(e)),this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>XR(e,r,n)))}))}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"===t.category||-1!==s.indexOf(e)||(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){let t=YR(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){let t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},a={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Je().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}let s=new zD(this.weightMap,r,a,this.functionExecutorMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let i=await this.executeWithControlFlow(e,s,t,n),o=t.map((e=>XR(e,i,s))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),h=new Set([...l,...u,...this.weightIds]);return Object.values(i).forEach((e=>{e.forEach((e=>{e&&!e.isDisposed&&!h.has(e.id)&&e.dispose()}))})),null==this.parent&&s.dispose(h),o}async executeFunctionAsync(e,t,n){let r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let a=Object.keys(e),s=a.map((e=>this.graph.nodes[QR(e)[0]])),i=n.map((e=>QR(e)[0])),o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:h,syncInputs:p}=PD(e,o,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),c=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{let[n,r]=QR(t),a=[];a[r]=e[t],c[n]=a}));let f={},m=this.getFrozenTensorIds(c),g={};for(;d.length>0;){let e=this.processStack(s,d,t,c,g,m,i,f,l);await Promise.all(e)}null==h&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=o.filter((e=>!GD(e)&&!XR(e.name,c,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${u}]. ${e}`)}return c}processStack(e,t,n,r,a,s,i,o,l){let u=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let h="";if("Enter"===e.node.op&&KR("isConstant",e.node,r,n)&&([h]=ZR(e.node.name,n)),null==r[e.node.name]){let p=LD(e.node,r,n,this._resourceManager);h||([h]=ZR(e.node.name,n));let d=n.currentContext;Ra.isPromise(p)?u.push(p.then((u=>(r[h]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(u)),n.currentContext=d,this.checkTensorForDisposal(h,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l),u)))):(r[h]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(p)),this.checkTensorForDisposal(h,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{let[i]=ZR(e.name,n);a[i]||!s.has(e.name)||("Merge"===e.op?e.inputNames.some((e=>!!XR(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!XR(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{let n=e[t],[r]=QR(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));Ra.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&Ra.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;let r={};for(let a in e){let s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[a];null!=s?r[s.name]=e[a]:r[a]=e[a]}return r}checkInputs(e){let t=Object.keys(e).filter((e=>{let[t]=QR(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;let r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{let[t]=QR(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},KD=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},XD="?tfjs-format=file",YD="model.json",ZD=class{constructor(e,t={},n=zb){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new KD}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return Ra.isPromise(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new qD(BF.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=BF.Instance.transformGraph(e.modelInitializer);this.initializer=new qD(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){let t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t=e instanceof Ts?[e]:e,n={};return t.forEach(((e,t)=>n[this.structuredOutputKeys[t]]=e)),n}return e}predict(e,t){let n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){let n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof Ts)&&!Array.isArray(e)){let n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(let t in n){let r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];let n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var a,s,i;let o=null===(i=null===(s=null===(a=this.signature)||void 0===a?void 0:a.inputs)||void 0===s?void 0:s[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){let a=n[r],s=t[a];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Wo(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function JD(e,t={},n=zb){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=eM(e));let r=new ZD(e,t,n);return await r.load(),r}function QD(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){let[n,r]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!r||!(r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");let a=zb.getWeightSpecs(n.weightsManifest),s=zb.getModelArtifactsForJSONSync(n,a,r);t=zb.fromMemorySync(s)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=zb.fromMemorySync(e)}let n=new ZD(t);return n.load(),n}function eM(e){return e.endsWith("/")||(e+="/"),`${e}${YD}${XD}`}var tM="4.2.0",nM={};C(nM,{CSVDataset:()=>QM,Dataset:()=>BM,FileDataSource:()=>cO,TextLineDataset:()=>jM,URLDataSource:()=>fO,array:()=>VM,csv:()=>mO,func:()=>gO,generator:()=>yO,microphone:()=>xO,version_data:()=>wO,webcam:()=>bO,zip:()=>UM});var rM=E(W()),aM=E(W());function sM(e,t){return iM(e,t)}function iM(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(pM(e)){let a=Array.isArray(e)?[]:{};r.add(e);for(let s in e){let i=e[s],o=iM(i,t,n,r);a[s]=o}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function oM(e,t=uM){return lM(e,t)}function lM(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(pM(r)){let a=Array.isArray(r)?[]:{};n.add(r);for(let s in r){let r=e.map((e=>e[s])),i=lM(r,t,n);a[s]=i}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function uM(e){return null===e?null:pM(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function hM(e,t){let n=new Map;iM(e,t,n);for(let r of Array.from(n.keys())){let e=n.get(r);if(Ra.isPromise(e)){let t=await e;n.set(r,t)}}return iM(e,t,n)}function pM(e){let t=!1;if(Je().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=V();t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Ts)&&!(e instanceof Promise)&&!t)}function dM(e){return null==e||cM(e)||Array.isArray(e)||"object"==typeof e&&e instanceof Ts||Ra.isTypedArray(e)}function cM(e){return null===e||"object"!=typeof e&&"function"!=typeof e}function fM(e){return sM(e,mM)}function mM(e){return e instanceof Ts?{value:e.clone(),recurse:!1}:pM(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var gM=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},yM=class extends gM{constructor(){super(yM.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};function bM(e){return new SM(e)}function xM(e){return new NM(e)}function wM(e,t){return new OM(e,t)}function vM(e,t=kM.FAIL){return new LM(e,t)}yM.INITIAL_CAPACITY=32;var kM,IM=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new RM(this,e)}filter(e){return new $M(this,e)}map(e){return new AM(this,e)}mapAsync(e){return new FM(this,e)}serialMapAsync(e){return new FM(this,e).serial()}flatmap(e){return new MM(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new EM(this,e,t)}columnMajorBatch(e,t=!0,n=uM){return this.rowMajorBatch(e,t).map((e=>oM(e,n)))}concatenate(e,t){return new OM(bM([this,e]),t)}take(e){return e<0||null==e?this:new _M(this,e)}skip(e){return e<0||null==e?this:new CM(this,e)}prefetch(e){return new zM(this,e)}shuffle(e,t){return new PM(this,e,t)}serial(){return new TM(this)}},SM=class extends IM{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:fM(e),done:!1}}},NM=class extends IM{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(Use){throw Use.message=`Error thrown while iterating through a dataset: ${Use.message}`,Use}}},TM=class extends IM{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}},CM=class extends IM{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Wo(e.value)}return this.upstream.next()}},_M=class extends IM{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},EM=class extends IM{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},$M=class extends IM{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Wo(e.value)}}},AM=class extends IM{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ds.getTensorsInContainer(e.value),n=this.transform(e.value),r=Ds.getTensorsInContainer(n);for(let a of t)Ds.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}},RM=class extends IM{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(Use){if(!this.handler(Use))return{value:null,done:!0}}}},FM=class extends IM{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ds.getTensorsInContainer(e.value),n=await this.transform(e.value),r=Ds.getTensorsInContainer(n);for(let a of t)Ds.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}},DM=class extends IM{constructor(){super(),this.outputQueue=new yM,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},MM=class extends DM{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Ds.getTensorsInContainer(e.value),n=this.transform(e.value),r=Ds.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let a of t)Ds.isTensorInList(a,r)||a.dispose();return!0}},OM=class extends IM{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){let e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}};(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(kM||(kM={}));var LM=class extends IM{constructor(e,t=kM.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function r(e){return e instanceof IM?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}let a=await hM(this.iterators,r);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case kM.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case kM.SHORTEST:return{value:null,done:!0};case kM.LONGEST:default:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},zM=class extends IM{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new gM(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},PM=class extends zM{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=aM.alea(n||Ra.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},BM=class{constructor(){this.size=null}batch(e,t=!0){let n,r=this;return Ra.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),n=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),WM((async()=>(await r.iterator()).columnMajorBatch(e,t,GM)),n)}concatenate(e){let t,n=this;return t=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,WM((async()=>(await n.iterator()).concatenate(await e.iterator())),t)}filter(e){let t,n=this;return t=this.size===1/0?1/0:null,WM((async()=>(await n.iterator()).filter((t=>Bo((()=>e(t)))))),t)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return WM((async()=>(await t.iterator()).map((t=>Bo((()=>e(t)))))),this.size)}mapAsync(e){let t=this;return WM((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return WM((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){let t,n=this;return t=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,WM((async()=>{let t=xM((async()=>({value:await n.iterator(),done:!1})));return wM(t.take(e))}),t)}skip(e){let t,n=this;return t=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,WM((async()=>(await n.iterator()).skip(e)),t)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=rM.alea(t||Ra.now().toString());return WM((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){let t,n=this;return t=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,WM((async()=>(await n.iterator()).take(e)),t)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function WM(e,t=null){return new class extends BM{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function VM(e){return WM((async()=>bM(e)),e.length)}function UM(e){if(!pM(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return WM((async()=>{let t=await hM(e,(e=>{if(e instanceof BM)return{value:e.iterator(),recurse:!1};if(pM(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")}));return vM(t,kM.SHORTEST)}),t)}function GM(e){if(null===e)return null;let t=e[0];return dM(t)?{value:HM(e),recurse:!1}:{value:null,recurse:!0}}function HM(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ts?xm(e):fi(e)}BM.MAX_BUFFER_SIZE=1e4;var jM=class extends BM{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}},qM='"',KM=Symbol("out"),XM=Symbol("field"),YM=Symbol("quote"),ZM=Symbol("quoteafterquote"),JM=Symbol("quoteinquote"),QM=class extends BM{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new jM(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(Ra.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&Ra.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(Ra.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(let r of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(r))throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){let o=t[a],l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o);break;default:l=e}else l=e}i&&i.isLabel?r[s]=l:n[s]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){let n=[],r=0,a=e.length,s=KM;for(let i=0;i<a;i++)switch(s){case KM:switch(e.charAt(i)){case qM:r=i+1,s=YM;break;case this.delimiter:if(r=i+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=KM;break;default:s=XM,r=i;break}break;case XM:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i)),s=KM,r=i+1;break;default:}break;case YM:switch(e.charAt(i)){case qM:s=ZM;break;default:}break;case ZM:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i-1)),s=KM,r=i+1;break;case qM:s=YM;break;default:s=JM;break}break;case JM:switch(e.charAt(i)){case qM:s=YM;break;default:}break;default:}if(s===ZM?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},eO=class extends IM{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!Je().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new eO(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise((r=>{let a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(Ra.sizeFromShape(t));return n.set(e,n.length-e.length),fi(n,t)}},tO=class extends IM{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Tm([0],"int32"),this.webcamConfig.centerCrop){let e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=Cm([r,n,s,a],[1,4])}else this.cropBox=Cm([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!Je().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new tO(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&Ra.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(Use){throw Use.message=`Error thrown while initializing video stream: ${Use.message}`,Use}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(Use){console.log(Use),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=yx.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Bo((()=>{let t,n=xp(Co(e,"float32"),0);t=xb.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=t.shape;return Ql(t,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(Use){console.log(Use),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},nO=class{},rO=class extends IM{split(e){return new aO(this,e)}},aO=class extends rO{constructor(e,t){super(),this.upstream=e,this.impl=new sO(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},sO=class extends DM{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},iO=class extends IM{decodeUTF8(){return new oO(this)}},oO=class extends rO{constructor(e){super(),this.upstream=e,this.impl=new lO(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},lO=class extends DM{constructor(e){if(super(),this.upstream=e,Je().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=V();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e,t,n=await this.upstream.next();return!n.done&&(e=n.value,t=Je().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(t),!0)}},uO=class extends iO{constructor(e,t={}){super(),this.file=e,this.options=t,Ra.assert(e instanceof Uint8Array||!!Je().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise(((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n})),done:!1}}};async function hO(e,t={},n){let r,a;"string"==typeof e?r=e:(r=e.url,a=pO(e));let s=await(n||Ra.fetch)(r,a);if(s.ok){let e=new Uint8Array(await s.arrayBuffer());return new uO(e,t)}throw new Error(s.statusText)}var pO=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function dO(e){return"string"==typeof e&&"file://"===e.slice(0,7)}var cO=class extends nO{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(dO(this.input)&&Je().get("IS_NODE")){let e=U();this.input=e.readFileSync(this.input.slice(7))}return new uO(this.input,this.options)}},fO=class extends nO{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return dO(this.url)?new cO(this.url,this.fileOptions).iterator():hO(this.url,this.fileOptions)}};function mO(e,t={}){return new QM(new fO(e),t)}function gO(e){let t=xM(e);return WM((async()=>t))}function yO(e){return WM((async()=>{let t=await e();return xM((()=>t.next()))}))}async function bO(e,t){return tO.create(e,t)}async function xO(e){return eO.create(e)}var wO="4.2.0";function vO(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Ra.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var kO=ov.whereImpl,IO=class extends J{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Z(this,Lo())}nextDataId(){return IO.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Je().get("IS_NODE")&&tw.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Ra.isString(n[0])){let a=n.map((e=>Ra.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return tw.mergeRealAndImagArrays(e,t)}return Ra.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map((e=>Ra.decodeString(e)));return No(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return No(e.shape,e.dtype,t)}makeOutput(e,t,n){return Lo().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=Ra.now();return e(),{kernelMs:Ra.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){vO([e],"where");let t=this.readSync(e.dataId);return kO(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};IO.nextDataId=0;var SO={};function NO(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}C(SO,{addImpl:()=>WO,bincountImpl:()=>HO,bincountReduceImpl:()=>jO,castImpl:()=>OO,ceilImpl:()=>YO,concatImpl:()=>QO,equalImpl:()=>eL,expImpl:()=>rL,expm1Impl:()=>iL,floorImpl:()=>uL,gatherNdImpl:()=>dL,gatherV2Impl:()=>cL,greaterEqualImpl:()=>yL,greaterImpl:()=>fL,lessEqualImpl:()=>IL,lessImpl:()=>wL,linSpaceImpl:()=>TL,logImpl:()=>CL,maxImpl:()=>$L,maximumImpl:()=>AL,minimumImpl:()=>DL,multiplyImpl:()=>LL,negImpl:()=>WL,notEqualImpl:()=>GL,prodImpl:()=>YL,raggedGatherImpl:()=>iz,raggedRangeImpl:()=>lz,raggedTensorToTensorImpl:()=>cz,rangeImpl:()=>fz,rsqrtImpl:()=>mz,scatterImpl:()=>bz,sigmoidImpl:()=>xz,simpleAbsImpl:()=>NO,sliceImpl:()=>kz,sparseFillEmptyRowsImpl:()=>Nz,sparseReshapeImpl:()=>Tz,sparseSegmentReductionImpl:()=>Cz,sqrtImpl:()=>_z,squaredDifferenceImpl:()=>Az,stridedSliceImpl:()=>Dz,stringNGramsImpl:()=>Oz,stringSplitImpl:()=>zz,stringToHashBucketFastImpl:()=>Pz,subImpl:()=>Bz,tileImpl:()=>Gz,topKImpl:()=>qz,transposeImpl:()=>qL,uniqueImpl:()=>Kz});var TO=e=>{let{x:t}=e.inputs,n=e.backend;vO(t,"abs");let r=new Float32Array(Ra.sizeFromShape(t.shape)),a=n.data.get(t.dataId).values;return r=NO(a),n.makeOutput(r,t.shape,t.dtype)},CO={kernelName:st,backendName:"cpu",kernelFunc:TO};function _O(e){return(t,n,r,a,s)=>{let i=tw.assertAndGetBroadcastShape(t,n),o=i.length,l=Ra.computeStrides(i),u=Ra.sizeFromShape(i),h=Ra.getTypedArrayFromDType(s,u),p=t.length,d=n.length,c=Ra.computeStrides(t),f=Ra.computeStrides(n),m=tw.getBroadcastDims(t,i),g=tw.getBroadcastDims(n,i);if(m.length+g.length===0)for(let y=0;y<h.length;++y)h[y]=e(r[y%r.length],a[y%a.length]);else for(let y=0;y<h.length;++y){let t=Ra.indexToLoc(y,o,l),n=t.slice(-p);m.forEach((e=>n[e]=0));let s=Ra.locToIndex(n,p,c),i=t.slice(-d);g.forEach((e=>i[e]=0));let u=Ra.locToIndex(i,d,f);h[y]=e(r[s],a[u])}return[h,i]}}function EO(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64"),l=n.data.get(o.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var $O={kernelName:At,backendName:"cpu",kernelFunc:EO};function AO(e,t,n="float32"){if("complex64"===n){let n=AO(e,t,"float32"),r=AO(e,t,"float32");return EO({inputs:{real:n,imag:r},backend:e})}let r=Ra.makeZerosTypedArray(Ra.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function RO(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var FO={kernelName:wn,backendName:"cpu",kernelFunc:RO};function DO(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var MO={kernelName:yr,backendName:"cpu",kernelFunc:DO};function OO(e,t,n,r){if("int32"===r){let n=Int32Array.from(e);return[t,"int32",n]}if("bool"===r){let r=Ra.toTypedArray([0],n),[a,s]=_O(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[s,"bool",a]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function LO(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return RO({inputs:{x:a},backend:n});let e=AO(n,a.shape,a.dtype),t=LO({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=EO({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){let e=DO({inputs:{input:a},backend:n}),t=LO({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!Ra.hasEncodingLoss(a.dtype,s)){let e=RO({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}let i=n.data.get(a.dataId).values,[o,l,u]=OO(i,a.shape,a.dtype,s);return n.makeTensorInfo(o,l,u)}var zO={kernelName:_t,backendName:"cpu",kernelFunc:LO};function PO(e,t,n,r){return null==n?({inputs:n,backend:a})=>{let{a:s,b:i}=n,o=a;vO([s,i],e);let l=o.data.get(s.dataId).values,u=o.data.get(i.dataId).values,h="string"===s.dtype?tw.fromUint8ToStringArray(l):l,p="string"===s.dtype?tw.fromUint8ToStringArray(u):u,d=r||s.dtype,[c,f]=t(s.shape,i.shape,h,p,d);return o.makeTensorInfo(f,d,c)}:({inputs:e,backend:a})=>{let{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){let e=LO({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(a.dataId).values,h=LO({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),p=o.data.get(h.dataId),d=p.complexTensorInfos.real,c=p.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(c.dataId).values,[g,y,b]=n(s.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=EO({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(h),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{let e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[l,u]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(u,a,l)}}}function BO(e){return(t,n,r,a,s,i)=>{let o=tw.assertAndGetBroadcastShape(t,n),l=Ra.sizeFromShape(o),u=o.length,h=Ra.computeStrides(o),p=Ra.getTypedArrayFromDType("float32",l),d=Ra.getTypedArrayFromDType("float32",l),c=tw.getBroadcastDims(t,o),f=tw.getBroadcastDims(n,o),m=tw.mergeRealAndImagArrays(r,a),g=tw.mergeRealAndImagArrays(s,i),y=t.length,b=Ra.computeStrides(t),x=n.length,w=Ra.computeStrides(n);if(c.length+f.length===0)for(let v=0;v<p.length;v++){let t=v%m.length,n=v%g.length,r=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);p[v]=r.real,d[v]=r.imag}else for(let v=0;v<p.length;v++){let t=Ra.indexToLoc(v,u,h),n=t.slice(-y);c.forEach((e=>n[e]=0));let r=Ra.locToIndex(n,y,b),a=t.slice(-x);f.forEach((e=>a[e]=0));let s=Ra.locToIndex(a,x,w),i=e(m[2*r],m[2*r+1],g[2*s],g[2*s+1]);p[v]=i.real,d[v]=i.imag}return[p,d,o]}}var WO=_O(((e,t)=>e+t)),VO=BO(((e,t,n,r)=>({real:e+n,imag:t+r}))),UO=PO(lt,WO,VO),GO={kernelName:lt,backendName:"cpu",kernelFunc:UO};function HO(e,t,n,r,a){let s=Ra.sizeFromShape(r),i=Ra.makeZerosTypedArray(a,n);for(let o=0;o<e.length;o++){let n=e[o];if(n<0)throw new Error("Input x must be non-negative!");n>=a||(i[n]+=s>0?t[o]:1)}return i}function jO(e,t,n,r=!1){let a=e.shape[0],s=e.shape[1],i=No([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){let s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}function qO(e){return(t,n,r)=>{let a=Ra.getTypedArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)a[s]=e(t[s],r);return a}}function KO(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;if(vO(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=Ra.sizeFromShape(i.shape),h=n||i.dtype,p=Ra.getArrayFromDType(h,u);for(let e=0;e<u;++e)p[e]=t(l[e],a);return o.makeTensorInfo(i.shape,h,p)}}function XO(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;if(vO(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=n||i.dtype,h=t(l,u,a);return o.makeTensorInfo(i.shape,u,h)}}var YO=qO((e=>Math.ceil(e))),ZO=XO(Et,YO),JO={kernelName:Et,backendName:"cpu",kernelFunc:ZO};function QO(e,t,n,r){let a=Ra.getArrayFromDType(n,Ra.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{let n=Ra.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{let s="string"===n?tw.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}var eL=_O(((e,t)=>e===t?1:0)),tL=PO(sn,eL,null,"bool"),nL={kernelName:sn,backendName:"cpu",kernelFunc:tL},rL=qO((e=>Math.exp(e))),aL=XO(on,rL,"float32"),sL={kernelName:on,backendName:"cpu",kernelFunc:aL},iL=qO((e=>Math.expm1(e))),oL=XO(un,iL),lL={kernelName:un,backendName:"cpu",kernelFunc:oL},uL=qO((e=>Math.floor(e))),hL=XO(cn,uL),pL={kernelName:cn,backendName:"cpu",kernelFunc:hL};function dL(e,t,n,r,a,s,i,o,l){let u=No([r,s],n);for(let h=0;h<r;h++){let n=[],r=0;for(let t=0;t<a;t++){let s=e[h*a+t];r+=s*i[t],n.push(s)}if(r<0||r>=l/s)throw new Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<s;e++)u.values[h*s+e]=t.get(...t.indexToLoc(r*s+e))}return u}function cL(e,t,n){let r=No(n,e.dtype);for(let a=0;a<r.size;++a){let n=r.indexToLoc(a).slice(),s=n[0],i=n[2],o=t.locToIndex([s,i]);n[2]=t.values[o];let l=e.locToIndex(n);0<=l&&l<e.values.length&&(r.values[a]=e.values[l])}return r}var fL=_O(((e,t)=>e>t?1:0)),mL=PO(bn,fL,null,"bool"),gL={kernelName:bn,backendName:"cpu",kernelFunc:mL},yL=_O(((e,t)=>e>=t?1:0)),bL=PO(xn,yL,null,"bool"),xL={kernelName:xn,backendName:"cpu",kernelFunc:bL},wL=_O(((e,t)=>e<t?1:0)),vL=PO(Cn,wL,null,"bool"),kL={kernelName:Cn,backendName:"cpu",kernelFunc:vL},IL=_O(((e,t)=>e<=t?1:0)),SL=PO(_n,IL,null,"bool"),NL={kernelName:_n,backendName:"cpu",kernelFunc:SL};function TL(e,t,n){let r=(t-e)/(n-1),a=Ra.makeZerosTypedArray(n,"float32");a[0]=e;for(let s=1;s<a.length;s++)a[s]=a[s-1]+r;return a}var CL=qO((e=>Math.log(e))),_L=XO($n,CL),EL={kernelName:$n,backendName:"cpu",kernelFunc:_L};function $L(e,t,n,r){let a=Ra.getTypedArrayFromDType(r,Ra.sizeFromShape(n));for(let s=0;s<a.length;++s){let n=s*t,r=e[n];for(let a=0;a<t;++a){let t=e[n+a];(Number.isNaN(t)||t>r)&&(r=t)}a[s]=r}return a}var AL=_O(((e,t)=>Math.max(e,t))),RL=PO(Wn,AL),FL={kernelName:Wn,backendName:"cpu",kernelFunc:RL},DL=_O(((e,t)=>Math.min(e,t))),ML=PO(Xn,DL),OL={kernelName:Xn,backendName:"cpu",kernelFunc:ML},LL=_O(((e,t)=>e*t)),zL=BO(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),PL=PO(Qn,LL,zL),BL={kernelName:Qn,backendName:"cpu",kernelFunc:PL};function WL(e,t,n){let r=Ra.createScalarValue(-1,n);return LL([],t,r,e,n)}function VL(e){let{inputs:t,backend:n}=e,{x:r}=t;vO(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=WL(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}var UL={kernelName:er,backendName:"cpu",kernelFunc:VL},GL=_O(((e,t)=>e!==t?1:0)),HL=PO(tr,GL,null,"bool"),jL={kernelName:tr,backendName:"cpu",kernelFunc:HL};function qL(e,t,n,r,a){let s=t.length,i=Ra.sizeFromShape(t),o=Ra.computeStrides(t),l=Ra.computeStrides(a),u=Ra.getTypedArrayFromDType(n,Ra.sizeFromShape(a));for(let h=0;h<i;++h){let t=Ra.indexToLoc(h,s,o),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];let a=Ra.locToIndex(n,s,l);u[a]=e[h]}return u}function KL(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;vO(a,"transpose");let i=a.shape.length,o=new Array(i);for(let h=0;h<o.length;h++)o[h]=a.shape[s[h]];let l=r.data.get(a.dataId).values,u=qL(l,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}var XL={kernelName:oa,backendName:"cpu",kernelFunc:KL};function YL(e,t,n,r){let[a,s]=tw.computeOutAndReduceShapes(e,r),i=Os(t,"int32"),o=Ra.makeZerosTypedArray(Ra.sizeFromShape(a),i),l=Ra.sizeFromShape(s);for(let u=0;u<o.length;++u){let e=u*l,t=1;for(let r=0;r<l;++r)t*=n[e+r];o[u]=t}return{outVals:o,outShape:a,outDtype:i}}function ZL(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;vO(a,"prod");let o=a.shape.length,l=Ra.parseAxisParam(s,a.shape),u=tw.getAxesPermutation(l,o),h=l,p=a,d=[];null!=u&&(p=KL({inputs:{x:a},backend:n,attrs:{perm:u}}),d.push(p),h=tw.getInnerMostAxes(h.length,o));let c=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=YL(p.shape,p.dtype,c,h),y=m;return i&&(y=tw.expandShapeToKeepDim(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}var JL={kernelName:dr,backendName:"cpu",kernelFunc:ZL};function QL(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){let a=Ra.indexToLoc(r,t.length,Ra.computeStrides(t)).join(",");throw new Error(`indices[${a}] = ${e} is not in [0, ${n})`)}}))}function ez(e,t){for(let n=0;n<e.length;++n){let r=e[n],a=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}function tz(e,t,n,r){let a=[],s=0,i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));ez(n,r);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];let e=t[u+1];for(let t=1;t<l+1;++t)o[u].push(t*e)}for(let u=0;u<e.length;++u){let r=e[u],i=e[u]+1;for(let e=0;e<n.length;++e){let a=n[e],s=e+t.length-1;if(s>=0){let e=o[s],t=e[e.length-1]-a[r];for(let n=r;n<i;++n)o[s].push(a[n+1]+t)}r=a[r],i=a[i]}i!==r&&(a.push([r,i]),s+=i-r)}return{outSplits:o,valueSlices:a,numValues:s}}function nz(e){let t=[];for(let n=0;n<e.length;++n){let r=e[n].length,a=Ra.getArrayFromDType("int32",r);t.push(a),e[n].forEach(((e,t)=>a[t]=e))}return t}function rz(e,t){let n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function az(e,t,n,r,a,s){let i=rz(t,2)[1],o=rz(s,2)[1],l=0;for(let u of n)for(let t=u[0];t<u[1];++t){for(let n=0;n<r;++n)a[l*o+n]=e[t*i+n];++l}}function sz(e,t,n,r,a){let s=t.slice();s[0]=a;let i=Ra.getArrayFromDType(n,Ra.sizeFromShape(s)),o=e.length,l=0===o?0:o/t[0];return az(e,t,r,l,i,s),[i,s]}function iz(e,t,n,r,a,s,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");let l=t[0][0]-1;if(QL(s,i,l),0===r.length)throw new Error("params.rank must be nonzero");let u=r[0],{outSplits:h,valueSlices:p,numValues:d}=tz(s,i,e,u),c=nz(h),f=sz(n,r,a,p,d);return[c,f[0],f[1]]}var oz=2147483647;function lz(e,t,n,r,a,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let o=0===t.length,l=0===a.length,u=0===i.length,h=[];o||h.push(t[0]),l||h.push(a[0]),u||h.push(i[0]);for(let g=1;g<h.length;++g)if(h[g]!==h[g-1])throw new Error("starts, limits, and deltas must have the same shape");let p=0===h.length?1:h[0],d=Ra.getArrayFromDType("int32",p+1);d[0]=0;for(let g=0;g<p;++g){let t,n=o?e[0]:e[g],a=l?r[0]:r[g],i=u?s[0]:s[g];if(0===i)throw new Error("Requires delta != 0");if(i>0&&a<n||i<0&&a>n)t=0;else if(t=Math.ceil(Math.abs((a-n)/i)),t>oz)throw new Error(`Requires ((limit - start) / delta) <= ${oz}`);d[g+1]=d[g]+t}let c=d[p],f=Ra.getArrayFromDType(n,c),m=0;for(let g=0;g<p;++g){let t=d[g+1]-d[g],n=o?e[0]:e[g],r=u?s[0]:s[g];for(let e=0;e<t;++e)f[m++]=n,n+=r}return[d,f]}var uz=tw.RowPartitionType,hz=class{constructor(e,t,n,r,a,s,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=a,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=tw.getRowPartitionTypesHelper(u),this.raggedRank=tw.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===uz.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===uz.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case uz.VALUE_ROWIDS:return hz.getMaxWidthValueRowID(t);case uz.ROW_SPLITS:return hz.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${uz[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){let t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){let t=e.length;if(0===t)return 0;let n=0,r=e[0],a=0;for(let s=1;s<t;++s){let t=e[s];t!==r&&(r=t,a=Math.max(s-n,a),n=s)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return dz(e,n)}calculateOutputSize(e){let t=this.valuesShape,n=this.defaultValueShape;tw.validateDefaultValueShape(n,t);let r=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=tw.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);a[0]<0&&(a[0]=e);for(let s=1;s<=this.raggedRank;++s)a[s]<0&&(a[s]=this.getMaxWidth(s));return a}calculateFirstParentOutputIndex(e,t,n){let r=Math.min(e,n),a=[],s=0;for(let i=0;i<r;++i,s+=t)a.push(s);for(let i=r;i<e;++i)a.push(-1);return Ra.assert(a.length===e,(()=>"Final length of result must be equal to firstDimension.")),a}calculateOutputIndexRowSplit(e,t,n,r){let a=e.length,s=[];for(let i=0;i<a-1;++i){let a=e[i+1]-e[i],o=Math.min(r,a),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)s.push(l),l+=n;for(let e=0;e<a-o;++e)s.push(-1)}if(a>0&&s.length!==e[a-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,r){let a=e.length,s=[];if(0===a)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];s.push(l);for(let u=1;u<a;++u){let a=e[u];if(a===o)l>=0&&(++i,i<r?l+=n:l=-1);else{if(i=0,o=a,a>=t.length)throw new Error(`Got nextValueRowId=${a} which is not less than ${t.length}`);l=t[a]}s.push(l)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,r){let a=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case uz.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case uz.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw new Error(`Unsupported partition type: ${uz[s]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case uz.FIRST_DIM_SIZE:return e[0];case uz.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case uz.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${uz[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let s=n.length-2;s>=0;--s)n[s]=n[s+1]*t[s+1];let r=dz(t,!1),a=Ra.getArrayFromDType(this.valuesDType,Ra.sizeFromShape(r));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)s=this.calculateOutputIndex(e-1,s,n[e],t[e]);this.setOutput(this.raggedRank,s,a,r)}return[r,a]}setOutput(e,t,n,r){if(0===n.length)return;let a=this.values,s=n,i=r.slice();i=i.slice(e+1);let o=Ra.sizeFromShape(i),l=t.length,u=this.defaultValue;if(u.length!==o&&1!==u.length){let e=this.defaultValueShape;Bo((()=>{let t=Ql(u,e);u=Ru(t,i).dataSync()}))}let h=0,p=0,d=0;for(let c=0;c<=l;++c){let e=c<l?t[c]:-1;if(e!==d){if(p<d){let e=a.subarray(h*o),t=s.subarray(p*o),n=(d-p)*o;pz(t,e,n)}if(c>=l){let t=n.length;e=Math.floor(t/o)}if(e>d)if(1===this.defaultValue.length)s.subarray(d*o,e*o).fill(this.defaultValue[0]),d=e;else for(;e>d;){let e=s.slice(d*o);pz(e,u,o),++d}e<0?(h=c+1,p=d):(h=c,p=d,d=p+1)}else++d}}};function pz(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function dz(e,t){let n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function cz(e,t,n,r,a,s,i,o,l,u){return new hz(e,t,n,r,a,s,i,o,l,u).compute()}function fz(e,t,n,r){let a=e===t,s=e<t&&n<0,i=t<e&&n>1;if(a||s||i)return Ra.makeZerosTypedArray(0,r);let o=Math.abs(Math.ceil((t-e)/n)),l=Ra.makeZerosTypedArray(o,r);t<e&&1===n&&(n=-1),l[0]=e;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}var mz=qO((e=>1/Math.sqrt(e))),gz=XO(_r,mz),yz={kernelName:_r,backendName:"cpu",kernelFunc:gz};function bz(e,t,n,r,a,s,i,o,l,u){let h=[r/a,a],p=e.values,d=t.values;if(0===r)return No(n,t.dtype);let c=No(h,t.dtype);"string"==typeof l||"number"==typeof l?c.values.fill(l):"boolean"==typeof l&&c.values.fill(+l);for(let f=0;f<s;f++){let e=[],s=0;for(let t=0;t<i;t++){let n=p[f*i+t];e.push(n),s+=n*o[t]}if(s<0||s>=r/a)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<a;n++)u?c.values[s*a+n]+=d[f*a+n]:c.values[s*a+n]=0===t.rank?d[0]:d[f*a+n]}return c}var xz=qO((e=>1/(1+Math.exp(-e)))),wz=KO(Lr,(e=>1/(1+Math.exp(-e)))),vz={kernelName:Lr,backendName:"cpu",kernelFunc:wz};function kz(e,t,n,r,a){let s=_x.isSliceContinous(r,t,n),i=Ra.sizeFromShape(n),o=Ra.computeStrides(r);if(s){let n=_x.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}let l="string"===a?tw.fromUint8ToStringArray(e):e,u=No(r,a,l),h=No(n,a);for(let p=0;p<h.size;++p){let e=h.indexToLoc(p),n=e.map(((e,n)=>e+t[n]));h.set(u.get(...n),...e)}return"string"===a?tw.fromStringArrayToUint8(h.values):h.values}function Iz(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;vO(a,"slice");let[o,l]=_x.parseSliceParams(a,s,i);_x.assertParamsValid(a,o,l);let u=n.data.get(a.dataId).values,h=kz(u,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,h)}var Sz={kernelName:Fr,backendName:"cpu",kernelFunc:Iz};function Nz(e,t,n,r,a,s,i){let o=t[0],l=s[0],u=new Array(l),h=new Array(o),p=t[1];if(0===l){if(0!==o)throw new Error(tw.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let e=Ra.getArrayFromDType(n,0),t=Ra.getArrayFromDType(a,0);return[e,[0,p],t,u,h]}let d=!0,c=0,f=new Array(l).fill(0);for(let g=0;g<o;++g){let t=e[g*p];if(t<0)throw new Error(tw.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,t));if(t>=l)throw new Error(tw.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,t,l));++f[t],d=d&&t>=c,c=t}let m=!0;for(let g=0;g<l;++g){let e=0===f[g];u[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){let t=e,n=r;for(let e=0;e<o;++e)h[e]=e;return[t,[o,p],n,u,h]}{let t=f[l-1],s=Ra.getArrayFromDType(n,t*p),d=Ra.getArrayFromDType(a,t),c=new Array(l).fill(0);for(let n=0;n<o;++n){let t=e[n*p],a=c[t],i=(0===t?0:f[t-1])+a;c[t]++;for(let r=0;r<p;++r)s[i*p+r]=e[n*p+r];d[i]=r[n],h[n]=i}for(let e=0;e<l;++e)if(0===c[e]){let t=0===e?0:f[e-1];s[t*p+0]=e;for(let e=1;e<p;++e)s[t*p+e]=0;d[t]=i}return[s,[t,p],d,u,h]}}function Tz(e,t,n,r,a){let s=Ra.sizeFromShape(r),i=t[0],o=a.length,l=[],u=1,h=-1;for(let m=0;m<o;++m){let e=a[m];if(-1===e){if(-1!==h)throw new Error(tw.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(h,m));h=m,l.push(1)}else{if(e<0)throw new Error(tw.getSparseReshapeNegativeOutputDimErrorMessage(m,e));u*=e,l.push(e)}}if(-1!==h){if(u<=0)throw new Error(tw.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(s/u);if(u*e!==s)throw new Error(tw.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[h]=e}if(Ra.sizeFromShape(l)!==s)throw new Error(tw.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let p=r.length,d=[];if(p>0){d[p-1]=1;for(let e=p-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}let c=[];if(o>0){c[o-1]=1;for(let e=o-2;e>=0;--e)c[e]=c[e+1]*l[e+1]}let f=Ra.getArrayFromDType(n,i*o);for(let m=0;m<i;++m){let t=0;for(let n=0;n<p;++n)t+=e[m*p+n]*d[n];for(let e=0;e<o;++e)f[m*o+e]=Math.trunc(t/c[e]),t%=c[e]}return[f,[i,o],l]}function Cz(e,t,n,r,a,s=!1,i=0){let o=r.length,l=[t[0],e.length/t[0]],u=l[1],h=o>0?a[o-1]+1:0;if(h<0)throw new Error(tw.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=t.slice();p[0]=h;let d=p.reduce(((e,t)=>e*t),1),c=Ra.getArrayFromDType(n,d);if(0===o)return h>0&&c.fill(i),[c,p];if(h<=0)throw new Error(tw.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=a[f];for(;;){let t=0;if(m<o){if(t=a[m],y===t){++m;continue}if(y>=t)throw new Error(tw.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=h)throw new Error(tw.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,h));y>g&&c.fill(i,g*u,y*u);for(let n=f;n<m;++n){let t=r[n];if(t<0||t>=l[0])throw new Error(tw.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,r[n],l[0]));for(let n=0;n<u;n++)c[y*u+n]+=e[t*u+n]}if(s)for(let e=0;e<u;e++)c[y*u+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<h&&c.fill(i,g*u,h*u),[c,p]}var _z=qO((e=>Math.sqrt(e))),Ez=KO(Pr,(e=>Math.sqrt(e))),$z={kernelName:Pr,backendName:"cpu",kernelFunc:Ez},Az=_O(((e,t)=>{let n=e-t;return n*n})),Rz=PO(Xr,Az),Fz={kernelName:Xr,backendName:"cpu",kernelFunc:Rz};function Dz(e,t,n,r){let a=No(e,t.dtype);for(let s=0;s<a.size;s++){let e=a.indexToLoc(s),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+r[t];a.set(t.get(...i),...e)}return a}var Mz=class{constructor(e,t,n,r,a,s){this.separator=Ra.encodeString(e),this.nGramWidths=t,this.leftPad=Ra.encodeString(n),this.rightPad=Ra.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),h=s-(l+u),p=t+(l>0?0:i-o),d=0;d+=l*this.leftPad.length;for(let t=0;t<h;++t)d+=e[p+t].length;d+=u*this.rightPad.length;let c=l+u+h-1;d+=c*this.separator.length,n[r+i]=new Uint8Array(d);let f=n[r+i],m=0,g=e=>e.forEach((e=>f[m++]=e));for(let e=0;e<l;++e)g(this.leftPad),g(this.separator);for(let t=0;t<h-1;++t)g(e[p+t]),g(this.separator);if(h>0){g(e[p+h-1]);for(let e=0;e<u;++e)g(this.separator),g(this.rightPad)}else{for(let e=0;e<u-1;++e)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}let a=r-1,s=Ra.getArrayFromDType("int32",r);if(0===n||0===r){let e=new Array(n);for(let t=0;t<=a;++t)s[t]=0;return[e,s]}s[0]=0;for(let o=1;o<=a;++o){let e=t[o]-t[o-1],n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),s[o]=s[o-1]+n}let i=new Array(s[a]);for(let o=0;o<a;++o){let n=t[o],r=s[o];if(this.nGramWidths.forEach((a=>{let s=t[o+1]-t[o],l=this.getNumNGrams(s,a);this.createNGrams(e,n,i,r,l,a),r+=l})),this.preserveShort&&r===s[o]){let a=t[o+1]-t[o];if(0===a)continue;let s=a+2*this.padWidth,l=1;this.createNGrams(e,n,i,r,l,s)}}return[i,s]}};function Oz(e,t,n,r,a,s,i,o){return new Mz(n,r,a,s,i,o).compute(e,t)}function Lz(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){let a=t[0],s=e.indexOf(a);for(;-1!==s;){let t=e.subarray(0,s);(!n||0!==t.length)&&r.push(t),e=e.subarray(s+1),s=e.indexOf(a)}return void((!n||0!==e.length)&&r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){let t=e.subarray(a,s);(!n||0!==t.length)&&r.push(t),a=s+1}}function zz(e,t,n){let r=e.length,a=[],s=0,i=0,o=new Array(r);for(let d=0;d<r;++d){let r=a.length;Lz(e[d],t,n,a);let l=a.length-r;o[d]=l,s+=l,i=Math.max(i,l)}let l=Ra.getArrayFromDType("int32",2*s),u=new Array(s),h=[r,i],p=0;for(let d=0;d<r;++d)for(let e=0;e<o[d];++e)l[2*p]=d,l[2*p+1]=e,u[p]=a[p],++p;return[l,u,h]}function Pz(e,t){let n=Ra.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Ra.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var Bz=_O(((e,t)=>e-t)),Wz=BO(((e,t,n,r)=>({real:e-n,imag:t-r}))),Vz=PO(ta,Bz,Wz),Uz={kernelName:ta,backendName:"cpu",kernelFunc:Vz};function Gz(e,t){let n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];let r=No(n,e.dtype);for(let a=0;a<r.values.length;++a){let t=r.indexToLoc(a),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];let s=e.locToIndex(n);r.values[a]=e.values[s]}return r}var Hz=(e,t)=>{let n=t.value-e.value;return 0===n?e.index-t.index:n};function jz(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){let a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2),u=Math.max(n,Math.floor(t-s*o/a+l)),h=Math.min(r,Math.floor(t+(a-s)*o/a+l));jz(e,t,u,h)}let a=e[t],s=n,i=r;for(Ra.swap(e,n,t),Hz(e[r],a)>0&&Ra.swap(e,n,r);s<i;){for(Ra.swap(e,s,i),s++,i--;Hz(e[s],a)<0;)s+=1;for(;Hz(e[i],a)>0;)i-=1}0===Hz(e[n],a)?Ra.swap(e,n,i):(i+=1,Ra.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function qz(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=Ra.getTypedArrayFromDType(n,i*r),u=Ra.getTypedArrayFromDType("int32",i*r);for(let p=0;p<i;p++){let t=p*o,n=e.subarray(t,t+o),s=new Array(n.length);n.forEach(((e,t)=>s[t]={value:e,index:t})),r<s.length&&(jz(s,r),s=s.slice(0,r)),a&&s.sort(Hz);let i=p*r,h=l.subarray(i,i+r),d=u.subarray(i,i+r);for(let e=0;e<r;e++)h[e]=s[e].value,d[e]=s[e].index}let h=t.slice();return h[h.length-1]=r,[No(h,n,l),No(h,"int32",u)]}function Kz(e,t,n,r){let a=Ra.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let f=0;f<a;f++)s[0]*=n[f];s[1]=n[a];for(let f=a+1;f<n.length;f++)s[2]*=n[f];let i={},o=new Int32Array(n[a]),l=new ws(s,r,e),u=[],h=1===s[0]&&1===s[2];for(let f=0;f<n[a];f++){let t;if(h)t=e[f].toString();else{let e=[];for(let t=0;t<s[0];t++)for(let n=0;n<s[2];n++)e.push(l.get(t,f,n));t=e.join(",")}if(void 0!==i[t])o[f]=i[t];else{let e=Object.keys(i).length;i[t]=e,o[f]=e,u.push(f)}}let p=s.slice();p[1]=Object.keys(i).length;let d=new ws(p,r);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(l.get(n,e,r),n,t,r)}));let c=n.slice();return c[a]=p[1],{outputValues:d.values,outputShape:c,indices:o}}Yo("cpu",(()=>new IO),1);var Xz=KO(nn,(e=>e>=0?e:Math.exp(e)-1)),Yz={kernelName:nn,backendName:"cpu",kernelFunc:Xz};function Zz(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;vO([a],"leakyRelu");let i=Ra.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=Ra.getTypedArrayFromDType("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?s*o[u]:o[u];return n.makeTensorInfo(a.shape,"float32",l)}var Jz={kernelName:Tn,backendName:"cpu",kernelFunc:Zz},Qz=_O(((e,t)=>e<0?t*e:e));function eP(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;vO([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=Qz(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var tP={kernelName:pr,backendName:"cpu",kernelFunc:eP},nP=KO(xr,(e=>Math.max(0,e))),rP={kernelName:xr,backendName:"cpu",kernelFunc:nP},aP=KO(Nr,(e=>Math.min(Math.max(0,e),6))),sP={kernelName:Nr,backendName:"cpu",kernelFunc:aP};function iP(e,t,n,r,a){if("linear"===n)return RO({inputs:{x:t},backend:e});if("relu"===n)return nP({inputs:{x:t},backend:e});if("elu"===n)return Xz({inputs:{x:t},backend:e});if("relu6"===n)return aP({inputs:{x:t},backend:e});if("prelu"===n)return eP({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Zz({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return wz({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function oP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=Ra.sizeFromShape(a.shape),o=Ra.inferFromImplicitShape(s,i),l=Ra.sizeFromShape(o);Ra.assert(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);let u=n.data.get(a.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var lP={kernelName:wr,backendName:"cpu",kernelFunc:oP};function uP(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;vO([a,s],"matMul");let l=a.shape.length,u=s.shape.length,h=i?a.shape[l-2]:a.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=Ra.sizeFromShape(f),y=Ra.sizeFromShape(m),b=Sh.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);Ra.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let x=i?[g,h,d]:[g,d,h],w=o?[y,c,p]:[y,p,c],v=oP({inputs:{x:a},backend:n,attrs:{shape:x}}),k=oP({inputs:{x:s},backend:n,attrs:{shape:w}}),I=i?v.shape[1]:v.shape[2],S=i?v.shape[2]:v.shape[1],N=o?k.shape[1]:k.shape[2],T=Math.max(g,y),C=n.data.get(v.dataId).values,_=n.data.get(k.dataId).values,E=Ra.computeStrides(v.shape),$=Ra.computeStrides(k.shape),[A,R,F]=i?[E[0],1,E[1]]:[E[0],E[1],1],[D,M,O]=o?[1,$[1],$[0]]:[$[1],1,$[0]],L=S*N,z=No([T,S,N],v.dtype),P=z.values,B=n.blockSize;for(let W=0;W<T;W++){let e=W%g,t=W%y;for(let n=0;n<S;n+=B){let r=Math.min(n+B,S);for(let a=0;a<N;a+=B){let s=Math.min(a+B,N);for(let i=0;i<I;i+=B){let o=Math.min(i+B,I);for(let l=n;l<r;l++)for(let n=a;n<s;n++){let r=0;for(let a=i;a<o;a++){let s=C[e*A+l*R+a*F],i=_[a*D+n*M+t*O];r+=s*i}P[W*L+(l*N+n)]+=r}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(b,z.dtype,z.values)}var hP={kernelName:It,backendName:"cpu",kernelFunc:uP};function pP(e){let t,n,r,{inputs:a,backend:s,attrs:i}=e,{a:o,b:l,bias:u,preluActivationWeights:h}=a,{transposeA:p,transposeB:d,activation:c,leakyreluAlpha:f}=i,m=[];t=uP({inputs:{a:o,b:l},attrs:{transposeA:p,transposeB:d},backend:s}),u&&(n=UO({inputs:{a:t,b:u},backend:s}),m.push(t),t=n),c&&(r=iP(s,t,c,h,f),m.push(t),t=r);for(let g of m)s.disposeIntermediateTensorInfo(g);return t}var dP={kernelName:ga,backendName:"cpu",kernelFunc:pP},cP=KO(it,(e=>Math.acos(e))),fP={kernelName:it,backendName:"cpu",kernelFunc:cP},mP=KO(ot,(e=>Math.acosh(e))),gP={kernelName:ot,backendName:"cpu",kernelFunc:mP};function yP(e){let{inputs:t,backend:n}=e,r=t;vO(t,"addN");let a=r.map((e=>n.data.get(e.dataId).values)),s=No(r[0].shape,r[0].dtype),i=s.values;for(let o=0;o<r.length;o++){let e=a[o];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}var bP={kernelName:ut,backendName:"cpu",kernelFunc:yP};function xP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;vO(a,"all");let o=Ra.parseAxisParam(s,a.shape),l=o,u=tw.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=KL({inputs:{x:a},backend:n,attrs:{perm:u}}),l=tw.getInnerMostAxes(l.length,a.shape.length)),tw.assertAxesAreInnerMostDims("all",l,h.shape.length);let[p,d]=tw.computeOutAndReduceShapes(h.shape,l),c=Ra.sizeFromShape(d),f=Ra.makeZerosTypedArray(Ra.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let y=0;y<f.length;++y){let e=y*c,t=m[e];for(let n=0;n<c;++n){let r=m[e+n];t=t&&r}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=tw.expandShapeToKeepDim(p,o),t=oP({inputs:{x:g},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(g),t}return g}var wP={kernelName:ht,backendName:"cpu",kernelFunc:xP};function vP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;vO(a,"any");let o=Ra.parseAxisParam(s,a.shape),l=o,u=tw.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=KL({inputs:{x:a},backend:n,attrs:{perm:u}}),l=tw.getInnerMostAxes(l.length,a.shape.length)),tw.assertAxesAreInnerMostDims("any",l,h.shape.length);let[p,d]=tw.computeOutAndReduceShapes(h.shape,l),c=Ra.sizeFromShape(d),f=Ra.makeZerosTypedArray(Ra.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let y=0;y<f.length;++y){let e=y*c,t=m[e];for(let n=0;n<c;++n){let r=m[e+n];t=t||r}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=tw.expandShapeToKeepDim(p,o),t=oP({inputs:{x:g},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(g),t}return g}var kP={kernelName:pt,backendName:"cpu",kernelFunc:vP};function IP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;vO(a,"argMax");let i=Ra.parseAxisParam(s,a.shape),o=tw.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=KL({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=tw.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],tw.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[h,p]=tw.computeOutAndReduceShapes(l.shape,i),d=Ra.sizeFromShape(h),c=Ra.makeZerosTypedArray(d,"int32"),f=Ra.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let e=g*f,t=m[e],n=0;for(let r=0;r<f;++r){let a=m[e+r];a>t&&(t=a,n=r)}c[g]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(h,"int32",c)}var SP={kernelName:dt,backendName:"cpu",kernelFunc:IP};function NP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;vO(a,"argMin");let i=Ra.parseAxisParam(s,a.shape),o=tw.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=KL({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=tw.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],tw.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[h,p]=tw.computeOutAndReduceShapes(l.shape,i),d=Ra.sizeFromShape(h),c=Ra.makeZerosTypedArray(d,"int32"),f=Ra.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let e=g*f,t=m[e],n=0;for(let r=0;r<f;++r){let a=m[e+r];a<t&&(t=a,n=r)}c[g]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(h,"int32",c)}var TP={kernelName:ct,backendName:"cpu",kernelFunc:NP},CP=KO(ft,(e=>Math.asin(e))),_P={kernelName:ft,backendName:"cpu",kernelFunc:CP},EP=KO(mt,(e=>Math.asinh(e))),$P={kernelName:mt,backendName:"cpu",kernelFunc:EP},AP=KO(gt,(e=>Math.atan(e))),RP={kernelName:gt,backendName:"cpu",kernelFunc:AP},FP=_O(((e,t)=>Math.atan2(e,t))),DP=PO(bt,FP),MP={kernelName:bt,backendName:"cpu",kernelFunc:DP},OP=KO(yt,(e=>Math.atanh(e))),LP={kernelName:yt,backendName:"cpu",kernelFunc:OP};function zP(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,h=a.effectiveFilterHeight,p=a.effectiveFilterWidth,d=a.padInfo.top,c=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=No(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let w=0;w<a.batchSize;++w){let t=w*y,n=w*r[0];for(let m=0;m<a.inChannels;++m)for(let y=0;y<a.outHeight;++y){let w=y*i-d,v=Math.max(0,w),k=Math.min(a.inHeight,h+w),I=t+y*b;for(let t=0;t<a.outWidth;++t){let i=t*o-c,h=Math.max(0,i),d=Math.min(a.inWidth,p+i),y=f,b=0,w=0;for(let t=v;t<k;t+=l){let a=n+t*r[1];for(let t=h;t<d;t+=u){let n=a+t*r[2],i=e[n+m];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,w++)}if(isNaN(y))break}let S=I+t*x+m;g[S]="avg"===s?b/w:y}}}return m}function PP(e,t,n,r,a=!1,s=!1){let i=No(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,h=r.dilationWidth,p=r.effectiveFilterHeight,d=r.effectiveFilterWidth,c=r.padInfo.top,f=r.padInfo.left,m=No(t,n,e);for(let g=0;g<r.batchSize;++g)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){let n=t*o-c,y=n;for(;y<0;)y+=u;let b=Math.min(r.inHeight,p+n);for(let o=0;o<r.outWidth;++o){let p=o*l-f,c=p;for(;c<0;)c+=h;let x=Math.min(r.inWidth,d+p),w=Number.NEGATIVE_INFINITY,v=-1;for(let t=y;t<b;t+=u){let i=t-n;for(let n=c;n<x;n+=h){let o=n-p,l=m.get(g,t,n,e);l>w&&(w=l,v=a?s?((g*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:i*d+o)}}i.set(v,g,t,o,e)}}return i}function BP(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,h=a.dilationHeight,p=a.dilationWidth,d=a.effectiveFilterDepth,c=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=No(a.outShape,n),w=x.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],S=a.outShape[4];for(let N=0;N<a.batchSize;++N){let t=N*v,n=N*r[0];for(let x=0;x<a.inChannels;++x)for(let v=0;v<a.outDepth;++v){let N=v*i-m,T=N;for(;T<0;)T+=u;let C=Math.min(a.inDepth,d+N),_=t+v*k;for(let t=0;t<a.outHeight;++t){let i=t*o-g,d=i;for(;d<0;)d+=h;let m=Math.min(a.inHeight,c+i),v=_+t*I;for(let t=0;t<a.outWidth;++t){let i=t*l-y,o=i;for(;o<0;)o+=p;let c=Math.min(a.inWidth,f+i),g=v+t*S,k=b,I=0,N=0;for(let t=T;t<C;t+=u){let a=n+t*r[1];for(let t=d;t<m;t+=h){let n=a+t*r[2];for(let t=o;t<c;t+=p){let a=n+t*r[3],i=e[a+x];if("max"===s&&i>k?k=i:"avg"===s&&(I+=i,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}let _=g+x;w[_]="avg"===s?I/Math.max(N,1):k}}}}return x}function WP(e,t){let n=No(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*r-d,x=b;for(;x<0;)x+=i;let w=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){let u=r*a-c,d=u;for(;d<0;)d+=o;let v=Math.min(t.inHeight,h+u);for(let a=0;a<t.outWidth;++a){let c=a*s-f,k=c;for(;k<0;)k+=l;let I=Math.min(t.inWidth,p+c),S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<w;t+=i){let n=t-b;for(let r=d;r<v;r+=o){let a=r-u;for(let s=k;s<I;s+=l){let i=s-c,o=e.get(m,t,r,s,g);o>=S&&(S=o,N=n*h*p+a*h+i)}}}n.set(N,m,y,r,a,g)}}}return n}function VP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;vO(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;Ra.assert(tw.eitherStridesOrDilationsAreOne(i,u),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));let h,p=tw.computePool2DInfo(a.shape,s,i,u,o,l);if(1===p.filterWidth&&1===p.filterHeight&&Ra.arraysEqual(p.inShape,p.outShape))h=RO({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=Ra.computeStrides(a.shape),r=zP(e,a.shape,a.dtype,t,p,"avg");h=n.makeTensorInfo(p.outShape,a.dtype,r.values)}return h}var UP={kernelName:xt,backendName:"cpu",kernelFunc:VP};function GP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;vO(a,"avgPool3d");let h=tw.computePool3DInfo(a.shape,s,i,1,o,l,u),p=n.data.get(a.dataId).values,d=BP(p,a.shape,a.dtype,Ra.computeStrides(a.shape),h,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}var HP={kernelName:vt,backendName:"cpu",kernelFunc:GP};function jP(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;vO([a,s],"avgPool3DGrad");let h=tw.computePool3DInfo(s.shape,i,o,1,l,u),p=h.strideDepth,d=h.strideHeight,c=h.strideWidth,f=h.filterDepth,m=h.filterHeight,g=h.filterWidth,y=h.dilationDepth,b=h.dilationHeight,x=h.dilationWidth,w=h.effectiveFilterDepth,v=h.effectiveFilterHeight,k=h.effectiveFilterWidth,I=w-1-h.padInfo.front,S=k-1-h.padInfo.left,N=v-1-h.padInfo.top,T=No(s.shape,"float32"),C=1/(f*m*g),_=n.bufferSync(a);for(let E=0;E<h.batchSize;++E)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inDepth;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){let a=t-I,s=n-N,i=r-S,o=0;for(let t=0;t<w;t+=y){let n=(a+t)/p;if(!(n<0||n>=h.outDepth||Math.floor(n)!==n))for(let t=0;t<v;t+=b){let r=(s+t)/d;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let t=0;t<k;t+=x){let a=(i+t)/c;if(a<0||a>=h.outWidth||Math.floor(a)!==a)continue;let s=_.get(E,n,r,a,e);o+=s}}}T.set(o*C,E,t,n,r,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}var qP={kernelName:kt,backendName:"cpu",kernelFunc:jP};function KP(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;vO([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,h=tw.computePool2DInfo(i.shape,o,l,1,u),p=h.strideHeight,d=h.strideWidth,c=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.effectiveFilterHeight,b=h.effectiveFilterWidth,x=b-1-h.padInfo.left,w=y-1-h.padInfo.top,v=No(i.shape,"float32"),k=1/(c*f),I=n.data.get(a.dataId).values,S=No(a.shape,"float32",I);for(let N=0;N<h.batchSize;++N)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inHeight;++t)for(let n=0;n<h.inWidth;++n){let r=t-w,a=n-x,s=0;for(let t=0;t<y;t+=m){let n=(r+t)/p;if(!(n<0||n>=h.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){let r=(a+t)/d;if(r<0||r>=h.outWidth||Math.floor(r)!==r)continue;let i=S.get(N,n,r,e);s+=i}}v.set(s*k,N,t,n,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}var XP={kernelName:wt,backendName:"cpu",kernelFunc:KP};function YP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;Ra.assert(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Ra.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Ra.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),vO([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);let h=n.data.get(a.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(h.length),g=f.length,y=c.length,b=d.length,x=p.length,w=0,v=0,k=0,I=0;for(let S=0;S<h.length;++S)m[S]=f[w++]+(h[S]-p[v++])*c[k++]/Math.sqrt(d[I++]+u),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}var ZP={kernelName:mn,backendName:"cpu",kernelFunc:YP};function JP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;vO([a],"batchToSpaceND");let o=s.reduce(((e,t)=>e*t)),l=tw.getReshaped(a.shape,s,o),u=tw.getPermuted(l.length,s.length),h=tw.getReshapedPermuted(a.shape,s,o),p=tw.getSliceBeginCoords(i,s.length),d=tw.getSliceSize(h,i,s.length),c=oP({inputs:{x:a},backend:n,attrs:{shape:l}}),f=KL({inputs:{x:c},backend:n,attrs:{perm:u}}),m=oP({inputs:{x:f},backend:n,attrs:{shape:h}}),g=Iz({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var QP={kernelName:St,backendName:"cpu",kernelFunc:JP};function eB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,u=HO(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}var tB={kernelName:Nt,backendName:"cpu",kernelFunc:eB};function nB(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=tw.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var rB={kernelName:Ct,backendName:"cpu",kernelFunc:nB},aB=KO($t,((e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),sB={kernelName:$t,backendName:"cpu",kernelFunc:aB},iB=e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(Ra.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let u=0;u<o.length;u++){let e=o[u],t=l[u];r[u]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")},oB={kernelName:Rt,backendName:"cpu",kernelFunc:iB};function lB(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var uB={kernelName:kn,backendName:"cpu",kernelFunc:lB};function hB(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=Ra.parseAxisParam(a,t[0].shape)[0],i=t.map((e=>e.shape));tw.assertParamsConsistent(i,s);let o=tw.computeOutShape(t.map((e=>e.shape)),s);if(0===Ra.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter((e=>Ra.sizeFromShape(e.shape)>0));if(1===l.length)return RO({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){let e=l.map((e=>DO({inputs:{input:e},backend:n}))),t=l.map((e=>lB({inputs:{input:e},backend:n}))),r=hB({inputs:e,backend:n,attrs:{axis:s}}),a=hB({inputs:t,backend:n,attrs:{axis:s}}),i=EO({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}let u=l.map((e=>{let t=[-1,Ra.sizeFromShape(e.shape.slice(s))];return oP({inputs:{x:e},backend:n,attrs:{shape:t}})})),h=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=tw.computeOutShape(u.map((e=>e.shape)),1);let p=1===u[0].shape[0],d=QO(h,o,t[0].dtype,p),c=tw.computeOutShape(l.map((e=>e.shape)),s),f=n.makeTensorInfo(c,t[0].dtype,d);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var pB={kernelName:Ft,backendName:"cpu",kernelFunc:hB};function dB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:h}=r;vO([a,s],"conv2d");let p=tw.convertConv2DDataFormat(l),d=tw.computeConv2DInfo(a.shape,s.shape,i,u,o,h,!1,p),c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,w=new ws(d.outShape,a.dtype),v=Ra.computeStrides(a.shape),k=Ra.computeStrides(s.shape),I=v[0],S=x?v[1]:v[2],N=x?v[2]:1,T=x?1:v[1],C=w.strides[0],_=x?w.strides[1]:w.strides[2],E=x?w.strides[2]:1,$=x?1:w.strides[1],A=n.data.get(a.dataId).values,R=n.data.get(s.dataId).values,F=w.values;for(let D=0;D<d.batchSize;++D){let e=D*I,t=D*C;for(let n=0;n<d.outHeight;++n){let r=t+n*_,a=n*d.strideHeight-b;for(let t=0;t<c;++t){let n=a+t*m;if(n<0||n>=d.inHeight)continue;let s=t*k[0],i=e+n*S;for(let e=0;e<d.outWidth;++e){let t=r+e*E,n=e*d.strideWidth-y;for(let e=0;e<f;++e){let r=n+e*g;if(r<0||r>=d.inWidth)continue;let a=s+e*k[1],o=i+r*N,l=a;for(let e=0;e<d.inChannels;++e){let n=A[o+e*T];for(let e=0;e<d.outChannels;++e)F[t+e*$]+=n*R[l+e];l+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,F)}var cB={kernelName:Dt,backendName:"cpu",kernelFunc:dB};function fB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=r;vO([a,s],"conv2dBackpropFilter");let p=tw.convertConv2DDataFormat(l),d=tw.computeConv2DInfo(a.shape,h,i,1,o,u,!1,p),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new ws(d.filterShape,"float32"),x=d.padInfo.left,w=d.padInfo.top,v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new ws(a.shape,a.dtype,v),S=new ws(s.shape,s.dtype,k);for(let N=0;N<m;++N){let e=Math.max(0,Math.ceil((w-N)/c)),t=Math.min(d.outHeight,(d.inHeight+w-N)/c);for(let n=0;n<g;++n){let r=Math.max(0,Math.ceil((x-n)/f)),a=Math.min(d.outWidth,(d.inWidth+x-n)/f);for(let s=0;s<d.inChannels;++s)for(let i=0;i<d.outChannels;++i){let o=0;for(let l=0;l<d.batchSize;++l)for(let u=e;u<t;++u){let e=N+u*c-w;for(let t=r;t<a;++t){let r=n+t*f-x;o+=y?I.get(l,e,r,s)*S.get(l,u,t,i):I.get(l,s,e,r)*S.get(l,i,u,t)}}b.set(o,N,n,s,i)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var mB={kernelName:Mt,backendName:"cpu",kernelFunc:fB};function gB(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=r;vO([a,s],"conv2dBackpropInput");let p=Ra.computeStrides(s.shape),d=Ra.computeStrides(a.shape),c=tw.convertConv2DDataFormat(u),f=tw.computeConv2DInfo(i,s.shape,o,1,l,h,!1,c),m=new ws(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,w,v]=p,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:C,outChannels:_,outHeight:E,outWidth:$,strideHeight:A,strideWidth:R}=f;c=f.dataFormat;let F=I-1-f.padInfo.top,D=S-1-f.padInfo.left,M="channelsLast"===c,O=m.strides[0],L=M?m.strides[1]:m.strides[2],z=M?m.strides[2]:1,P=M?1:m.strides[1],B=d[0],W=M?d[1]:d[2],V=M?d[2]:1,U=M?1:d[1];for(let G=0;G<k;++G)for(let e=0;e<N;++e)for(let t=0;t<T;++t){let n=t-F,r=Math.max(0,Math.ceil(n/A)),a=Math.min(E,(I+n)/A);for(let s=0;s<C;++s){let i=s-D,o=Math.max(0,Math.ceil(i/R)),l=Math.min($,(S+i)/R),u=0;for(let t=r;t<a;++t){let r=t*A-n;for(let n=o;n<l;++n){let a=n*R-i,s=B*G+W*t+V*n,o=x*(I-1-r)+w*(S-1-a)+v*e;for(let e=0;e<_;++e){let t=y[s+U*e],n=b[o+e];u+=t*n}}}let h=O*G+L*t+z*s+P*e;g[h]=u}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var yB={kernelName:Ot,backendName:"cpu",kernelFunc:gB};function bB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;vO([a,s],"conv3d");let u=tw.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:h,filterHeight:p,filterWidth:d,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,w=new ws(u.outShape,a.dtype),v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=w.values,S=Ra.computeStrides(a.shape),N=Ra.computeStrides(s.shape);for(let T=0;T<u.batchSize;++T){let e=T*S[0],t=T*w.strides[0];for(let n=0;n<u.outDepth;++n){let r=t+n*w.strides[1],a=n*u.strideDepth-y;for(let t=0;t<h;++t){let n=a+t*c;if(n<0||n>=u.inDepth)continue;let s=t*N[0],i=e+n*S[1];for(let e=0;e<u.outHeight;++e){let t=r+e*w.strides[2],n=e*u.strideHeight-x;for(let e=0;e<p;++e){let r=n+e*f;if(r<0||r>=u.inHeight)continue;let a=s+e*N[1],o=i+r*S[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<d;++e){let t=r+e*m;if(t<0||t>=u.inWidth)continue;let s=a+e*N[2],i=o+t*u.inChannels,l=s;for(let e=0;e<u.inChannels;++e){let t=v[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var xB={kernelName:Lt,backendName:"cpu",kernelFunc:bB};function wB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;vO([a,s],"conv3dBackpropFilterV2");let u=Ra.computeStrides(a.shape),h=Ra.computeStrides(s.shape),p=tw.computeConv3DInfo(a.shape,l,i,1,o),d=p.strideDepth,c=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=new ws(p.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,S=n.data.get(s.dataId).values,[N,T,C,_]=h,E=n.data.get(a.dataId).values,[$,A,R,F]=u,D=p.padInfo.front,M=p.padInfo.left,O=p.padInfo.top;for(let L=0;L<m;++L){let e=Math.max(0,Math.ceil((D-L)/d)),t=Math.min(p.outDepth,(p.inDepth+D-L)/d),n=L*w;for(let r=0;r<g;++r){let a=Math.max(0,Math.ceil((O-r)/c)),s=Math.min(p.outHeight,(p.inHeight+O-r)/c),i=r*v+n;for(let n=0;n<y;++n){let o=Math.max(0,Math.ceil((M-n)/f)),l=Math.min(p.outWidth,(p.inWidth+M-n)/f),u=n*k+i;for(let i=0;i<p.inChannels;++i){let h=i*I+u;for(let u=0;u<p.outChannels;++u){let m=0;for(let h=0;h<p.batchSize;++h){let p=h*$,g=h*N;for(let h=e;h<t;++h){let e=(L+h*d-D)*A+p,t=h*T+g;for(let h=a;h<s;++h){let a=(r+h*c-O)*R+e,s=h*C+t;for(let e=o;e<l;++e){let t=(n+e*f-M)*F+a,r=e*_+s;m+=E[t+i]*S[r+u]}}}}x[h+u]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var vB={kernelName:zt,backendName:"cpu",kernelFunc:wB};function kB(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;vO([a],"conv3dBackpropInputV2");let u=Ra.computeStrides(a.shape),h=Ra.computeStrides(s.shape),p=tw.computeConv3DInfo(l,s.shape,o,1,i),d=new ws(p.inShape,"float32"),c=d.values,[f,m,g,y]=d.strides,b=n.data.get(a.dataId).values,[x,w,v,k]=u,I=n.data.get(s.dataId).values,[S,N,T,C]=h,{batchSize:_,filterDepth:E,filterHeight:$,filterWidth:A,inChannels:R,inDepth:F,inHeight:D,inWidth:M,outChannels:O,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=p,U=E-1-p.padInfo.front,G=$-1-p.padInfo.top,H=A-1-p.padInfo.left;for(let j=0;j<_;++j)for(let e=0;e<R;++e)for(let t=0;t<F;++t){let n=t-U,r=Math.max(0,Math.ceil(n/B)),a=Math.min(L,(E+n)/B);for(let s=0;s<D;++s){let i=s-G,o=Math.max(0,Math.ceil(i/W)),l=Math.min(z,($+i)/W);for(let u=0;u<M;++u){let h=u-H,p=Math.max(0,Math.ceil(h/V)),d=Math.min(P,(A+h)/V),_=0;for(let t=r;t<a;++t){let r=t*B-n;for(let n=o;n<l;++n){let a=n*W-i;for(let s=p;s<d;++s){let i=s*V-h,o=x*j+w*t+v*n+k*s,l=S*(E-1-r)+N*($-1-a)+T*(A-1-i)+C*e;for(let e=0;e<O;++e){let t=b[o+e],n=I[l+e];_+=t*n}}}}c[f*j+m*t+g*s+y*u+e]=_}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}var IB={kernelName:Pt,backendName:"cpu",kernelFunc:kB},SB=KO(Bt,(e=>Math.cos(e))),NB={kernelName:Bt,backendName:"cpu",kernelFunc:SB},TB=KO(Wt,(e=>Math.cosh(e))),CB={kernelName:Wt,backendName:"cpu",kernelFunc:TB};function _B(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[h,p,d,c]=a.shape,f=s.shape[0],[m,g]=o,y=No([f,m,g,c],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(a.dataId).values,v=Ra.computeStrides(a.shape),k=Ra.computeStrides(y.shape);for(let I=0;I<f;I++){let e=4*I,t=b[e],n=b[e+1],r=b[e+2],a=b[e+3],s=x[I];if(s>=h)continue;let i=m>1?(r-t)*(p-1)/(m-1):0,o=g>1?(a-n)*(d-1)/(g-1):0;for(let h=0;h<m;h++){let e=m>1?t*(p-1)+h*i:.5*(t+r)*(p-1);if(e<0||e>p-1)for(let t=0;t<g;t++)for(let e=0;e<c;e++){let n=e+t*k[2]+h*k[1]+I*k[0];y.values[n]=u}else if("bilinear"===l){let t=Math.floor(e),r=Math.ceil(e),i=e-t;for(let e=0;e<g;e++){let l=g>1?n*(d-1)+e*o:.5*(n+a)*(d-1);if(l<0||l>d-1){for(let t=0;t<c;t++){let n=t+e*k[2]+h*k[1]+I*k[0];y.values[n]=u}continue}let p=Math.floor(l),f=Math.ceil(l),m=l-p;for(let n=0;n<c;n++){let a=n+p*v[2]+t*v[1]+s*v[0],o=w[a];a=n+f*v[2]+t*v[1]+s*v[0];let l=w[a];a=n+p*v[2]+r*v[1]+s*v[0];let u=w[a];a=n+f*v[2]+r*v[1]+s*v[0];let d=w[a],c=o+(l-o)*m,g=u+(d-u)*m;a=n+e*k[2]+h*k[1]+I*k[0],y.values[a]=c+(g-c)*i}}}else for(let t=0;t<g;++t){let r=g>1?n*(d-1)+t*o:.5*(n+a)*(d-1);if(r<0||r>d-1){for(let e=0;e<c;e++){let n=e+t*k[2]+h*k[1]+I*k[0];y.values[n]=u}continue}let i=Math.round(r),l=Math.round(e);for(let e=0;e<c;e++){let n=e+i*v[2]+l*v[1]+s*v[0],r=e+t*k[2]+h*k[1]+I*k[0];y.values[r]=w[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var EB={kernelName:Gt,backendName:"cpu",kernelFunc:_B};function $B(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;vO(a,"cumprod");let l=tw.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=KL({inputs:{x:a},backend:n,attrs:{perm:l}}));let h=tw.getInnerMostAxes(1,a.shape.length)[0];if(h!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);let p=Os(u.dtype,"int32"),d=Ra.makeOnesTypedArray(Ra.sizeFromShape(u.shape),p),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<c.length;y+=f)for(let e=0;e<f;e++){let t=m(y,e);if(0===e)d[t]=i?1:c[t];else{let n=m(y,e-1);d[t]=i?c[n]*d[n]:c[t]*d[n]}}let g=n.makeTensorInfo(u.shape,p,d);if(null!=l){let e=tw.getUndoAxesPermutation(l),t=KL({inputs:{x:g},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),t}return g}var AB={kernelName:Vt,backendName:"cpu",kernelFunc:$B};function RB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;vO(a,"cumsum");let l=tw.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=KL({inputs:{x:a},backend:n,attrs:{perm:l}}));let h=tw.getInnerMostAxes(1,a.shape.length)[0];if(h!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);let p=Os(u.dtype,"int32"),d=Ra.makeZerosTypedArray(Ra.sizeFromShape(u.shape),p),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<c.length;y+=f)for(let e=0;e<f;e++){let t=m(y,e);if(0===e)d[t]=i?0:c[t];else{let n=m(y,e-1);d[t]=i?c[n]+d[n]:c[t]+d[n]}}let g=n.makeTensorInfo(u.shape,p,d);if(null!=l){let e=tw.getUndoAxesPermutation(l),t=KL({inputs:{x:g},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),t}return g}var FB={kernelName:Ut,backendName:"cpu",kernelFunc:RB};function DB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=n.data.get(a.dataId).values,t=n.data.get(s.dataId).values,r=HO(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){let e=n.bufferSync(a),t=n.bufferSync(s),r=jO(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var MB={kernelName:Ht,backendName:"cpu",kernelFunc:DB};function OB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;Ra.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));let o=a.shape[0],l=a.shape[1],u=a.shape[2],h=a.shape[3],p=l*s,d=u*s,c=h/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*p*d*c),g=0;for(let y=0;y<o;++y)for(let e=0;e<p;++e){let t=Math.floor(e/s),n=e%s;for(let e=0;e<d;++e){let r=Math.floor(e/s),a=e%s,i=(n*s+a)*c;for(let e=0;e<c;++e){let n=e+i+h*(r+u*(t+l*y));m[g++]=f[n]}}}return n.makeTensorInfo([o,p,d,c],a.dtype,m)}var LB={kernelName:jt,backendName:"cpu",kernelFunc:OB};function zB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;vO([a,s],"depthwiseConv2DNative");let h=Ra.computeStrides(a.shape),p=Ra.computeStrides(s.shape),d=l;null==d&&(d=[1,1]),Ra.assert(tw.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));let c=tw.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,w=b.top,v=c.outChannels/c.inChannels,k=new ws(c.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(s.dataId).values,N=k.values;for(let T=0;T<c.batchSize;++T){let e=T*h[0],t=T*k.strides[0];for(let n=0;n<c.outHeight;++n){let r=t+n*k.strides[1],a=n*c.strideHeight-w;for(let t=0;t<f;++t){let n=a+t*g;if(n<0||n>=c.inHeight)continue;let s=t*p[0],i=e+n*h[1];for(let e=0;e<c.outWidth;++e){let t=r+e*k.strides[2],n=e*c.strideWidth-x;for(let e=0;e<m;++e){let r=n+e*y;if(r<0||r>=c.inWidth)continue;let a=s+e*p[1],o=i+r*c.inChannels,l=t,u=a;for(let e=0;e<c.inChannels;++e){let t=I[o+e];for(let e=0;e<v;++e)N[l+e]+=t*S[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var PB={kernelName:qt,backendName:"cpu",kernelFunc:zB};function BB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=r;vO([a,s],"depthwiseConv2dNativeBackpropFilter");let p=tw.computeConv2DInfo(a.shape,h,i,o,l,u,!0),{strideHeight:d,strideWidth:c,filterHeight:f,filterWidth:m}=p,g=new ws(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,x=p.outChannels/p.inChannels,w=n.data.get(a.dataId).values,v=new ws(a.shape,a.dtype,w),k=n.data.get(s.dataId).values,I=new ws(s.shape,s.dtype,k);for(let S=0;S<f;++S){let e=Math.max(0,Math.ceil((b-S)/d)),t=Math.min(p.outHeight,(p.inHeight+b-S)/d);for(let n=0;n<m;++n){let r=Math.max(0,Math.ceil((y-n)/c)),a=Math.min(p.outWidth,(p.inWidth+y-n)/c);for(let s=0;s<p.outChannels;++s){let i=Math.trunc(s/x),o=s%x,l=0;for(let u=0;u<p.batchSize;++u)for(let o=e;o<t;++o){let e=S+o*d-b;for(let t=r;t<a;++t){let r=n+t*c-y;l+=v.get(u,e,r,i)*I.get(u,o,t,s)}}g.set(l,S,n,i,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var WB={kernelName:Kt,backendName:"cpu",kernelFunc:BB};function VB(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=r;vO([a,s],"depthwiseConv2DNativeBackpropInput");let p=Ra.computeStrides(a.shape),d=Ra.computeStrides(s.shape),c=tw.computeConv2DInfo(h,s.shape,i,o,l,u,!0),f=new ws(c.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[w,v,k]=p,I=n.data.get(s.dataId).values,[S,N,T]=d,{batchSize:C,filterHeight:_,filterWidth:E,inChannels:$,inHeight:A,inWidth:R,outChannels:F,outHeight:D,outWidth:M,strideHeight:O,strideWidth:L}=c,z=_-1-c.padInfo.top,P=E-1-c.padInfo.left,B=F/$;for(let W=0;W<C;++W)for(let e=0;e<$;++e)for(let t=0;t<A;++t){let n=t-z,r=Math.max(0,Math.ceil(n/O)),a=Math.min(D,(_+n)/O);for(let s=0;s<R;++s){let i=s-P,o=Math.max(0,Math.ceil(i/L)),l=Math.min(M,(E+i)/L),u=0;for(let t=r;t<a;++t){let r=t*O-n;for(let n=o;n<l;++n){let a=n*L-i,s=w*W+v*t+k*n,o=S*(_-1-r)+N*(E-1-a)+T*e;for(let t=0;t<B;++t){let n=e*B+t,r=x[s+n],a=I[o+t];u+=r*a}}}m[g*W+y*t+b*s+e]=u}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var UB={kernelName:Xt,backendName:"cpu",kernelFunc:VB};function GB(e){let{inputs:t,backend:n}=e,{x:r}=t,a=Ra.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=No([a,a],r.dtype),o=i.values;for(let u=0;u<s.length;u++)o[u*a+u]=s[u];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}var HB={kernelName:Yt,backendName:"cpu",kernelFunc:GB},jB={kernelName:Zt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,h=r.shape.length,p=l.data.get(a.dataId).values,d=a.shape.length,{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=tw.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),C=Ra.sizeFromShape(T),_=T.length,E=Ra.getArrayFromDType(r.dtype,C);for(let $=0;$<c;++$)for(let e=0;e<y;++e){let t=e*w-x.top;for(let n=0;n<b;++n){let s=n*v-x.left;for(let i=0;i<g;++i){let o=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){let n=t+e*S;if(n>=0&&n<f)for(let t=0;t<I;++t){let l=s+t*N;if(l>=0&&l<m){let s=Ra.locToIndex([$,n,l,i],h,Ra.computeStrides(r.shape)),c=Ra.locToIndex([e,t,i],d,Ra.computeStrides(a.shape)),f=u[s]+p[c];f>o&&(o=f)}}}let l=Ra.locToIndex([$,e,n,i],_,Ra.computeStrides(T));E[l]=o}}}return{dataId:l.write(Ra.toTypedArray(E,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},qB={kernelName:Qt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,h=Ra.toNestedArray(r.shape,u.data.get(r.dataId).values),p=Ra.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=tw.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);Ra.assert(s.rank===N.length,(()=>`Error in ${Qt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));let T=Ra.toNestedArray(N,u.data.get(s.dataId).values),C=Ra.makeZerosNestedTypedArray(a.shape,a.dtype);for(let _=0;_<d;++_)for(let e=0;e<g;++e){let t=e*x-b.top;for(let n=0;n<y;++n){let r=n*w-b.left;for(let a=0;a<m;++a){let s=Number.MIN_SAFE_INTEGER,i=0,o=0;for(let e=0;e<v;++e){let n=t+e*I;if(n>=0&&n<c)for(let t=0;t<k;++t){let l=r+t*S;if(l>=0&&l<f){let r=h[_][n][l][a]+p[e][t][a];r>s&&(s=r,i=e,o=t)}}}C[i][o][a]+=T[_][e][n][a]}}}return{dataId:u.write(Ra.toTypedArray(C,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},KB={kernelName:Jt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,h=Ra.toNestedArray(r.shape,u.data.get(r.dataId).values),p=Ra.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=tw.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);Ra.assert(s.rank===N.length,(()=>`Error in ${Jt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));let T=Ra.toNestedArray(N,u.data.get(s.dataId).values),C=Ra.makeZerosNestedTypedArray(r.shape,r.dtype);for(let _=0;_<d;++_)for(let e=0;e<g;++e){let t=e*x-b.top;for(let n=0;n<y;++n){let r=n*w-b.left;for(let a=0;a<m;++a){let s=Number.MIN_SAFE_INTEGER,i=t<0?0:t,o=r<0?0:r;for(let e=0;e<v;++e){let n=t+e*I;if(n>=0&&n<c)for(let t=0;t<k;++t){let l=r+t*S;if(l>=0&&l<f){let r=h[_][n][l][a]+p[e][t][a];r>s&&(s=r,i=n,o=l)}}}C[_][i][o][a]+=T[_][e][n][a]}}}return{dataId:u.write(Ra.toTypedArray(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function XB(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a;vO(s,"sum"),t="bool"===s.dtype?LO({inputs:{x:s},backend:r,attrs:{dtype:"int32"}}):RO({inputs:{x:s},backend:r});let l=t.shape.length,u=Ra.parseAxisParam(i,t.shape),h=tw.getAxesPermutation(u,l),p=u,d=t;null!=h&&(d=KL({inputs:{x:t},backend:r,attrs:{perm:h}}),p=tw.getInnerMostAxes(p.length,l)),tw.assertAxesAreInnerMostDims("sum",p,d.shape.length);let[c,f]=tw.computeOutAndReduceShapes(d.shape,p),m=tw.upcastType(d.dtype,"int32"),g=AO(r,c,m),y=Ra.sizeFromShape(f),b=r.data.get(g.dataId).values,x=r.data.get(d.dataId).values;for(let w=0;w<b.length;++w){let e=w*y,t=0;for(let n=0;n<y;++n)t+=x[e+n];b[w]=t}if(o){let e=tw.expandShapeToKeepDim(g.shape,u),t=g;g=oP({inputs:{x:g},backend:r,attrs:{shape:e}}),r.disposeIntermediateTensorInfo(t)}return r.disposeIntermediateTensorInfo(t),null!=h&&r.disposeIntermediateTensorInfo(d),g}var YB={kernelName:Br,backendName:"cpu",kernelFunc:XB};function ZB(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=tw.decodeEinsumEquation(a,s.length);tw.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:h}=tw.getEinsumComputePath(o,l),p=h.length,d=null,c=i.length,f=[];for(let m=0;m<p;++m){for(let e of h[m]){let t,{permutationIndices:r,expandDims:a}=tw.getEinsumPermutation(c,l[e]);tw.isIdentityPermutation(r)?t=s[e]:(t=KL({inputs:{x:s[e]},backend:n,attrs:{perm:r}}),f.push(t));let i=t.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);Ra.arraysEqual(t.shape,i)||(t=oP({inputs:{x:t},backend:n,attrs:{shape:i}}),f.push(t)),null===d?d=t:(d=PL({inputs:{a:t,b:d},backend:n}),f.push(d))}m<p-1&&(u[m]>=0&&(d=XB({inputs:{x:d},backend:n,attrs:{axis:u[m]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var JB={kernelName:tn,backendName:"cpu",kernelFunc:ZB};function QB(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;vO([r,a],"eluGrad");let s=new Float32Array(Ra.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let l=0;l<i.length;++l){let e=i[l];s[l]=e>=1?o[l]:o[l]*(e+1)}return n.makeTensorInfo(a.shape,"float32",s)}var eW={kernelName:rn,backendName:"cpu",kernelFunc:QB},tW=tw.ERF_P,nW=tw.ERF_A1,rW=tw.ERF_A2,aW=tw.ERF_A3,sW=tw.ERF_A4,iW=tw.ERF_A5,oW=KO(an,(e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+tW*n);return t*(1-((((iW*r+sW)*r+aW)*r+rW)*r+nW)*r*Math.exp(-n*n))})),lW={kernelName:an,backendName:"cpu",kernelFunc:oW};function uW(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(Ra.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),oP({inputs:{x:a},backend:n,attrs:{shape:o}})}var hW={kernelName:ln,backendName:"cpu",kernelFunc:uW},pW=_O(((e,t)=>e/t)),dW=PO(en,pW),cW={kernelName:en,backendName:"cpu",kernelFunc:dW};function fW(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],h=Ra.sizeFromShape(u),p=Ra.getTypedArrayFromDType("float32",h),d=Ra.getTypedArrayFromDType("float32",h);for(let g=0;g<a;g++){let e=Iz({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=Iz({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,s]}}),a=EO({inputs:{real:e,imag:r},backend:n}),{real:i,imag:u}=mW(a,t,n),h=tw.mergeRealAndImagArrays(i,u);for(let t=0;t<s;t++){let e=tw.getComplexWithIndex(h,t);p[g*s+t]=e.real,d[g*s+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a)}let c=n.makeTensorInfo(u,"float32",p),f=n.makeTensorInfo(u,"float32",d),m=EO({inputs:{real:c,imag:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}function mW(e,t,n){let r=Ra.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(gW(r)){let a=yW(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",Ra.createScalarValue(r,"float32")),i=RO({inputs:{x:s},backend:n}),l=cW.kernelFunc({inputs:{a:e,b:s},backend:n}),u=cW.kernelFunc({inputs:{a:t,b:i},backend:n}),h=n.data.get(l.dataId).values,p=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:h,imag:p}}return a}{let e=tw.mergeRealAndImagArrays(s,i),n=bW(e,r,t);return tw.splitRealAndImagArrays(n)}}function gW(e){return 0===(e&e-1)}function yW(e,t,n,r,a){if(1===n)return{real:e,imag:t};let s=tw.mergeRealAndImagArrays(e,t),i=n/2,o=tw.complexWithEvenIndex(s),l=o.real,u=o.imag,h=[l.length],p=a.makeTensorInfo(h,"float32",l),d=a.makeTensorInfo(h,"float32",u),c=EO({inputs:{real:p,imag:d},backend:a}),f=tw.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),w=EO({inputs:{real:b,imag:x},backend:a}),v=yW(l,u,i,r,a),k=v.real,I=v.imag,S=[k.length],N=a.makeTensorInfo(S,"float32",k),T=a.makeTensorInfo(S,"float32",I),C=EO({inputs:{real:N,imag:T},backend:a}),_=yW(m,g,i,r,a),E=_.real,$=_.imag,A=[E.length],R=a.makeTensorInfo(A,"float32",E),F=a.makeTensorInfo(A,"float32",$),D=EO({inputs:{real:R,imag:F},backend:a}),M=tw.exponents(n,r),O=[M.real.length],L=a.makeTensorInfo(O,"float32",M.real),z=a.makeTensorInfo(O,"float32",M.imag),P=EO({inputs:{real:L,imag:z},backend:a}),B=PL({inputs:{a:P,b:D},backend:a}),W=UO({inputs:{a:C,b:B},backend:a}),V=Vz({inputs:{a:C,b:B},backend:a}),U=DO({inputs:{input:W},backend:a}),G=DO({inputs:{input:V},backend:a}),H=lB({inputs:{input:W},backend:a}),j=lB({inputs:{input:V},backend:a}),q=hB({inputs:[U,G],backend:a,attrs:{axis:0}}),K=hB({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}function bW(e,t,n){let r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){let o=tw.exponent(a*r,t,n),l=tw.getComplexWithIndex(e,r);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),tw.assignToTypedArray(r,s,i,a)}return r}function xW(e){let{inputs:t,backend:n}=e,{input:r}=t,a=Ra.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=a/s,o=oP({inputs:{x:r},backend:n,attrs:{shape:[i,s]}}),l=fW(o,!1,n),u=oP({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}var wW={kernelName:hn,backendName:"cpu",kernelFunc:xW};function vW(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||Ra.inferDtype(a),o=Ra.getArrayFromDType(i,Ra.sizeFromShape(r));return IW(o,a,i),t.makeTensorInfo(r,i,o)}var kW={kernelName:pn,backendName:"cpu",kernelFunc:vW};function IW(e,t,n){e.fill(t)}var SW={kernelName:dn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,a=n,s=Ra.getTypedArrayFromDType(r.dtype,Ra.sizeFromShape(r.shape)),[i,o,l,u]=r.shape,h=a.data.get(r.dataId).values;for(let p=0;p<i;p++){let e=p*l*o*u;for(let t=0;t<o;t++){let n=t*(l*u);for(let t=0;t<l;t++){let r=t*u;for(let a=0;a<u;a++){let i=Math.round(l-t-1),o=e+n+r+a,p=h[o];if(i>=0&&i<l){let t=i*u,r=e+n+t+a;p=h[r]}s[o]=p}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},NW=_O(((e,t)=>Math.floor(e/t))),TW=PO(fn,NW,null,"int32"),CW={kernelName:fn,backendName:"cpu",kernelFunc:TW};function _W(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=dB({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d}});if(i){let e=m;if("NCHW"===h&&1===i.shape.length&&1!==i.shape[0]){let e=oP({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=UO({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=UO({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(c){let e=m;if("NCHW"===h&&"prelu"===c&&1===o.shape.length&&1!==o.shape[0]){let e=oP({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=iP(n,m,c,e,f),n.disposeIntermediateTensorInfo(e)}else m=iP(n,m,c,o,f);n.disposeIntermediateTensorInfo(e)}return m}var EW={kernelName:ya,backendName:"cpu",kernelFunc:_W};function $W(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=zB({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d}});if(i){let e=m;m=UO({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=iP(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}var AW={kernelName:ba,backendName:"cpu",kernelFunc:$W};function RW(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=Ra.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,u,h,p]=tw.prepareAndValidate(r,a);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);let d=n.data.get(a.dataId).values,c=n.bufferSync(r),f=dL(d,c,r.dtype,u,o,h,p,r.shape,s);return n.makeTensorInfo(l,r.dtype,f.values)}var FW={kernelName:yn,backendName:"cpu",kernelFunc:RW};function DW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;vO([a,s],"gatherV2");let l=Ra.parseAxisParam(i,a.shape)[0],u=n.data.get(s.dataId).values,h=a.shape[l];for(let w=0;w<u.length;++w){let e=u[w];Ra.assert(e<=h-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${h-1}]`))}let p=o;null==o&&(p=0);let d=Ra.sizeFromShape(s.shape),c=tw.segment_util.collectGatherOpShapeInfo(a,s,l,p),f=oP({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=oP({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}}),g=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize],y=n.bufferSync(m),b=n.bufferSync(f),x=cL(b,y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(c.outputShape,x.dtype,x.values)}var MW={kernelName:gn,backendName:"cpu",kernelFunc:DW};function OW(e){let{inputs:t,backend:n}=e,{input:r}=t,a=Ra.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=a/s,o=oP({inputs:{x:r},backend:n,attrs:{shape:[i,s]}}),l=fW(o,!0,n),u=oP({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}var LW={kernelName:vn,backendName:"cpu",kernelFunc:OW},zW=KO(In,(e=>Number.isFinite(e)?1:0),"bool"),PW={kernelName:In,backendName:"cpu",kernelFunc:zW},BW=KO(Sn,(e=>Math.abs(e)===1/0?1:0),"bool"),WW={kernelName:Sn,backendName:"cpu",kernelFunc:BW},VW=KO(Nn,(e=>Number.isNaN(e)?1:0),"bool"),UW={kernelName:Nn,backendName:"cpu",kernelFunc:VW};function GW(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=TL(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}var HW={kernelName:En,backendName:"cpu",kernelFunc:GW},jW=KO(An,(e=>Math.log1p(e))),qW={kernelName:An,backendName:"cpu",kernelFunc:jW},KW=_O(((e,t)=>e&&t)),XW=PO(Rn,KW,null,"bool"),YW={kernelName:Rn,backendName:"cpu",kernelFunc:XW},ZW=KO(Fn,(e=>e?0:1),"bool"),JW={kernelName:Fn,backendName:"cpu",kernelFunc:ZW},QW=_O(((e,t)=>e||t)),eV=PO(Dn,QW,null,"bool"),tV={kernelName:Dn,backendName:"cpu",kernelFunc:eV};function nV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;vO(a,"LRN");let u=a.shape[3],h=u-1,p=n.data.get(a.dataId).values,d=Ra.sizeFromShape(a.shape),c=new Float32Array(d);function f(e){let t=e%u,n=e-t+Math.max(0,t-s),r=e-t+Math.min(t+s,h),a=0;for(;n<=r;n++){let e=p[n];a+=e*e}return a}for(let m=0;m<d;m++){let e=f(m),t=p[m]*Math.pow(i+o*e,-l);c[m]=t}return n.makeTensorInfo(a.shape,a.dtype,c)}var rV={kernelName:zn,backendName:"cpu",kernelFunc:nV};function aV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:h}=r;vO(i,"LRNGrad");let p=Ra.sizeFromShape(i.shape),d=i.shape[3],c=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(p),y=p;for(let b=0;b<y;b++){let e=b%d,t=b-e+Math.max(0,e-o),n=b-e+Math.min(d,e+o+1),r=0;for(let a=t;a<n;a++)r+=Math.pow(f[a],2);r=u*r+l;for(let a=t;a<n;a++){let e=-2*u*h*f[a]*m[b]/r;b===a&&(e+=Math.pow(r,-h)),e*=c[b],g[a]+=e}}return n.makeTensorInfo(i.shape,a.dtype,g)}var sV={kernelName:Pn,backendName:"cpu",kernelFunc:aV};function iV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,l=a.shape,u=l.length,h=Ra.parseAxisParam(s,l),p=h,d=tw.getAxesPermutation(p,u),c=o.data.get(a.dataId).values;if(null!=d){let e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];c=qL(c,l,a.dtype,d,e),p=tw.getInnerMostAxes(p.length,u),l=e}vO(a,"max"),tw.assertAxesAreInnerMostDims("max",p,u);let[f,m]=tw.computeOutAndReduceShapes(l,p),g=Ra.sizeFromShape(m),y=$L(c,g,f,a.dtype),b=o.write(y,f,a.dtype),x=f;return i&&(x=tw.expandShapeToKeepDim(f,h)),{dataId:b,shape:x,dtype:a.dtype}}var oV={kernelName:Bn,backendName:"cpu",kernelFunc:iV};function lV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;vO(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;Ra.assert(tw.eitherStridesOrDilationsAreOne(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));let h,p=tw.computePool2DInfo(a.shape,s,i,u,o,l);if(1===p.filterWidth&&1===p.filterHeight&&Ra.arraysEqual(p.inShape,p.outShape))h=RO({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=Ra.computeStrides(a.shape),r=zP(e,a.shape,a.dtype,t,p,"max");h=n.makeTensorInfo(p.outShape,a.dtype,r.values)}return h}var uV={kernelName:Vn,backendName:"cpu",kernelFunc:lV};function hV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;vO(a,"maxPool3d");let h=tw.computePool3DInfo(a.shape,s,i,1,o,l,u),p=n.data.get(a.dataId).values,d=BP(p,a.shape,a.dtype,Ra.computeStrides(a.shape),h,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}var pV={kernelName:Gn,backendName:"cpu",kernelFunc:hV};function dV(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;vO([a,s],"maxPool3DGrad");let h=tw.computePool3DInfo(s.shape,i,o,1,l,u),p=n.bufferSync(s),d=WP(p,h),c=h.strideDepth,f=h.strideHeight,m=h.strideWidth,g=h.dilationDepth,y=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterDepth,w=h.effectiveFilterHeight,v=h.effectiveFilterWidth,k=x-1-h.padInfo.front,I=v-1-h.padInfo.left,S=w-1-h.padInfo.top,N=No(s.shape,"float32"),T=n.bufferSync(a);for(let C=0;C<h.batchSize;++C)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inDepth;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){let a=t-k,s=n-S,i=r-I,o=0;for(let t=0;t<x;t+=g){let n=(a+t)/c;if(!(n<0||n>=h.outDepth||Math.floor(n)!==n))for(let r=0;r<w;r+=y){let a=(s+r)/f;if(!(a<0||a>=h.outHeight||Math.floor(a)!==a))for(let s=0;s<v;s+=b){let l=(i+s)/m;if(l<0||l>=h.outWidth||Math.floor(l)!==l)continue;let u=x*w*v-1-d.get(C,n,a,l,e),p=t*w*v+r*v+s,c=u===p?1:0;if(0===c)continue;let f=T.get(C,n,a,l,e);o+=f*c}}}N.set(o,C,t,n,r,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}var cV={kernelName:Hn,backendName:"cpu",kernelFunc:dV};function fV(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;vO([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:h,dimRoundingMode:p}=r,d=tw.computePool2DInfo(o.shape,l,u,1,h,p),c=n.data.get(o.dataId).values,f=No(d.outShape,o.dtype,PP(c,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,k=x-1-d.padInfo.top,I=No(o.shape,"float32"),S=n.data.get(a.dataId).values,N=No(a.shape,"float32",S);for(let T=0;T<d.batchSize;++T)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){let r=t-k,a=n-v,s=0;for(let t=0;t<x;t+=y){let n=(r+t)/m;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let r=0;r<w;r+=b){let i=(a+r)/g;if(i<0||i>=d.outWidth||Math.floor(i)!==i)continue;let o=x*w-1-f.get(T,n,i,e),l=t*w+r,u=o===l?1:0;if(0===u)continue;let h=N.get(T,n,i,e);s+=h*u}}I.set(s,T,t,n,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}var mV={kernelName:Un,backendName:"cpu",kernelFunc:fV};function gV(e,t,n,r,a){let s=Ra.computeStrides(t),i=zP(e,t,n,s,a,"max"),o=PP(e,t,n,a,!0,r);return[i.values,o.values]}var yV={kernelName:jn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;vO(r,"MaxPoolWithArgmax");let u=l.data.get(r.dataId).values,h=tw.computePool2DInfo(r.shape,a,s,[1,1],i),[p,d]=gV(u,r.shape,r.dtype,o,h),c=l.write(p,h.outShape,r.dtype),f=l.write(d,h.outShape,r.dtype);return[{dataId:c,shape:h.outShape,dtype:r.dtype},{dataId:f,shape:h.outShape,dtype:"int32"}]}};function bV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=Ra.parseAxisParam(s,a.shape),l=tw.computeOutAndReduceShapes(a.shape,o)[1],u=Ra.sizeFromShape(l),h=[],p=n.makeTensorInfo([],"float32",new Float32Array([u]));h.push(p);let d=LO({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});h.push(d);let c=dW({inputs:{a:d,b:p},backend:n});h.push(c);let f=XB({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var xV={kernelName:qn,backendName:"cpu",kernelFunc:bV};function wV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;vO(a,"min");let o=Ra.parseAxisParam(s,a.shape),l=o,u=tw.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=KL({inputs:{x:a},backend:n,attrs:{perm:u}}),l=tw.getInnerMostAxes(l.length,a.shape.length)),tw.assertAxesAreInnerMostDims("min",l,h.shape.length);let[p,d]=tw.computeOutAndReduceShapes(h.shape,l),c=Ra.sizeFromShape(d),f=Ra.makeZerosTypedArray(Ra.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let y=0;y<f.length;++y){let e=y*c,t=m[e];for(let n=0;n<c;++n){let r=m[e+n];(Number.isNaN(r)||r<t)&&(t=r)}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=tw.expandShapeToKeepDim(p,o),t=oP({inputs:{x:g},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(g),t}return g}var vV={kernelName:Kn,backendName:"cpu",kernelFunc:wV};function kV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;vO(a,"mirrorPad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=s.map(((e,t)=>e[0]+a.shape[t])),h="reflect"===i?0:1,p=n.data.get(a.dataId).values,d=a.shape.length,c=Ra.computeStrides(a.shape),f=Ra.sizeFromShape(o),m=o.length,g=Ra.computeStrides(o),y=Ra.getTypedArrayFromDType(a.dtype,f);for(let b=0;b<f;b++){let e=Ra.indexToLoc(b,m,g);for(let n=0;n<m;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-h:e[n]>=u[n]&&(e[n]=2*(u[n]-1)-e[n]+h);e=e.map(((e,t)=>e-l[t]));let t=Ra.locToIndex(e,d,c);y[b]=p[t]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}var IV={kernelName:Yn,backendName:"cpu",kernelFunc:kV},SV=_O(((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),NV=PO(Zn,SV),TV={kernelName:Zn,backendName:"cpu",kernelFunc:NV},CV=E(W());function _V(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=Ra.parseAxisParam([o],a.shape),u=iV({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),h=tw.expandShapeToKeepDim(u.shape,l),p=oP({inputs:{x:u},backend:n,attrs:{shape:h}}),d=Vz({inputs:{a:a,b:p},backend:n}),c=aL({inputs:{x:d},backend:n}),f=XB({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),m=oP({inputs:{x:f},backend:n,attrs:{shape:h}}),g=dW({inputs:{a:c,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var EV={kernelName:Ur,backendName:"cpu",kernelFunc:_V};function $V(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;vO(a,"multinomial");let l=o?a:_V({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],h=l.shape[1],p=n.data.get(l.dataId).values,d=[u,s],c=Ra.makeZerosTypedArray(Ra.sizeFromShape(d),"int32");for(let f=0;f<u;++f){let e=f*h,t=new Float32Array(h-1);t[0]=p[e];for(let a=1;a<t.length;++a)t[a]=t[a-1]+p[e+a];let n=CV.alea(i.toString()),r=f*s;for(let a=0;a<s;++a){let e=n();c[r+a]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){c[r+a]=n;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",c)}var AV={kernelName:Jn,backendName:"cpu",kernelFunc:$V},RV=ov.nonMaxSuppressionV3Impl;function FV(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;vO(a,"NonMaxSuppression");let u=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:p}=RV(u,h,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var DV={kernelName:nr,backendName:"cpu",kernelFunc:FV},MV=ov.nonMaxSuppressionV4Impl;function OV(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;vO(a,"NonMaxSuppressionPadded");let h=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:c}=MV(h,p,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}var LV={kernelName:rr,backendName:"cpu",kernelFunc:OV},zV=ov.nonMaxSuppressionV5Impl;function PV(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;vO(a,"NonMaxSuppressionWithScore");let h=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=zV(h,p,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var BV={kernelName:ar,backendName:"cpu",kernelFunc:PV};function WV(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r;vO(a,"oneHot");let u=Ra.sizeFromShape(a.shape),h=new Float32Array(u*i);h.fill(l);let p=n.data.get(a.dataId).values;for(let d=0;d<u;++d)p[d]>=0&&p[d]<i&&(h[d*i+p[d]]=o);return n.makeTensorInfo([...a.shape,i],s,h)}var VV={kernelName:ir,backendName:"cpu",kernelFunc:WV};function UV(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){let e=DO({inputs:{input:r},backend:n}),t=UV({inputs:{x:e},backend:n}),a=lB({inputs:{input:r},backend:n}),s=UV({inputs:{x:a},backend:n}),i=EO({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return vW({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var GV={kernelName:da,backendName:"cpu",kernelFunc:UV};function HV(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){let e=DO({inputs:{input:r},backend:n}),t=HV({inputs:{x:e},backend:n}),a=lB({inputs:{input:r},backend:n}),s=UV({inputs:{x:a},backend:n}),i=EO({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return vW({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}var jV={kernelName:sr,backendName:"cpu",kernelFunc:HV};function qV(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return uW({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{Ra.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Ra.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=t.map((e=>{let t=uW({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),u=hB({inputs:l,backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}var KV={kernelName:or,backendName:"cpu",kernelFunc:qV};function XV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;vO(a,"pad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=n.data.get(a.dataId).values,h=Ra.sizeFromShape(a.shape),p=a.shape.length,d=Ra.computeStrides(a.shape),c=Ra.sizeFromShape(o),f=o.length,m=Ra.computeStrides(o),g=Ra.getTypedArrayFromDType(a.dtype,c);0!==i&&g.fill(i);for(let y=0;y<h;y++){let e=Ra.indexToLoc(y,p,d).map(((e,t)=>e+l[t])),t=Ra.locToIndex(e,f,m);g[t]=u[y]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}var YV={kernelName:lr,backendName:"cpu",kernelFunc:XV},ZV=_O(((e,t)=>Math.pow(e,t))),JV=PO(hr,ZV),QV={kernelName:hr,backendName:"cpu",kernelFunc:JV};function eU(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map((e=>n.data.get(e.dataId).values)),u=a.map((e=>e.shape)),h=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values,[d,c,f]=iz(l,u,h,s.shape,s.dtype,p,i.shape,o),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,c);return m.concat([g])}var tU={kernelName:cr,backendName:"cpu",kernelFunc:eU};function nU(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,h]=lz(i,r.shape,r.dtype,o,a.shape,l,s.shape),p=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([h.length],r.dtype,h);return[p,d]}var rU={kernelName:fr,backendName:"cpu",kernelFunc:nU};function aU(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),c=o.map((e=>e.shape)),[f,m]=cz(u,a.shape,h,s.shape,s.dtype,p,i.shape,d,c,l);return n.makeTensorInfo(f,s.dtype,m)}var sU={kernelName:mr,backendName:"cpu",kernelFunc:aU};function iU(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=fz(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}var oU={kernelName:gr,backendName:"cpu",kernelFunc:iU},lU=KO(br,(e=>1/e)),uU={kernelName:br,backendName:"cpu",kernelFunc:lU};function hU(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;vO(a,"resizeBilinear");let l=Ra.computeStrides(a.shape),[u,h]=o,[p,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(Ra.sizeFromShape([p,u,h,f])),y=[s&&u>1?d-1:d,s&&h>1?c-1:c],b=[s&&u>1?u-1:u,s&&h>1?h-1:h],x=0,w=y[0]/b[0],v=y[1]/b[1];for(let k=0;k<p;k++)for(let e=0;e<u;e++){let t;t=i?w*(e+.5)-.5:w*e;let n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(d-1,Math.ceil(t)),s=k*l[0]+n*l[1],o=k*l[0]+a*l[1];for(let e=0;e<h;e++){let t;t=i?v*(e+.5)-.5:v*e;let n=Math.max(0,Math.floor(t)),a=t-n,u=Math.min(c-1,Math.ceil(t)),h=s+n*l[2],p=o+n*l[2],d=s+u*l[2],y=o+u*l[2];for(let e=0;e<f;e++){let t=m[h+e],n=m[p+e],s=m[d+e],i=m[y+e],o=t+(s-t)*a,l=n+(i-n)*a,u=o+(l-o)*r;g[x++]=u}}}return n.makeTensorInfo([p,u,h,f],"float32",g)}var pU={kernelName:Ir,backendName:"cpu",kernelFunc:hU};function dU(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;vO([s,a],"resizeBilinearGrad");let o=Ra.computeStrides(a.shape),[l,u,h,p]=a.shape,[,d,c]=s.shape,f=new Float32Array(l*u*h*p),m=[i&&d>1?u-1:u,i&&c>1?h-1:h],g=[i&&d>1?d-1:d,i&&c>1?c-1:c],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values,w=0;for(let v=0;v<l;v++){let e=v*o[0];for(let t=0;t<d;t++){let n=t*y,r=Math.floor(n),a=Math.min(Math.ceil(n),u-1),s=e+r*o[1],i=e+a*o[1],l=n-r,d=1-l;for(let e=0;e<c;e++){let t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),h-1),a=t-n,u=1-a,c=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],v=d*u,k=d*a,I=l*u,S=l*a;for(let e=0;e<p;e++){let t=x[w++];f[c+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([l,h,u,p],"float32",f)}var cU={kernelName:Sr,backendName:"cpu",kernelFunc:dU};function fU(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;vO(a,"resizeNearestNeighbor");let l=Ra.computeStrides(a.shape),[u,h]=o,[p,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(p*u*h*f),y=[s&&u>1?d-1:d,s&&h>1?c-1:c],b=[s&&u>1?u-1:u,s&&h>1?h-1:h],x=y[0]/b[0],w=y[1]/b[1],v=0;for(let k=0;k<p;k++){let e=k*l[0];for(let t=0;t<u;t++){let n=i?x*(t+.5):x*t,r=Math.min(d-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));let a=e+r*l[1];for(let e=0;e<h;e++){let t=i?w*(e+.5):w*e,n=Math.min(c-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));let r=a+n*l[2];for(let e=0;e<f;e++){let t=m[r+e];g[v++]=t}}}}return n.makeTensorInfo([p,u,h,f],a.dtype,g)}var mU={kernelName:vr,backendName:"cpu",kernelFunc:fU};function gU(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;vO([s,a],"resizeNearestNeighborGrad");let o=Ra.computeStrides(a.shape),l=Ra.computeStrides(s.shape),[u,h,p,d]=a.shape,[,c,f]=s.shape,m=new Float32Array(u*h*p*d),g=n.data.get(s.dataId).values,y=[i&&c>1?h-1:h,i&&f>1?p-1:p],b=[i&&c>1?c-1:c,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,S=2*Math.ceil(k)+2;for(let N=0;N<u;N++){let e=N*o[0];for(let t=0;t<h;t++){let n=e+t*o[1],r=Math.floor(t*v),a=Math.floor(r-I/2);for(let s=0;s<p;s++){let r=n+s*o[2],u=Math.floor(s*k),y=Math.floor(u-S/2);for(let n=0;n<d;n++){let o=0;for(let r=0;r<I;r++){let u=r+a;if(u<0||u>=c)continue;let d=e+u*l[1],m=u*x,b=Math.min(h-1,i?Math.round(m):Math.floor(m));if(t===b)for(let e=0;e<S;e++){let t=e+y;if(t<0||t>=f)continue;let r=d+t*l[2],a=t*w,u=Math.min(p-1,i?Math.round(a):Math.floor(a));s===u&&(o+=g[r+n])}}m[r+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}var yU={kernelName:kr,backendName:"cpu",kernelFunc:gU};function bU(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;vO(a,"reverse");let i=a.shape.length,o=Ra.parseAxisParam(s,a.shape);if(0===i)return RO({inputs:{x:a},backend:n});let l=new ws(a.shape,a.dtype),u=n.bufferSync(a);for(let h=0;h<l.size;h++){let e=l.indexToLoc(h),t=e.slice();o.forEach((e=>t[e]=a.shape[e]-1-t[e])),l.set(u.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var xU={kernelName:Tr,backendName:"cpu",kernelFunc:bU},wU={kernelName:ma,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=Ra.getTypedArrayFromDType(r.dtype,Ra.sizeFromShape(r.shape)),[u,h,p,d]=r.shape,[c,f]=tw.getImageCenter(i,h,p),m=255,g=Math.sin(a),y=Math.cos(a),b=o.data.get(r.dataId).values;for(let x=0;x<u;x++){let e=x*p*h*d;for(let t=0;t<h;t++){let n=t*(p*d);for(let r=0;r<p;r++){let a=r*d;for(let i=0;i<d;i++){let o=[u,t,r,i],x=o[2],w=o[1],v=(x-c)*y-(w-f)*g,k=(x-c)*g+(w-f)*y;v=Math.round(v+c),k=Math.round(k+f);let I=s;if("number"!=typeof s&&(I=3===i?m:s[i]),v>=0&&v<p&&k>=0&&k<h){let t=k*(p*d),n=v*d,r=e+t+n+i;I=b[r]}let S=e+n+a+i;l[S]=I}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},vU=KO(Cr,(e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),kU={kernelName:Cr,backendName:"cpu",kernelFunc:vU};function IU(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:p}=tw.calculateShapes(s,a,i),d=!0,c=n.bufferSync(a),f=n.bufferSync(s),m=bz(c,f,i,p,u,l,o,h,0,d);return n.makeTensorInfo(i,m.dtype,m.values)}var SU={kernelName:Er,backendName:"cpu",kernelFunc:IU};function NU(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function TU(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}function CU(e,t,n,r,a,s){let i=Ra.getArrayFromDType("int32",n*a);for(let o=0;o<n;++o){let n=e.slice(o*r,(o+1)*r),l=o*a;for(let e=0;e<a;++e)i[l+e]="left"===s?NU(n,t[e+l]):TU(n,t[e+l])}return i}function _U(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,u=CU(o,l,a.shape[0],a.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",u)}var EU={kernelName:$r,backendName:"cpu",kernelFunc:_U};function $U(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;vO([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,h=Os(a.dtype,s.dtype),p=Ra.makeZerosTypedArray(Ra.sizeFromShape(a.shape),h),d=0,c=0===i||i>1||1===a.shape.length?1:Ra.sizeFromShape(a.shape.slice(1));for(let f=0;f<o.length;f++)for(let e=0;e<c;e++)1===o[f]?p[d++]=l[f]:p[d++]=u[f];return n.makeTensorInfo(a.shape,h,p)}var AU={kernelName:Ar,backendName:"cpu",kernelFunc:$U},RU=tw.SELU_SCALEALPHA,FU=tw.SELU_SCALE,DU=KO(Rr,(e=>e>=0?FU*e:RU*(Math.exp(e)-1))),MU={kernelName:Rr,backendName:"cpu",kernelFunc:DU},OU=KO(Or,(e=>e<0?-1:e>0?1:0)),LU={kernelName:Or,backendName:"cpu",kernelFunc:OU},zU=KO(Dr,(e=>Math.sin(e))),PU={kernelName:Dr,backendName:"cpu",kernelFunc:zU},BU=KO(Mr,(e=>Math.sinh(e))),WU={kernelName:Mr,backendName:"cpu",kernelFunc:BU},VU=1.1920928955078125e-7,UU=Math.log(VU)+2,GU=KO(zr,(e=>{let t,n=e>-UU,r=e<UU,a=Math.exp(e);return t=r?a:n?e:Math.log(1+a),t})),HU={kernelName:zr,backendName:"cpu",kernelFunc:GU};function jU(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;vO([a],"spaceToBatchND");let o=Ra.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let u=YV.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=tw.getReshaped(u.shape,s,o,!1),p=tw.getPermuted(h.length,s.length,!1),d=tw.getReshapedPermuted(u.shape,s,o,!1),c=oP({inputs:{x:u},backend:n,attrs:{shape:h}}),f=KL({inputs:{x:c},backend:n,attrs:{perm:p}}),m=oP({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}var qU={kernelName:Wr,backendName:"cpu",kernelFunc:jU};function KU(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values[0],[p,d,c,f,m]=Nz(o,r.shape,r.dtype,l,a.dtype,u,h);return[n.makeTensorInfo(d,r.dtype,p),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}var XU={kernelName:Gr,backendName:"cpu",kernelFunc:KU};function YU(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,h,p]=Tz(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(h,r.dtype,u),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var ZU={kernelName:Hr,backendName:"cpu",kernelFunc:YU};function JU(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,h]=Cz(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(h,r.dtype,u)}var QU={kernelName:jr,backendName:"cpu",kernelFunc:JU};function eG(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,h]=Cz(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(h,r.dtype,u)}var tG={kernelName:qr,backendName:"cpu",kernelFunc:eG};function nG(e){let t,{inputs:n,backend:r,attrs:a}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=n,{outputShape:l}=a,{sliceRank:u,numUpdates:h,sliceSize:p,strides:d,outputSize:c}=tw.calculateShapes(i,s,l),f=!1,m=r.bufferSync(s);switch(i.dtype){case"bool":{let e=r.bufferSync(i),n=Boolean(r.data.get(o.dataId).values[0]);t=bz(m,e,l,c,p,h,u,d,n,f);break}case"float32":{let e=r.bufferSync(i),n=r.data.get(o.dataId).values[0];t=bz(m,e,l,c,p,h,u,d,n,f);break}case"int32":{let e=r.bufferSync(i),n=r.data.get(o.dataId).values[0];t=bz(m,e,l,c,p,h,u,d,n,f);break}case"string":{let e=r.bufferSync(i),n=Ra.decodeString(r.data.get(o.dataId).values[0]);t=bz(m,e,l,c,p,h,u,d,n,f);break}default:throw new Error(`Unsupported type ${i.dtype}`)}return r.makeTensorInfo(l,t.dtype,t.values)}var rG={kernelName:Kr,backendName:"cpu",kernelFunc:nG};function aG(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=Ra.parseAxisParam(i,a.shape)[0],l=tw.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),h=a.shape.slice();return l.map((e=>{let t=[...h];t[o]=e;let r=Iz({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}var sG={kernelName:Vr,backendName:"cpu",kernelFunc:aG},iG={kernelName:Yr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;vO(n,"square");let a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let i=0;i<a.length;++i){let e=a[i];s[i]=e*e}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},oG=KO(ca,((e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),lG={kernelName:ca,backendName:"cpu",kernelFunc:oG};function uG(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:d}=r;vO(a,"stridedSlice");let c,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:w,strides:v}=_x.sliceInfo(a.shape,s,i,o,l,u,h,p,d);if(g)c=oP({inputs:{x:a},backend:n,attrs:{shape:m}});else if(y||b){Ra.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));let e=_x.computeOutShape(x,w,v),t=Iz({inputs:{x:a},backend:n,attrs:{begin:x,size:e}});c=oP({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{let e=n.bufferSync(a),t=Dz(f,e,v,x);c=n.makeTensorInfo(m,t.dtype,t.values)}return c}var hG={kernelName:Zr,backendName:"cpu",kernelFunc:uG};function pG(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:h,dataSplits:p}=t,d=n.data.get(h.dataId).values,c=n.data.get(p.dataId).values,[f,m]=Oz(d,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}var dG={kernelName:Jr,backendName:"cpu",kernelFunc:pG};function cG(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,h,p]=zz(o,l,a),d=h.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",h),n.makeTensorInfo([2],"int32",new Int32Array(p))]}var fG={kernelName:Qr,backendName:"cpu",kernelFunc:cG};function mG(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.data.get(s.dataId).values,o=Pz(i,a);return n.makeTensorInfo(s.shape,"int32",o)}var gG={kernelName:ea,backendName:"cpu",kernelFunc:mG},yG=KO(na,(e=>Math.tan(e))),bG={kernelName:na,backendName:"cpu",kernelFunc:yG},xG=KO(ra,(e=>Math.tanh(e))),wG={kernelName:ra,backendName:"cpu",kernelFunc:xG};function vG(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;vO(a,"tile");let i=Gz(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}var kG={kernelName:aa,backendName:"cpu",kernelFunc:vG};function IG(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;vO(a,"topk");let o=n.data.get(a.dataId).values,[l,u]=qz(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}var SG={kernelName:sa,backendName:"cpu",kernelFunc:IG};function NG(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[h,p,d,c]=a.shape,[f,m]=null!=u?u:[p,d],g=[h,f,m,c],y=Ra.computeStrides(a.shape),b=y[0],x=y[1],w=y[2],v=Ra.computeStrides(g),k=v[0],I=v[1],S=v[2],N=Ra.getTypedArrayFromDType(a.dtype,Ra.sizeFromShape(g));N.fill(l);let T=r.data.get(a.dataId).values,C=r.data.get(s.dataId).values;for(let _=0;_<h;++_){let e=1===s.shape[0]?C:C.subarray(8*_,8*_+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let r=0;r<c;++r){let a,s=e[6]*n+e[7]*t+1;if(0===s)continue;let u=(e[0]*n+e[1]*t+e[2])/s,h=(e[3]*n+e[4]*t+e[5])/s,c=CG(u,d,o),f=CG(h,p,o);switch(i){case"nearest":a=FG(T,p,d,b,x,w,_,f,c,r,l);break;case"bilinear":a=DG(T,p,d,b,x,w,_,f,c,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let m=_*k+t*I+n*S+r;N[m]=a}return r.makeTensorInfo(g,a.dtype,N)}return{dataId:r.write(N,g,a.dtype),shape:a.shape,dtype:a.dtype}}var TG={kernelName:ia,backendName:"cpu",kernelFunc:NG};function CG(e,t,n){switch(n){case"reflect":return _G(e,t);case"wrap":return EG(e,t);case"nearest":return AG(e,t);case"constant":default:return $G(e,t)}}function _G(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{let e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return Ra.clamp(0,n,t-1)}function EG(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{let e=t-1;n-=t*Math.trunc(n/e)}return Ra.clamp(0,n,t-1)}function $G(e,t){return e}function AG(e,t){return Ra.clamp(0,e,t-1)}function RG(e,t,n,r,a,s,i,o,l,u,h){let p=i*r+o*a+l*s+u;return 0<=o&&o<t&&0<=l&&l<n?e[p]:h}function FG(e,t,n,r,a,s,i,o,l,u,h){let p=Math.round(o),d=Math.round(l);return RG(e,t,n,r,a,s,i,p,d,u,h)}function DG(e,t,n,r,a,s,i,o,l,u,h){let p=Math.floor(o),d=Math.floor(l),c=p+1,f=d+1,m=(f-l)*RG(e,t,n,r,a,s,i,p,d,u,h)+(l-d)*RG(e,t,n,r,a,s,i,p,f,u,h),g=(f-l)*RG(e,t,n,r,a,s,i,c,d,u,h)+(l-d)*RG(e,t,n,r,a,s,i,c,f,u,h);return(c-o)*m+(o-p)*g}function MG(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;vO(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=Kz(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}var OG={kernelName:la,backendName:"cpu",kernelFunc:MG};function LG(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),u=0;for(let c=0;c<i;c++)c!==s&&(l[u++]=a.shape[c]);let h=new Array(i).fill(0),p=a.shape.slice();p[s]=1;let d=new Array(o);for(let c=0;c<d.length;c++){h[s]=c;let e=Iz({inputs:{x:a},backend:n,attrs:{begin:h,size:p}});d[c]=oP({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return d}var zG={kernelName:ua,backendName:"cpu",kernelFunc:LG};function PG(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;vO(a,"unsortedSegmentSum");let o=a.shape.length,l=s.shape.length,u=[],h=[],p=o-l,d=s;for(let f=0;f<p;++f){let e=uW({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=e,h.push(e)}for(let f=0;f<i;++f){let e=Ra.createScalarValue(f,"int32"),t=n.makeTensorInfo([],"int32",e),r=tL({inputs:{a:t,b:d},backend:n}),s=LO({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),i=PL({inputs:{a:s,b:a},backend:n}),o=XB({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});u.push(o),h.push(t),h.push(r),h.push(s),h.push(i),h.push(o)}let c=qV({inputs:u,backend:n,attrs:{axis:0}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}var BG={kernelName:ha,backendName:"cpu",kernelFunc:PG},WG=[dP,CO,fP,gP,GO,bP,wP,kP,SP,TP,_P,$P,RP,MP,LP,UP,HP,qP,XP,hP,ZP,QP,tB,rB,zO,JO,sB,$O,oB,pB,cB,mB,yB,xB,vB,IB,NB,CB,EB,AB,FB,MB,LB,PB,WB,UB,HB,jB,qB,KB,JB,Yz,eW,nL,lW,sL,hW,lL,wW,kW,SW,pL,CW,EW,AW,FW,MW,gL,xL,FO,LW,uB,PW,WW,UW,Jz,kL,NL,HW,EL,qW,YW,JW,tV,rV,sV,oV,FL,uV,pV,cV,mV,yV,xV,vV,OL,IV,TV,AV,BL,UL,DV,LV,BV,jL,VV,jV,KV,YV,QV,tP,JL,tU,rU,sU,oU,MO,cW,uU,rP,sP,lP,pU,cU,mU,yU,xU,wU,kU,yz,SU,EU,AU,MU,vz,LU,PU,WU,Sz,EV,HU,qU,XU,ZU,QU,tG,rG,sG,$z,iG,Fz,lG,hG,dG,fG,gG,Uz,YB,bG,wG,kG,SG,TG,XL,OG,zG,BG,GV];for(let Gse of WG)Ta(Gse);var VG={};C(VG,{assertNotComplex:()=>rj,bindCanvasToFramebuffer:()=>RH,bindColorTextureToFramebuffer:()=>FH,bindTextureToProgramUniformSampler:()=>AH,bindTextureUnit:()=>CH,bindVertexBufferToProgramAttribute:()=>TH,callAndCheck:()=>aH,canBeRepresented:()=>lH,createFragmentShader:()=>dH,createFramebuffer:()=>NH,createProgram:()=>yH,createStaticIndexBuffer:()=>vH,createStaticVertexBuffer:()=>wH,createTexture:()=>IH,createVertexShader:()=>pH,getBatchDim:()=>PH,getExtensionOrThrow:()=>hH,getFramebufferErrorMessage:()=>OH,getMaxTexturesInShader:()=>KH,getNumChannels:()=>kH,getProgramUniformLocation:()=>$H,getProgramUniformLocationOrThrow:()=>EH,getRowsCols:()=>BH,getShapeAs3D:()=>WH,getTextureShapeFromLogicalShape:()=>VH,getWebGLDisjointQueryTimerVersion:()=>XH,getWebGLErrorMessage:()=>uH,getWebGLMaxTextureSize:()=>HH,hasExtension:()=>YH,isCapableOfRenderingToFloatTexture:()=>JH,isDownloadFloatTextureEnabled:()=>QH,isReshapeFree:()=>GH,isWebGLFenceEnabled:()=>nj,isWebGLVersionEnabled:()=>ZH,linkProgram:()=>bH,logShaderSourceAndInfoLog:()=>gH,resetMaxTextureSize:()=>jH,resetMaxTexturesInShader:()=>qH,unbindColorTextureFromFramebuffer:()=>DH,unbindTextureUnit:()=>_H,validateFramebuffer:()=>MH,validateProgram:()=>xH,validateTextureSize:()=>SH});var UG,GG,HG,jG={},qG={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function KG(e,t){jG[e]=t}function XG(e,t){if(!(e in jG)||null!=t){let n=ZG(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;jG[e]=n}let n=jG[e];return null==n||n.isContextLost()?(delete jG[e],XG(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),jG[e])}function YG(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function ZG(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=null==t?YG(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete jG[e]}),!1),Je().getBool("SOFTWARE_WEBGL_ENABLED")&&(qG.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",qG)||n.getContext("experimental-webgl",qG):n.getContext("webgl2",qG)}function JG(e,t){return[t,e]}function QG(e,t){return e*t}function eH(e){let t=Ra.sizeFromShape(e),n=Math.ceil(t/4);return Ra.sizeToSquarishShape(n)}function tH(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function nH(e,t){let[n,r]=tH(e,t);return n*r*4}function rH(e,t){let n,r,a,s,i,o,l,u,h,p,d=e;return 2===Je().getNumber("WEBGL_VERSION")?(n=d.R32F,r=d.R16F,a=d.RGBA16F,s=d.RGBA32F,i=d.RED,l=4,u=1,h=d.HALF_FLOAT,p=d.FLOAT,o=d.RGBA8):(n=e.RGBA,r=e.RGBA,a=e.RGBA,s=d.RGBA,i=e.RGBA,l=4,u=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,o=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:p}}function aH(e,t){let n=t();return Je().getBool("DEBUG")&&sH(e),n}function sH(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+uH(e,t))}(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(UG||(UG={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(GG||(GG={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(HG||(HG={}));var iH=5.96e-8,oH=65504;function lH(e){return!!(Je().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||iH<Math.abs(e)&&Math.abs(e)<oH)}function uH(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function hH(e,t){return LH(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function pH(e,t){let n=LH(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(aH(e,(()=>e.shaderSource(n,t))),aH(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function dH(e,t){let n=LH(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(aH(e,(()=>e.shaderSource(n,t))),aH(e,(()=>e.compileShader(n))),Je().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw gH(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var cH,fH,mH=/ERROR: [0-9]+:([0-9]+):/g;function gH(e,t){let n=mH.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);let r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>Ra.rightPad((t+1).toString(),s)+e)),o=0;for(let p=0;p<i.length;p++)o=Math.max(i[p].length,o);let l=i.slice(0,r-1),u=i.slice(r-1,r),h=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${Ra.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}function yH(e){return LH(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function bH(e,t){if(aH(e,(()=>e.linkProgram(t))),!Je().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function xH(e,t){if(aH(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function wH(e,t){let n=LH(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return aH(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),aH(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function vH(e,t){let n=LH(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return aH(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),aH(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function kH(){return 2===Je().getNumber("WEBGL_VERSION")?1:4}function IH(e){return LH(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function SH(e,t){let n=Je().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let n=`[${e}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){let r=`[${e}x${t}]`,a=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+a+".")}}function NH(e){return LH(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function TH(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return-1!==o&&(aH(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),aH(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),aH(e,(()=>e.enableVertexAttribArray(o))),!0)}function CH(e,t,n){zH(e,n),aH(e,(()=>e.activeTexture(e.TEXTURE0+n))),aH(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function _H(e,t){zH(e,t),aH(e,(()=>e.activeTexture(e.TEXTURE0+t))),aH(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function EH(e,t,n){return LH(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function $H(e,t,n){return e.getUniformLocation(t,n)}function AH(e,t,n,r){aH(e,(()=>CH(e,t,r))),aH(e,(()=>e.uniform1i(n,r)))}function RH(e){aH(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),aH(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),aH(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function FH(e,t,n){aH(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),aH(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function DH(e,t){aH(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),aH(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function MH(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+OH(e,t))}function OH(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function LH(e,t,n){let r=aH(e,(()=>t()));if(null==r)throw new Error(n);return r}function zH(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){let e=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${e}.`)}}function PH(e,t=2){return Ra.sizeFromShape(e.slice(0,e.length-t))}function BH(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function WH(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[PH(e),...BH(e)]),t}function VH(e,t=!1){let n=Je().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=Je().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&Je().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,e=e.map(((t,n)=>n>=e.length-2?Ra.nearestLargerEven(e[n]):e[n])),1===e.length&&(e=[2,e[0]])),2!==e.length&&(e=Ra.squeezeShape(e).newShape);let a=Ra.sizeFromShape(e),s=null;e.length<=1&&a<=n?s=[1,a]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);let i=null!=s&&Math.max(...s)>r&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||i)if(t){let t=PH(e),n=2,r=2;e.length&&([n,r]=BH(e)),a=t*(n/2)*(r/2),s=Ra.sizeToSquarishShape(a).map((e=>2*e))}else s=Ra.sizeToSquarishShape(a);return s}function UH(e){return e%2===0}function GH(e,t){if(e=e.slice(-2),t=t.slice(-2),Ra.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r||UH(n)&&UH(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&UH(e[0])&&UH(t[0])}function HH(e){if(null==cH){let t=XG(e);cH=t.getParameter(t.MAX_TEXTURE_SIZE)}return cH}function jH(){cH=null}function qH(){fH=null}function KH(e){if(null==fH){let t=XG(e);fH=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,fH)}function XH(e){if(0===e)return 0;let t,n=XG(e);return t=YH(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:YH(n,"EXT_disjoint_timer_query")?1:0,t}function YH(e,t){return null!=e.getExtension(t)}function ZH(e){try{if(null!=XG(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function JH(e){if(0===e)return!1;let t=XG(e);if(1===e){if(!YH(t,"OES_texture_float"))return!1}else if(!YH(t,"EXT_color_buffer_float"))return!1;return ej(t)}function QH(e){if(0===e)return!1;let t=XG(e);if(1!==e){if(YH(t,"EXT_color_buffer_float"))return ej(t);let e="EXT_color_buffer_half_float";if(YH(t,e)){let n=t.getExtension(e);return tj(t,n)}return!1}return!(!YH(t,"OES_texture_float")||!YH(t,"WEBGL_color_buffer_float"))&&ej(t)}function ej(e){let t=rH(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,r,a,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),i}function tj(e,t){let n=rH(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);let a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}function nj(e){return 2===e&&null!=XG(e).fenceSync}function rj(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Ra.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var aj=Je();function sj(){let e,t,n,r,a,s,i,o,l,u;return 2===Je().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o=Je().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function ij(e,t,n="index"){let r=Ra.computeStrides(t);return r.map(((t,a)=>{let s=`int ${e[a]} = ${n} / ${t}`,i=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`;return`${s}; ${i};`})).join("")}function oj(e,t,n="index"){let r=Ra.computeStrides(t);return r.map(((t,a)=>{let s=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,i=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${s}; ${i};`})).join("")}function lj(e,t){let n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let s=n-3;s>=0;--s)a[s]=`(${a[s+1]} * ${r[s+1]})`;return a}function uj(e,t,n="index"){let r=e.map(((e,t)=>t)),a=lj(r,t);return a.map(((t,r)=>{let s=`int ${e[r]} = ${n} / ${a[r]}`,i=r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${a[r]}`:`index -= ${e[r]} * ${a[r]}`;return`${s}; ${i};`})).join("")}function hj(e){let t=Ra.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}function pj(){return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n"}aj.registerFlag("HAS_WEBGL",(()=>aj.getNumber("WEBGL_VERSION")>0)),aj.registerFlag("WEBGL_VERSION",(()=>ZH(2)?2:ZH(1)?1:0)),aj.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),aj.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===aj.get("WEBGL_VERSION"))),aj.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),aj.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),aj.registerFlag("WEBGL_PACK",(()=>aj.getBool("HAS_WEBGL"))),aj.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>aj.getBool("WEBGL_PACK"))),aj.registerFlag("WEBGL_PACK_CLIP",(()=>aj.getBool("WEBGL_PACK"))),aj.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>aj.getBool("WEBGL_PACK"))),aj.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>aj.getBool("WEBGL_PACK"))),aj.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>aj.getBool("WEBGL_PACK"))),aj.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>aj.getBool("WEBGL_PACK"))),aj.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>aj.getBool("WEBGL_PACK"))),aj.registerFlag("WEBGL_PACK_REDUCE",(()=>aj.getBool("WEBGL_PACK"))),aj.registerFlag("WEBGL_LAZILY_UNPACK",(()=>aj.getBool("WEBGL_PACK"))),aj.registerFlag("WEBGL_CONV_IM2COL",(()=>aj.getBool("WEBGL_PACK"))),aj.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>HH(aj.getNumber("WEBGL_VERSION")))),aj.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>KH(aj.getNumber("WEBGL_VERSION")))),aj.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{let e=aj.getNumber("WEBGL_VERSION");return 0===e?0:XH(e)})),aj.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>aj.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Js.isMobile())),aj.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>JH(aj.getNumber("WEBGL_VERSION")))),aj.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!aj.getBool("WEBGL_FORCE_F16_TEXTURES")&&aj.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),aj.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>QH(aj.getNumber("WEBGL_VERSION")))),aj.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>nj(aj.getNumber("WEBGL_VERSION")))),aj.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>aj.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),aj.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),aj.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Js.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),aj.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),aj.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),aj.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),aj.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),aj.registerFlag("WEBGL_EXP_CONV",(()=>!1)),aj.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>aj.getBool("IS_TEST"))),aj.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),aj.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),aj.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),aj.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));var dj="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:cj}=tw;function fj(e,t,n){let r=[];if(e.forEach((e=>{let t=Ra.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){let{uniformShape:t}=nq(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`);break;default:break}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break;default:break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));let a,s,i=r.join("\n"),o=e.map((e=>yj(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),l=t.texShape,u=sj(),h=wj(u),p=Ij(u);return t.isPacked?(a=bj(t.logicalShape,l,n.enableShapeUniforms),s=kj(u)):(a=xj(t.logicalShape,l,n.enableShapeUniforms),s=vj(u)),n.packedInputs&&(p+=Cj),[p,h,s,i,a,o,n.userCode].join("\n")}function mj(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return Wj(e,t);case 1:return Uj(e,t);case 2:return Hj(e,t);case 3:return qj(e,t);case 4:return Xj(e,t);case 5:return Yj(e);case 6:return Zj(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function gj(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return Bj(e);case 1:return Vj(e,t);case 2:return Gj(e,t);case 3:return jj(e,t);default:return Kj(e,t)}}function yj(e,t,n=!1,r){let a="";a+=n?gj(e,r):mj(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?Qj(e,t):eq(e,t)),a}function bj(e,t,n){switch(e.length){case 0:return _j();case 1:return Ej(e,t,n);case 2:return Lj(e,t,n);case 3:return Aj(e,t,n);default:return Fj(e,t,n)}}function xj(e,t,n){switch(e.length){case 0:return _j();case 1:return $j(e,t,n);case 2:return zj(e,t,n);case 3:return Rj(e,t,n);case 4:return Dj(e,t,n);case 5:return Mj(e,t);case 6:return Oj(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function wj(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}function vj(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}function kj(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}function Ij(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Sj}\n    ${Nj}\n    ${Tj}\n  `}var Sj="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Nj="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Tj="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Cj="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function _j(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Ej(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}function $j(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}function Aj(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}function Rj(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${oj(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;let r=ij(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}function Fj(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)i*=e[e.length-u-1],o=`\n      int b${u} = index / ${i};\n      index -= b${u} * ${i};\n    `+o,l=`b${u}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}function Dj(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${oj(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;let r=ij(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}function Mj(e,t){let n=ij(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}function Oj(e,t){let n=ij(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}function Lj(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Ra.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;let a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}function zj(e,t,n){return Ra.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}function Pj(e){return`offset${e}`}function Bj(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=sj();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}function Wj(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let i=Pj(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;let[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}function Vj(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=sj();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}function Uj(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${Jj(e)}\n      }\n    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let o=Pj(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}function Gj(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=sj();if(null!=s&&Ra.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],h=Math.ceil(n[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${h}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}function Hj(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&Ra.arraysEqual(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;let e=s[0],n=s[1];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}let{newShape:i,keptDims:o}=Ra.squeezeShape(n),l=i;if(l.length<n.length){let n=rq(e,l),r=["row","col"];return`\n      ${mj(n,t)}\n      float ${a}(int row, int col) {\n        return ${a}(${aq(r,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Jj(e)}\n      }\n    `;let u=s[0],h=s[1],p=Pj(r);return 1===h?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${u}, ${h}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}function jj(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){let r=n.slice(1),s=[1,2],i=rq(e,r),o=["b","row","col"];return`\n        ${gj(i,t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${aq(o,s)});\n        }\n      `}let o=sj();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;let l=i[0],u=i[1],h=Math.ceil(n[2]/2),p=h*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${p}, ${h}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}function qj(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=Ra.squeezeShape(n),u=o;if(u.length<n.length){let n=rq(e,u),r=["row","col","depth"];return`\n        ${mj(n,t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${aq(r,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${Jj(e)}\n      }\n    `;let h=e.shapeInfo.texShape,p=h[0],d=h[1],c=e.shapeInfo.flatOffset;if(d===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${p}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===i&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;let f=Pj(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${p}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}function Kj(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=sj();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],h=l[1],p=Math.ceil(s[i-1]/2),d=p*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${d} + (row / 2) * ${p} + (col / 2)`;for(let m=2;m<i-1;m++)c=`int b${m}, `+c,d*=s[i-m-1],f=`b${m} * ${d} + `+f;return`\n    vec4 ${r}(${c}) {\n      int index = ${f};\n      int texR = index / ${h};\n      int texC = index - texR * ${h};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}, ${u});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}function Xj(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=Ra.squeezeShape(n);if(l.length<n.length){let n=rq(e,l),r=["row","col","depth","depth2"];return`\n      ${mj(n,t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${aq(r,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${Jj(e)}\n      }\n    `;let h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],c=p[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&null==h)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(c===s&&null==h)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;let y=Pj(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${c}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}function Yj(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=Ra.squeezeShape(t);if(l.length<t.length){let t=rq(e,l),n=["row","col","depth","depth2","depth3"];return`\n      ${mj(t)}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${aq(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${Jj(e)}\n      }\n    `;let h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],c=p[1];if(c===o&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(c===a&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let f=Pj(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${c}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function Zj(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=Ra.squeezeShape(t);if(a.length<t.length){let t=rq(e,a),n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${mj(t)}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${aq(n,s)});\n      }\n    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,h=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${Jj(e)}\n      }\n    `;let p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,c=d[0],f=d[1];if(f===h&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let m=Pj(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${c}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function Jj(e){let t=e.name,n=Ra.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function Qj(e,t){let n,r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),s="get"+a+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=cj(e.shapeInfo.logicalShape,t.logicalShape),u=tq(o),h=o-i,p=["x","y","z","w","u","v"];n=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let d="";d=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", ");let c="return outputValue;",f=1===Ra.sizeFromShape(e.shapeInfo.logicalShape),m=1===Ra.sizeFromShape(t.logicalShape);if(1!==i||f||m){if(f&&!m)c=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){let e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?c="return vec4(outputValue.x);":l.indexOf(e)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}}else c="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${n}\n      vec4 outputValue = get${a}(${d});\n      ${c}\n    }\n  `}function eq(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&Ra.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;let u,h=tq(l),p=cj(e.shapeInfo.logicalShape,t.logicalShape),d=l-o,c=["x","y","z","w","u","v"];u=0===o?"":l<2&&p.length>=1?"coords = 0;":p.map((e=>`coords.${c[e+d]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${c[t+d]}`)).join(", "),`\n    float ${a}() {\n      ${h} coords = getOutputCoords();\n      ${u}\n      return get${r}(${f});\n    }\n  `}function tq(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function nq(e,t,n){let{newShape:r,keptDims:a}=Ra.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,l=!e&&s>1&&!Ra.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function rq(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function aq(e,t){return t.map((t=>e[t])).join(", ")}function sq(e,t,n,r){let a=n.map(((e,n)=>{let r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=fj(a,i,t),l=dH(e.gl,o),u=e.createProgram(l);return Je().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},iq(e,t,u))}function iq(e,t,n){let r,a,s,i={},o={},l={},u=[],h=null,p=null;p=e.getUniformLocation(n,"NAN",!1),1===Je().getNumber("WEBGL_VERSION")&&(h=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let c=0;c<t.variableNames.length;c++){let r=t.variableNames[c];i[r]=e.getUniformLocation(n,r,d),i[`offset${r}`]=e.getUniformLocation(n,`offset${r}`,d),t.enableShapeUniforms&&(o[`${r}Shape`]=e.getUniformLocation(n,`${r}Shape`,d),l[`${r}TexShape`]=e.getUniformLocation(n,`${r}TexShape`,d))}return t.enableShapeUniforms&&(r=e.getUniformLocation(n,"outShape",d),s=e.getUniformLocation(n,"outShapeStrides",d),a=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{u[r]=e.getUniformLocation(n,t.name,d)})),{uniformLocations:i,customUniformLocations:u,infLoc:h,nanLoc:p,inShapesLocations:o,inTexShapesLocations:l,outShapeLocation:r,outShapeStridesLocation:s,outTexShapeLocation:a}}function oq(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{let r=e.logicalShape,a=t[n],s=a.shape;if(!Ra.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;let i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!Ra.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function lq(e,t,n,r,a){t.program.enableShapeUniforms||(oq(t.inShapeInfos,n),oq([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===Je().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{let a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`],o=t.inShapesLocations[`${a}Shape`],l=t.inTexShapesLocations[`${a}TexShape`];if(o){let{uniformShape:r}=nq(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r));break;default:break}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=s){if(n.isUniform){if(Ra.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}return}null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,s,r)}}));let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape));break;default:break}if(t.outShapeStridesLocation){let n=Ra.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{let s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}function uq(e,t,n){let r="";t.concat(n).forEach((t=>{let a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=nq(e.packedInputs,t.shape,s),u="",h="",p="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=Ra.computeStrides(o);p=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else h=`${o[0]>1}_${o[1]>1}`;let d=t.shape.length,c=2===o.length&&Ra.arraysEqual(t.shape,s),f=1===Ra.sizeFromShape(t.shape),m=tw.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&Ra.arraysEqual(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${d}_${g}_${i?l:""}_${o.length}_${f}_${m}_${c}_${u}_${h}_${p}_${y}_${a}`}else{let e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));let a=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+a+`${Je().getNumber("WEBGL_VERSION")}`,s}function hq(e){return Je().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var pq=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=UG.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=sj();this.outputShape=e,this.enableShapeUniforms=hq(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?oj(["r","c","d"],e):ij(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}},dq=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=UG.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=sj();this.outputShape=e,this.enableShapeUniforms=hq(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?oj(["r","c","d"],e):ij(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}},cq=class{constructor(e){this.variableNames=["A"],this.outTexUsage=GG.DOWNLOAD;let t=sj();this.outputShape=e,this.userCode=`\n      ${dj}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}},fq=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=GG.DOWNLOAD;let t=sj();this.outputShape=e,this.userCode=`\n      ${dj}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}},mq={R:0,G:1,B:2,A:3},gq=class{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=sj();this.outputShape=e,this.enableShapeUniforms=hq(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let i=0;i<n.length;i++){let e=n[i];s+=`\n          if(offset == ${i}) {\n            result = values[${mq[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?pj():hj(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${s}\n        }\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}},yq=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=sj();this.outputShape=e,this.enableShapeUniforms=hq(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){let a=2*s+t;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${s};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?pj():hj(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}},bq={};function xq(e){let t=sj(),n=`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`;return pH(e,n)}function wq(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return wH(e,t)}function vq(e){let t=new Uint16Array([0,1,2,2,1,3]);return vH(e,t)}function kq(e,t,n,r,a,s){SH(t,n);let i=IH(e),o=e.TEXTURE_2D;return aH(e,(()=>e.bindTexture(o,i))),aH(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),aH(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),aH(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),aH(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Je().getNumber("WEBGL_VERSION")?aH(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))):aH(e,(()=>e.texStorage2D(o,1,r,t,n))),aH(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function Iq(e){return e.internalFormatFloat}function Sq(e,t,n,r){let[a,s]=JG(t,n);return kq(e,a,s,Iq(r),r.textureFormatFloat,e.FLOAT)}function Nq(e){return e.internalFormatHalfFloat}function Tq(e,t,n,r){let[a,s]=JG(t,n);return kq(e,a,s,Nq(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Cq(e){return e.downloadTextureFormat}function _q(e,t,n,r){let[a,s]=JG(t,n);return kq(e,a,s,Cq(r),e.RGBA,e.UNSIGNED_BYTE)}function Eq(e){return e.internalFormatPackedFloat}function $q(e,t,n,r){let[a,s]=tH(t,n);return kq(e,a,s,Eq(r),e.RGBA,e.FLOAT)}function Aq(e){return e.internalFormatPackedHalfFloat}function Rq(e,t,n,r){let[a,s]=tH(t,n);return kq(e,a,s,Aq(r),e.RGBA,r.textureTypeHalfFloat)}function Fq(e,t,n){return aH(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),TH(e,t,"clipSpacePos",n,3,20,0)&&TH(e,t,"uv",n,2,20,12)}function Dq(e,t,n,r,a,s){let i,o,l;aH(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),2===Je().getNumber("WEBGL_VERSION")?aH(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):aH(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),aH(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function Mq(e,t,n){aH(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Je().getNumber("WEBGL_VERSION")?aH(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):aH(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Je().getNumber("WEBGL_VERSION")?aH(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):aH(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),aH(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function Oq(e,t,n,r){let a=e.createBuffer();aH(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));let s=16*t*n;return aH(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),aH(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),aH(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function Lq(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function zq(e,t,n,r){let[a,s]=JG(t,n),i=4,o=new Uint8Array(QG(t*n,i));return aH(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}function Pq(e,t,n,r,a,s,i,o){let l=e,u=new Float32Array(nH(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function Bq(e,t,n){let r=new Float32Array(t*n*4);return aH(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}C(bq,{bindVertexProgramAttributeStreams:()=>Fq,createBufferFromOutputTexture:()=>Oq,createFloat16MatrixTexture:()=>Tq,createFloat16PackedMatrixTexture:()=>Rq,createFloat32MatrixTexture:()=>Sq,createIndexBuffer:()=>vq,createPackedMatrixTexture:()=>$q,createUnsignedBytesMatrixTexture:()=>_q,createVertexBuffer:()=>wq,createVertexShader:()=>xq,downloadByteEncodedFloatMatrixFromOutputTexture:()=>zq,downloadFloat32MatrixFromBuffer:()=>Lq,downloadMatrixFromPackedOutputTexture:()=>Bq,downloadPackedMatrixFromBuffer:()=>Pq,getInternalFormatForFloat16MatrixTexture:()=>Nq,getInternalFormatForFloat16PackedMatrixTexture:()=>Aq,getInternalFormatForFloat32MatrixTexture:()=>Iq,getInternalFormatForPackedMatrixTexture:()=>Eq,getInternalFormatForUnsignedBytesMatrixTexture:()=>Cq,uploadDenseMatrixToTexture:()=>Dq,uploadPixelDataToTexture:()=>Mq});var Wq=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=Je().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,KG(t,e)):this.gl=XG(t),e=this.gl,2===Je().getNumber("WEBGL_VERSION")){let t=e;this.createVertexArray=()=>aH(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>aH(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>aH(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>aH(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){let t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>aH(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>aH(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>aH(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>aH(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Je().getNumber("WEBGL_VERSION")){let e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=hH(this.gl,e),YH(this.gl,t))this.textureHalfFloatExtension=hH(this.gl,t);else if(Je().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),YH(this.gl,r))this.colorBufferHalfFloatExtension=hH(this.gl,r);else if(Je().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",YH(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!YH(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=wq(this.gl),this.indexBuffer=vq(this.gl),this.framebuffer=NH(this.gl),this.textureConfig=rH(this.gl,this.textureHalfFloatExtension)}get debug(){return Je().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;aH(e,(()=>e.finish())),aH(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),aH(e,(()=>e.deleteFramebuffer(this.framebuffer))),aH(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),aH(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),aH(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),Sq(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),Tq(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),_q(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),Mq(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),Dq(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),Rq(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),$q(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(DH(this.gl,this.framebuffer),this.outputTexture=null),aH(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>zq(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return Pq(this.gl,e,t,n,r,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return Lq(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=Oq(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Je().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>Bq(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=xq(t));let n,r=yH(t);return aH(t,(()=>t.attachShader(r,this.vertexShader))),aH(t,(()=>t.attachShader(r,e))),bH(t,r),n=Object.assign(r,{vao:this.createVertexArray()}),this.bindVertexArray(n.vao),aH(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),console.assert(Fq(t,n,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&xH(t,n),this.setProgram(n),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(aH(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&(this.bindVertexArray(this.program.vao),this.debug&&xH(this.gl,this.program)),aH(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?EH(this.gl,e,t):$H(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),aH(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),AH(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=tH(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&xH(this.gl,this.program),MH(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}aH(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),aH(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=hH(this.gl,2===Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Ra.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){let e=Vq(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Je().platform&&(n=Je().platform.setTimeoutCustom.bind(Je().platform)),Ra.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),FH(this.gl,e,this.framebuffer),this.debug&&MH(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(FH(this.gl,this.outputTexture,this.framebuffer),this.debug&&MH(this.gl)):DH(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;FH(r,e,this.framebuffer),this.debug&&MH(r),this.outputTexture=e,aH(r,(()=>r.viewport(0,0,t,n))),aH(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),aH(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}};function Vq(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:Uq,bincountImpl:Gq,bincountReduceImpl:Hq,castImpl:jq,ceilImpl:qq,concatImpl:Kq,equalImpl:Xq,expImpl:Yq,expm1Impl:Zq,floorImpl:Jq,gatherNdImpl:Qq,gatherV2Impl:eK,greaterImpl:tK,greaterEqualImpl:nK,lessImpl:rK,lessEqualImpl:aK,linSpaceImpl:sK,logImpl:iK,maxImpl:oK,maximumImpl:lK,minimumImpl:uK,multiplyImpl:hK,negImpl:pK,notEqualImpl:dK,prodImpl:cK,raggedGatherImpl:fK,raggedRangeImpl:mK,raggedTensorToTensorImpl:gK,rangeImpl:yK,rsqrtImpl:bK,scatterImpl:xK,sigmoidImpl:wK,simpleAbsImpl:vK,sliceImpl:kK,sparseFillEmptyRowsImpl:IK,sparseReshapeImpl:SK,sparseSegmentReductionImpl:NK,sqrtImpl:TK,stridedSliceImpl:CK,stringNGramsImpl:_K,stringSplitImpl:EK,stringToHashBucketFastImpl:$K,subImpl:AK,tileImpl:RK,topKImpl:FK,transposeImpl:DK,uniqueImpl:MK}=SO;function OK(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function LK(e,t){return 1===t?[e]:OK(e,t)}function zK(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}var PK=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=hq(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{let e=LK("rc",this.rank),t=tq(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){let t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}},BK=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=hq(this.outputShape.length);let n="";for(let r=0;r<4;r++){let e="thisRC = rc;";r%2===1&&(e+="thisRC.z += 1;"),r>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}this.userCode=`\n      ${WK(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?pj():hj(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};function WK(e,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?uj(["r","c","d"],"inputShape"):ij(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}var VK=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let r=qK(t,n),a=KK(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s,i=GK(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}return r===HG.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===HG.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===HG.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===HG.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===HG.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;let a=qK(n,r),s=KK(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=GK(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Je().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(let e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function UK(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function GK(e,t,n,r,a){let s,i=HK(t,r);if(a){let[t,n]=tH(e[0],e[1]);s=t*n}else{let[t,n]=JG(e[0],e[1]);s=t*n}let o=UK(n,i);return s*o}function HK(e,t){switch(e){case HG.PACKED_2X2_FLOAT32:return Eq(t);case HG.PACKED_2X2_FLOAT16:return Aq(t);case HG.UNPACKED_FLOAT32:return Iq(t);case HG.UNPACKED_FLOAT16:return Nq(t);case HG.PACKED_4X1_UNSIGNED_BYTE:return Cq(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function jK(e){return Je().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?HG.PACKED_2X2_FLOAT32:HG.UNPACKED_FLOAT32:e?HG.PACKED_2X2_FLOAT16:HG.UNPACKED_FLOAT16}function qK(e,t){if(e===GG.UPLOAD)return HG.PACKED_2X2_FLOAT32;if(e===GG.RENDER||null==e)return jK(t);if(e===GG.DOWNLOAD||e===GG.PIXELS)return HG.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function KK(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var XK=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=hq(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},YK="if (isnan(x)) return x;",ZK="return x;",JK="return abs(x);",QK="return (x >= 0.0) ? x : (exp(x) - 1.0);",eX=YK+"\n  return (x < 0.0) ? 0.0 : x;\n",tX=YK+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",nX="return x;",rX="return 1.0 / (1.0 + exp(-1.0 * x));",aX="return x;",sX="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",iX="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",oX="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",lX="return 1.0 / (1.0 + exp(-1.0 * x));",uX=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=hq(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},hX=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=hq(this.outputShape.length);let t=e.length,n=LK("rc",t),r=tq(t),a=zK(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}},pX=ov.whereImpl,dX=1e-7,cX=1e-4,fX={};function mX(e){return e in fX||(fX[e]={}),fX[e]}var gX=Je().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),yX=600;function bX(){return null==Je().global.screen?1024:Je().global.screen.height*Je().global.screen.width*window.devicePixelRatio*yX/1024/1024}var xX=class extends J{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Je().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof Wq)t=e;else{let n=XG(Je().getNumber("WEBGL_VERSION"),e);t=new Wq(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let e=XG(Je().getNumber("WEBGL_VERSION"));t=new Wq(e),this.binaryCache=mX(Je().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new VK(this.gpgpu),this.numMBBeforeWarning=bX(),this.texData=new Z(this,Lo())}nextDataId(){return xX.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,a,s){let i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,a]},o.texShape=[r,a];let l=WH(t),u=new gq(l,!1,s),h=this.runWebGLProgram(u,[i],n,[[r,a]]);return h.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),h.dataId}write(e,t,n){if((Je().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Je().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:GG.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,r,a){if(Je().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:GG.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new uX(i,nX):new XK(i,nX);let n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;let l,u,h=null!=this.activeTimers;if(h&&(l=Ra.now()),"complex64"===r){let e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);u=tw.mergeRealAndImagArrays(e,t)}else u=this.getValuesFromTexture(e);return h&&(this.downloadWaitMs+=Ra.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}let t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new uX(r,nX):new XK(r,nX);let n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(Je().getBool("DEBUG")&&!Je().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Je().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,h=null;if("complex64"!==s&&Je().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let t=this.texData.get(l.dataId);h=this.gpgpu.createBufferFromTexture(t.texture.texture,...eH(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){let e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=tw.mergeRealAndImagArrays(t,n)}else if(null==h)u=this.getValuesFromTexture(e);else{let e=Ra.sizeFromShape(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=h){let e=this.gpgpu.gl;aH(e,(()=>e.deleteBuffer(h)))}let p=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Lo().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){let n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new uX(a,nX):new XK(a,nX);let r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),h=Lo().makeTensorFromTensorInfo(u),p=this.texData.get(u.dataId);return Object.assign({tensorRef:h},p.texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map((e=>Ra.decodeString(e)));return No(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return No(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!lH(n))throw Je().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=Ra.sizeFromShape(t);if(Je().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...eH(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}let s=Je().getBool("WEBGL_PACK")&&!0===r,i=s?WH(t):t,o=s?new fq(i):new cq(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=Ra.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=Ra.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(a);i.kernelMs=Ra.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ra.now(),endMs:null}}endTimer(e){return Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ra.now(),e)}async getQueryTime(e){if(Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=gX){return Je().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&Ra.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){tw.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return pX(e.shape,t)}packedUnaryOp(e,t,n){let r=new uX(e.shape,t),a=this.compileAndRun(r,[e],n);return Lo().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=vK(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Je().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,JK,e.dtype);let t=new XK(e.shape,JK),n=this.compileAndRun(t,[e]);return Lo().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Ra.isString(n[0])){let a=n.map((e=>Ra.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return Lo().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new hX(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new PK(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[PH(e.shape),...BH(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[PH(t),...BH(t)],s=new BK(a,n),i=!0,o=[n],l=this.runWebGLProgram(s,[r],e.dtype,o,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;if(null!=t){let e=Ra.sizeFromShape(a),n=t[0]*t[1]*4;Ra.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}let i,o=WH(a);i=r?new dq(o):new pq(o);let l=!0,u=[null!=t?t:eH(o)],h=this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,u,l,t);return{dtype:s,shape:a,dataId:h.dataId}}runWebGLProgram(e,t,n,r,a=!1,s){let i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===UG.DENSE){let t=null!=s?s:eH(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===Ra.sizeFromShape(i.shape))return o.values=Ra.getTypedArrayFromDType(i.dtype,0),i;let l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&Ra.sizeFromShape(t.shape)<=Je().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!GH(n.shape,t.shape)){let e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);let h,p={shape:i.shape,texData:o,isUniform:!1},d=uq(e,u,p),c=this.getAndSaveBinary(d,(()=>sq(this.gpgpu,e,u,p))),f=null!=this.activeTimers;f&&(h=this.startTimer()),Je().get("ENGINE_COMPILE_ONLY")||lq(this.gpgpu,c,u,p,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let m=Je().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let e=Ra.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Je().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){let e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Je().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Bo((()=>{if(!Je().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Je().getBool("DEBUG");Je().set("DEBUG",!1);let t=this.abs(ap(1e-8)).dataSync()[0];if(Je().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?dX:cX}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;let l,u=null!=this.activeTimers;u&&(l=Ra.now());let h=t.texShape;if(null==h&&(h=VH(n,o),t.texShape=h),null!=a){let e,s=WH(n),i=h[1],p=h[0],d=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(o||!d)&&([i,p]=tH(h[0],h[1])),e=o?new yq(s,d):new gq(s,d);let c=d?[p,i]:h,f=this.makeTensorInfo(c,r),m=this.texData.get(f.dataId);m.usage=d?GG.PIXELS:GG.UPLOAD,m.texShape=c,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,p,a);let g=[[p,i]],y=!0,b=this.runWebGLProgram(e,[f],r,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Je().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=Ra.now()-l)}else{let e=this.acquireTexture(h,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=wX(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Ra.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Qx(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(gH(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=iq(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.inShapesLocations=s,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";let{texture:r,height:a,width:s,channels:i}=e,o=Lo().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let l=o.writeTexture(r,t,n,a,s,i);return Lo().makeTensorFromDataId(l,t,n,o)}};function wX(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}xX.nextDataId=0;var vX="4.2.0";function kX(){Je().set("WEBGL_FORCE_F16_TEXTURES",!0)}Js.isBrowser()&&Yo("webgl",(()=>new xX),2);var IX={forceHalfFloat:kX},SX="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",NX=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=tw.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=hq(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},TX="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n",CX=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=tw.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=hq(a);let s="";if(r)if(0===a||1===Ra.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${tq(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{let e=LK("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function _X(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var EX={kernelName:wn,backendName:"webgl",kernelFunc:_X};function $X(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=_X({inputs:{x:r},backend:n}),l=_X({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var AX={kernelName:At,backendName:"webgl",kernelFunc:$X},RX="return (a < 0.) ? b * a : a;",FX="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";function DX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",Ra.createScalarValue(s,"float32")),o=Je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new CX(FX,a.shape,i.shape):new NX(RX,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}var MX={kernelName:Tn,backendName:"webgl",kernelFunc:DX},OX="return (a < 0.) ? b * a : a;",LX="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";function zX(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new CX(LX,r.shape,a.shape):new NX(OX,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}var PX={kernelName:pr,backendName:"webgl",kernelFunc:zX},BX="if (isnan(x)) return x;";function WX({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{let{x:i}=a,o=s,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){let e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u,h=Je().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t;return u=h?new uX(i.shape,t):new XK(i.shape,e),o.runWebGLProgram(u,[i],l)}}function VX({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,h=o;if(r&&"complex64"===l.dtype){let t=h.texData.get(l.dataId),n=h.texData.get(u.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{let[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new NX(e,l.shape,u.shape);return h.runWebGLProgram(i,[a,s],Os(n.dtype,r.dtype))})),s=$X({inputs:{real:r,imag:a},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(a),s}let p=s||Os(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||h.shouldExecuteOnCPU([l,u]))&&null!=a){let e=h.texData.get(l.dataId).values,t=h.texData.get(u.dataId).values,n="string"===l.dtype?tw.fromUint8ToStringArray(e):e,r="string"===l.dtype?tw.fromUint8ToStringArray(t):t,[s,i]=a(l.shape,u.shape,n,r,p),o=h.makeTensorInfo(i,p),d=h.texData.get(o.dataId);return d.values=s,o}let d,c=Je().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t;return d=c?new CX(t,l.shape,u.shape,n):new NX(e,l.shape,u.shape),h.runWebGLProgram(d,[l,u],p)}}function UX(e,t=!1){if("linear"===e)return t?aX:ZK;if("relu"===e)return t?iX:eX;if("elu"===e)return t?sX:QK;if("relu6"===e)return t?oX:tX;if("prelu"===e)return t?LX:OX;if("leakyrelu"===e)return t?FX:RX;if("sigmoid"===e)return t?lX:rX;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var GX=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=hq(this.outputShape.length);let u=r?e[1]:e[2],h=Math.ceil(u/2),p=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${h}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${x};\n        for (int i = 0; i < ${h}; i++) {\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${c[0]} * ${f[0]});\n          result += (${c[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},HX={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},jX=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=tw.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},qX="return a * b;";function KX(e){let t,{inputs:n,backend:r}=e,{a:a,b:s}=n,i=tw.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),n=new jX(HX.REAL,a.shape,s.shape),i=new jX(HX.IMAG,a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=r.runWebGLProgram(n,o,"float32"),u=r.runWebGLProgram(i,o,"float32"),h=$X({inputs:{real:l,imag:u},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(u),h}if(r.shouldExecuteOnCPU([a,s])){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),[n,o]=hK(a.shape,s.shape,e.values,t.values,i),l=r.makeTensorInfo(o,i),u=r.texData.get(l.dataId);return u.values=n,l}return t=Je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new CX(qX,a.shape,s.shape):new NX(qX,a.shape,s.shape),r.runWebGLProgram(t,[a,s],i)}var XX={kernelName:Qn,backendName:"webgl",kernelFunc:KX};function YX(e,t,n){let r=[PH(e.shape),...BH(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[PH(t),...BH(t)],i=new BK(s,r),o=!0,l=[r],u=n.runWebGLProgram(i,[a],e.dtype,l,o);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function ZX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=Ra.sizeFromShape(a.shape),l=Ra.inferFromImplicitShape(s,o),u=Ra.sizeFromShape(l);Ra.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));let h=i.texData.get(a.dataId);return!h.isPacked||GH(a.shape,l)||null!==h.texture&&GH(h.shape,l)?(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):YX(a,l,i)}var JX={kernelName:wr,backendName:"webgl",kernelFunc:ZX},QX=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${Ra.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";a%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}},eY=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),h=n%4,p=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${l});\n      }\n    `}};function tY(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],r=tw.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}function nY(e,t,n,r){let a=tY(e.shape),s=e;for(let i=0;i<a.length;i++){let o,l,{inSize:u,windowSize:h,outSize:p}=a[i];o="mean"===n?0===i?new QX({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p},u):new QX({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p}):new eY({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p},n),l=s,s=r.runWebGLProgram(o,[s],t),l.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(l)}return s}var rY=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;let r=tq(this.rank),a=aY(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}};function aY(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}var sY=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=tq(this.rank),a=OK("rc",this.rank),s=new Array(this.rank);for(let u=0;u<t.length;u++)s[t[u]]=a[u];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}};function iY(e,t,n){let r=Je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sY(e.shape,t):new rY(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function oY(e,t,n,r){let a=t,s=e.shape.length,i=Ra.parseAxisParam(a,e.shape),o=i,l=tw.getAxesPermutation(o,s),u=null!=l,h=e;u&&(h=iY(e,l,r),o=tw.getInnerMostAxes(o.length,s)),tw.assertAxesAreInnerMostDims("sum",o,s);let[p,d]=tw.computeOutAndReduceShapes(h.shape,o),c=p;n&&(c=tw.expandShapeToKeepDim(p,i));let f=Ra.sizeFromShape(d),m=Ra.sizeFromShape(e.shape)/f,g=ZX({inputs:{x:h},attrs:{shape:[m,f]},backend:r}),y=Ls(e.dtype),b=nY(g,y,"sum",r),x=ZX({inputs:{x:b},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(b),u&&r.disposeIntermediateTensorInfo(h),x}function lY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return oY(a,s,i,n)}var uY={kernelName:Br,backendName:"webgl",kernelFunc:lY};function hY(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{perm:i}=a,o=r,l=s.shape.length,u=new Array(l);for(let h=0;h<u.length;h++)u[h]=s.shape[i[h]];if(o.shouldExecuteOnCPU([s])){let e=o.texData.get(s.dataId).values,n=DK(e,s.shape,s.dtype,i,u);t=o.makeTensorInfo(u,s.dtype);let r=o.texData.get(t.dataId);r.values=n}else t=iY(s,i,o);return t}var pY={kernelName:oa,backendName:"webgl",kernelFunc:hY},dY=1e3;function cY({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,h=t.shape.length,p=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[h-1]:t.shape[h-2],c=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[h-2]:t.shape[h-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=Ra.sizeFromShape(m),b=Ra.sizeFromShape(g),x=Sh.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);Ra.assert(p===d,(()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));let w,v=n?[y,p,c]:[y,c,p],k=r?[b,f,d]:[b,d,f],I=ZX({inputs:{x:e},backend:a,attrs:{shape:v}}),S=ZX({inputs:{x:t},backend:a,attrs:{shape:k}}),N=[I,S],T=Math.max(y,b),C=n?I.shape[1]:I.shape[2],_=null!=s,E=null!=i,$="leakyrelu"===l,A=null!=l?UX(l,!0):null,R=_||E||$||null!=A;if((1===c||1===f)&&C>dY&&!1===R){let e=I,t=S;n&&(e=hY({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=hY({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),N.push(t));let s=1!==f,i=1===f,o=e;s&&(o=ZX({inputs:{x:e},backend:a,attrs:{shape:[T,C,1]}}),N.push(o));let l=1===f?2:1,u=t;i&&(u=ZX({inputs:{x:t},backend:a,attrs:{shape:[T,1,C]}}),N.push(u));let h=KX({inputs:{a:o,b:u},backend:a});w=lY({inputs:{x:h},backend:a,attrs:{axis:l,keepDims:!0}}),N.push(h)}else{let l=Os(e.dtype,t.dtype),u=new GX(v,k,[T,c,f],n,r,_,A,E,$),h=[I,S];if(null!=s&&h.push(s),E&&h.push(i),$){let e=a.makeTensorInfo([],"float32",Ra.createScalarValue(o,"float32"));h.push(e),N.push(e)}w=a.runWebGLProgram(u,h,l)}let F=ZX({inputs:{x:w},backend:a,attrs:{shape:x}});N.push(w);for(let D of N)a.disposeIntermediateTensorInfo(D);return F}function fY(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:p}=r;return cY({a:a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:h})}var mY={kernelName:ga,backendName:"webgl",kernelFunc:fY},gY="return abs(x);";function yY(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){let e=r.texData.get(a.dataId),t=vK(e.values);return r.makeTensorInfo(a.shape,a.dtype,t)}return t=Je().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new uX(a.shape,gY):new XK(a.shape,gY),r.runWebGLProgram(t,[a],a.dtype)}var bY={kernelName:st,backendName:"webgl",kernelFunc:yY},xY=YK+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",wY=WX({opSnippet:xY}),vY={kernelName:it,backendName:"webgl",kernelFunc:wY},kY=YK+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));",IY=WX({opSnippet:kY}),SY={kernelName:ot,backendName:"webgl",kernelFunc:IY},NY="return a + b;",TY=VX({opSnippet:NY,packedOpSnippet:NY,supportsComplex:!0,cpuKernelImpl:Uq}),CY={kernelName:lt,backendName:"webgl",kernelFunc:TY},_Y=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}},EY=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}};function $Y(e){let{inputs:t,backend:n}=e,r=t;if(1===r.length)return _X({inputs:{x:r[0]},backend:n});if(r.length>Je().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let e=Math.floor(r.length/2),t=$Y({inputs:r.slice(0,e),backend:n}),a=$Y({inputs:r.slice(e),backend:n});return $Y({inputs:[t,a],backend:n})}let a=r.map((e=>e.dtype)).reduce(((e,t)=>Os(e,t))),s=r.map((e=>e.shape)),i=Je().getBool("WEBGL_PACK")?new EY(r[0].shape,s):new _Y(r[0].shape,s);return n.runWebGLProgram(i,r,a)}var AY={kernelName:ut,backendName:"webgl",kernelFunc:$Y};function RY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=Ra.parseAxisParam(s,a.shape),u=l,h=tw.getAxesPermutation(u,o),p=a;null!=h&&(p=hY({inputs:{x:a},backend:n,attrs:{perm:h}}),u=tw.getInnerMostAxes(u.length,o)),tw.assertAxesAreInnerMostDims("all",u,o);let d,[c,f]=tw.computeOutAndReduceShapes(p.shape,u),m=Ra.sizeFromShape(f),g=ZX({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),y=nY(g,g.dtype,"all",n);if(i){let e=tw.expandShapeToKeepDim(c,l);d=ZX({inputs:{x:y},backend:n,attrs:{shape:e}})}else d=ZX({inputs:{x:y},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=h&&n.disposeIntermediateTensorInfo(p),d}var FY={kernelName:ht,backendName:"webgl",kernelFunc:RY};function DY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=Ra.parseAxisParam(s,a.shape),u=l,h=tw.getAxesPermutation(u,o),p=a;null!=h&&(p=hY({inputs:{x:a},backend:n,attrs:{perm:h}}),u=tw.getInnerMostAxes(u.length,o)),tw.assertAxesAreInnerMostDims("any",u,o);let d,[c,f]=tw.computeOutAndReduceShapes(p.shape,u),m=Ra.sizeFromShape(f),g=ZX({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),y=nY(g,g.dtype,"any",n);if(i){let e=tw.expandShapeToKeepDim(c,l);d=ZX({inputs:{x:y},backend:n,attrs:{shape:e}})}else d=ZX({inputs:{x:y},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=h&&n.disposeIntermediateTensorInfo(p),d}var MY={kernelName:pt,backendName:"webgl",kernelFunc:DY},OY=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}},LY=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,Ra.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i,o,l=this.outputShape,u=l.length,h=tq(u),p=LK("coords",u);if(1===s){o=u+1;let e=tq(o);i=`\n        ${e} sourceLocR = ${e}(${p.join()}, 0);\n        ++${p[u-1]};\n        ${e} sourceLocG = ${e}(${p.join()}, 0);\n        ++${p[u-2]};\n        ${e} sourceLocA = ${e}(${p.join()}, 0);\n        --${p[u-1]};\n        ${e} sourceLocB = ${e}(${p.join()}, 0);\n        --${p[u-2]};`}else o=u,i=`\n        ${h} sourceLocR = coords;\n        ++${p[u-1]};\n        ${h} sourceLocG = coords;\n        ++${p[u-2]};\n        ${h} sourceLocA = coords;\n        --${p[u-1]};\n        ${h} sourceLocB = coords;\n        --${p[u-2]};`;let d=["x","y","z","w","u","v"].slice(0,o),c="."+d[o-1],f=d.map((e=>"int "+e)),m=LK("sourceLocR",o-1).concat("inIdx.r"),g=LK("sourceLocG",o-1).concat("inIdx.g"),y=LK("sourceLocB",o-1).concat("inIdx.b"),b=LK("sourceLocA",o-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${h} coords = getOutputCoords();\n        bool hasNextCol = ${p[u-1]} < ${l[u-1]-1};\n        bool hasNextRow = ${p[u-2]} < ${l[u-2]-1};\n        ${i}\n        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},\n          sourceLocB${c}, sourceLocA${c}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}};function zY(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);let i=tw.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new OY(o,n,null==r),u=[t];null!=r&&u.push(r);let h=e.runWebGLProgram(l,u,"int32");if(1===h.shape[1])return h;let p=zY(e,t,n,h);return e.disposeIntermediateTensorInfo(h),p}function PY(e,t,n,r=null){let a=null!=r?r.shape:t.shape,s=a[a.length-1],i=tw.computeOptimalWindowSize(s),o=new LY(a,i,n,null==r),l=null==r?[t]:[t,r],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let r=PY(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function BY(e,t,n,r){let a=[n];if(tw.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Je().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],s=e.texData.get(t.dataId),i=null!==s&&s.isPacked,o=t;i&&(o=e.unpackTensor(t),n.push(o));let[l,u]=tw.computeOutAndReduceShapes(o.shape,a),h=Ra.sizeFromShape(u),p=ZX({inputs:{x:o},backend:e,attrs:{shape:[-1,h]}});n.push(p);let d=zY(e,p,r);n.push(d);let c=ZX({inputs:{x:d},backend:e,attrs:{shape:l}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),c}return PY(e,t,r)}function WY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=Ra.parseAxisParam(s,a.shape),o=tw.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=hY({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=tw.getInnerMostAxes(i.length,l.shape.length)),tw.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let h=BY(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}var VY={kernelName:dt,backendName:"webgl",kernelFunc:WY};function UY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=Ra.parseAxisParam(s,a.shape),o=tw.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=hY({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=tw.getInnerMostAxes(i.length,l.shape.length)),tw.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let h=BY(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}var GY={kernelName:ct,backendName:"webgl",kernelFunc:UY},HY=YK+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",jY=WX({opSnippet:HY}),qY={kernelName:ft,backendName:"webgl",kernelFunc:jY},KY=YK+"return log(x + sqrt(x * x + 1.0));",XY=WX({opSnippet:KY}),YY={kernelName:mt,backendName:"webgl",kernelFunc:XY},ZY=YK+"\n  return atan(x);\n",JY=WX({opSnippet:ZY}),QY={kernelName:gt,backendName:"webgl",kernelFunc:JY},eZ=SX+"\n  return atan(a, b);\n",tZ="\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+TX+"\n  return result;\n",nZ=VX({opSnippet:eZ,packedOpSnippet:tZ}),rZ={kernelName:bt,backendName:"webgl",kernelFunc:nZ},aZ=YK+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;",sZ=WX({opSnippet:aZ}),iZ={kernelName:yt,backendName:"webgl",kernelFunc:sZ},oZ=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${c});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b="max",x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");let w=4*Math.floor(s/4),v=s%4,k=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${b}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${c});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${h};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${w}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${w};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${x});\n      }\n    `}},lZ=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,h=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b="avg"===t,x="0.0";if(b||(x="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${c};\n                wR += ${h}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w="max",v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");let k=4*Math.floor(s/4),I=s%4,S=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${w}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c};\n            wR += ${h}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n        }\n        setOutput(${v});\n      }\n    `}};function uZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;rj(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;Ra.assert(tw.eitherStridesOrDilationsAreOne(i,u),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));let h=tw.computePool2DInfo(a.shape,s,i,u,o,l);if(1===h.filterWidth&&1===h.filterHeight&&Ra.arraysEqual(h.inShape,h.outShape))return _X({inputs:{x:a},backend:n});let p=new oZ(h,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}var hZ={kernelName:xt,backendName:"webgl",kernelFunc:uZ};function pZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,h=[1,1,1],p=tw.computePool3DInfo(a.shape,s,i,h,o,l,u),d=new lZ(p,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}var dZ={kernelName:vt,backendName:"webgl",kernelFunc:pZ},cZ=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,h=l-1-e.padInfo.left,p=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${h});\n      const float avgMultiplier = float(${p});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},fZ=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,c=h-1-e.padInfo.front,f=p-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};function mZ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=r,p=[1,1,1],d=tw.computePool3DInfo(i.shape,o,l,p,u,h),c=new fZ(d);return n.runWebGLProgram(c,[a],i.dtype)}var gZ={kernelName:kt,backendName:"webgl",kernelFunc:mZ};function yZ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;rj([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,h=tw.computePool2DInfo(i.shape,o,l,1,u),p=new cZ(h);return n.runWebGLProgram(p,[a],i.dtype)}var bZ={kernelName:wt,backendName:"webgl",kernelFunc:yZ};function xZ(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;return cY({a:a,b:s,transposeA:i,transposeB:o,backend:n})}var wZ={kernelName:It,backendName:"webgl",kernelFunc:xZ},vZ=class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],tw.assertAndGetBroadcastShape(e,t),tw.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(tw.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(tw.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}},kZ=class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],tw.assertAndGetBroadcastShape(e,t),tw.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(tw.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(tw.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}},IZ=({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:a,variance:s,offset:i,scale:o}=e;Ra.assert(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Ra.assert(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Ra.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);let u=[r,a,s],h=null;null!=i&&(h=i.shape,u.push(i));let p=null;null!=o&&(p=o.shape,u.push(o));let d=Je().getBool("WEBGL_PACK_NORMALIZATION")?new kZ(r.shape,a.shape,s.shape,h,p,l):new vZ(r.shape,a.shape,s.shape,h,p,l);return t.runWebGLProgram(d,u,u[0].dtype)},SZ={kernelName:mn,backendName:"webgl",kernelFunc:IZ},NZ=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=tq(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n,r=CZ(this.rank),a=e.map(((e,t)=>`sourceLoc.${TZ[t]} = start[${t}] + coords.${TZ[t]};`));n=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${a.join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${n}\n        setOutput(getSource(${r}));\n      }\n    `}},TZ=["x","y","z","w","u","v"];function CZ(e){if(1===e)return"sourceLoc";if(e<=6)return TZ.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var _Z=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=tq(this.rank),n=LK("coords",this.rank),r=LK("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}};function EZ(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=_x.computeFlatOffset(t,Ra.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}function $Z(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=_x.parseSliceParams(a,s,i);if(_x.assertParamsValid(a,o,l),0===Ra.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=n.texData.get(a.dataId),t=kK(e.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}let{isPacked:u}=n.texData.get(a.dataId),h=_x.isSliceContinous(a.shape,o,l);if(u||!h){let e=Je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _Z(l):new NZ(l),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),EZ(a,o,l,n)}var AZ={kernelName:Fr,backendName:"webgl",kernelFunc:$Z},RZ=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;Ra.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=tw.getReshaped(a.shape,s,o),u=tw.getPermuted(l.length,s.length),h=tw.getReshapedPermuted(a.shape,s,o),p=tw.getSliceBeginCoords(i,s.length),d=tw.getSliceSize(h,i,s.length),c=[],f=ZX({inputs:{x:a},backend:n,attrs:{shape:l}}),m=hY({inputs:{x:f},backend:n,attrs:{perm:u}}),g=ZX({inputs:{x:m},backend:n,attrs:{shape:h}}),y=$Z({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return c.push(f),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y},FZ={kernelName:St,backendName:"webgl",kernelFunc:RZ};function DZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=Gq(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}var MZ={kernelName:Nt,backendName:"webgl",kernelFunc:DZ};function OZ(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=tw.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var LZ={kernelName:Ct,backendName:"webgl",kernelFunc:OZ},zZ="return float(a != b);",PZ=VX({opSnippet:zZ,cpuKernelImpl:dK,dtype:"bool"}),BZ={kernelName:tr,backendName:"webgl",kernelFunc:PZ};function WZ(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return _X({inputs:{x:a.complexTensorInfos.real},backend:n})}var VZ={kernelName:yr,backendName:"webgl",kernelFunc:WZ},UZ="return float(int(x));";function GZ(e,t){let n=new XK(e.shape,UZ),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function HZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return _X({inputs:{x:a},backend:n});let e=Vd(a.shape),t=HZ({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=$X({inputs:{real:t,imag:e},backend:n});return e.dispose(),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){let e=WZ({inputs:{input:a},backend:n}),t=HZ({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!Ra.hasEncodingLoss(a.dtype,s)){let e=_X({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(n.shouldExecuteOnCPU([a])){let e=n.texData.get(a.dataId).values,[t,r,i]=jq(e,a.shape,a.dtype,s);return n.makeTensorInfo(t,r,i)}if("int32"===s)return GZ(a,n);if("bool"===s){let e=n.makeTensorInfo([],"bool",Ra.getTypedArrayFromDType("bool",1)),t=PZ({inputs:{a:a,b:e},backend:n});return n.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var jZ={kernelName:_t,backendName:"webgl",kernelFunc:HZ},qZ="return ceil(x);",KZ=WX({opSnippet:qZ,packedOpSnippet:qZ,cpuKernelImpl:qq}),XZ={kernelName:Et,backendName:"webgl",kernelFunc:KZ},YZ=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}},ZZ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}};function JZ(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=a;t=Je().getBool("WEBGL_PACK_CLIP")?new ZZ(s.shape):new YZ(s.shape);let l=[[i],[o]];return r.runWebGLProgram(t,[s],s.dtype,l)}var QZ={kernelName:$t,backendName:"webgl",kernelFunc:JZ},eJ=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}};function tJ(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function nJ(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new eJ(r.shape),i=[tJ(r,a.complexTensorInfos.real),tJ(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}var rJ={kernelName:Rt,backendName:"webgl",kernelFunc:nJ},aJ=class{constructor(e){this.outputShape=[],this.outputShape=tw.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));let t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){let e=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${e}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}},sJ=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=tw.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=tq(r),s=LK("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));let o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];let l=i[t],u=i.slice(-2),h=i.join(),p=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${u.join()}));\n        }`;for(let f=1;f<o.length;f++){let e=o[f-1];p+=`\n        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {\n          return getChannel(\n            getT${f}(${iJ(i,l,e)}),\n            vec2(${iJ(u,l,e)}));\n        }`}let d=o.length,c=o[o.length-1];p+=`\n        return getChannel(\n          getT${d}(${iJ(i,l,c)}),\n          vec2(${iJ(u,l,c)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}};function iJ(e,t,n){let r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function oJ(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return _X({inputs:{x:a.complexTensorInfos.imag},backend:n})}var lJ={kernelName:kn,backendName:"webgl",kernelFunc:oJ};function uJ(e,t,n){let r=e[0].dtype;if("complex64"===r){let r=e.map((e=>WZ({inputs:{input:e},backend:n}))),a=e.map((e=>oJ({inputs:{input:e},backend:n}))),s=uJ(r,t,n),i=uJ(a,t,n),o=$X({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){let a=e.map((e=>{let r=[-1,Ra.sizeFromShape(e.shape.slice(t))];return ZX({inputs:{x:e},backend:n,attrs:{shape:r}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=tw.computeOutShape(a.map((e=>e.shape)),1),o=1===a[0].shape[0],l=Kq(s,i,r,o),u=tw.computeOutShape(e.map((e=>e.shape)),t),h=n.makeTensorInfo(u,r,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}let s=e.filter((e=>Ra.sizeFromShape(e.shape)>0)),i=Je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){let t=i?new XK(e[0].shape,nX):new uX(e[0].shape,nX);return n.runWebGLProgram(t,e,r)}let o=Je().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>o){let e=[];for(let a=0;a<s.length;a+=o){let r=s.slice(a,a+o);e.push(uJ(r,t,n))}let r=uJ(e,t,n);for(let t of e)n.disposeIntermediateTensorInfo(t);return r}if(i){let e=new sJ(s.map((e=>e.shape)),t);return n.runWebGLProgram(e,s,r)}let{tensors2D:l,outShape:u}=hJ(s,t,n),h=new aJ(l.map((e=>e.shape))),p=n.runWebGLProgram(h,l,r);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));let d=ZX({inputs:{x:p},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(p),d}function hJ(e,t,n){let r=tw.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>ZX({inputs:{x:e},attrs:{shape:[-1,Ra.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}function pJ(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=Ra.parseAxisParam(a,t[0].shape)[0],i=t.map((e=>e.shape));tw.assertParamsConsistent(i,s);let o=tw.computeOutShape(t.map((e=>e.shape)),s);if(0===Ra.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter((e=>Ra.sizeFromShape(e.shape)>0));return 1===l.length?_X({inputs:{x:l[0]},backend:n}):uJ(l,s,n)}var dJ={kernelName:Ft,backendName:"webgl",kernelFunc:pJ},cJ=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,h=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1,x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");let v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${c}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${c}) *\n                    getW(wR, wC, ${c}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${c}, xR, xC) *\n                    getW(wR, wC, ${c}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2),\n                getW(wR, wC, ${c} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1),\n                  getX(batch, xR, xC, ${c} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC),\n                  getX(batch, ${c} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}},fJ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.filterDepth,p=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${h}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${c}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${c}) *\n                  getW(wF, wR, wC, ${c}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1),\n                  getX(batch, xF, xR, xC, ${c} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2),\n                  getW(wF, wR, wC, ${c} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},mJ=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=hq(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,h=u,p="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<u;m++)p+=`\n           vec4 xTexelC${2*m};\n           int xTexelC${2*m}Ready;\n           vec4 xTexelC${2*m+1};\n           int xTexelC${2*m+1}Ready;\n           vec4 xC${m};`;p+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let m=0;m<u;m++)p+=`\n           xTexelC${2*m} = vec4(0.0);\n           xTexelC${2*m}Ready = 0;\n           xTexelC${2*m+1} = vec4(0.0);\n           xTexelC${2*m+1}Ready = 0;\n           xC${m} = vec4(0.0);`;p+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(h+1)/2;m++){let t=2*m;if(p+=`\n           xC = xCCorner + ${t*o};\n           `,1===i){if(t<u&&(s%2===1?(p+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,p+=1===o&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):p+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<u)){let e=s%2===0?Ra.nearestLargerEven(o):o;o%2===0&&s%2===1||o%2!==0&&s%2!==1?(p+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,p+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):p+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<u&&(s%2===1?(p+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<u&&(p+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(p+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<u&&(p+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<u&&(p+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<u&&(p+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}p+="\n     }\n   ",p+="\n     }\n   ",p+="\n     }\n   ";let d="",c="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,c="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${p}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${c}\n         setOutput(result);\n       }\n     `}},gJ=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=hq(this.outputShape.length);let{dataFormat:n}=t,r=sj(),a="channelsLast"===n,s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${u};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}};function yJ(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function bJ({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l,u=e.shape,h=r.texData.get(e.dataId),p=n.inChannels,d=u[0]*u[1]*u[2],c=n.outChannels,f="channelsLast"===n.dataFormat,m=!1,g=!1,y=[];if(null!=s){let e=yJ(s.shape,f);null!=e&&(s=ZX({inputs:{x:s},backend:r,attrs:{shape:e}}),y.push(s))}if(null!=a){let e=yJ(a.shape,f);null!=e&&(a=ZX({inputs:{x:a},backend:r,attrs:{shape:e}}),y.push(a))}if((1!==d&&1!==c||!(p>dY))&&h.isPacked&&f&&null!=h.texture&&u[2]%2!==0&&Ra.arraysEqual(h.shape.slice(-3),u.slice(-3))){let p=u[0]*u[1]*(u[2]+1),d={dataId:e.dataId,shape:[1,p,n.inChannels],dtype:e.dtype},c=h.shape;h.shape=h.shape.slice(),h.shape[h.shape.length-2]++,Ra.assert(GH(h.shape,d.shape),(()=>`packed reshape ${h.shape} to ${d.shape} isn't free`));let f=ZX({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(f);let b=cY({a:d,b:f,backend:r,transposeA:m,transposeB:g,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),x=r.texData.get(b.dataId);Ra.assert(x.isPacked,(()=>"batchMatMul result is expected to be packed")),h.shape=c,x.shape=n.outShape,l=_X({inputs:{x:b},backend:r}),l.shape=n.outShape,y.push(b)}else{let u=n.outHeight*n.outWidth,h=ZX({inputs:{x:e},backend:r,attrs:{shape:f?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),p=ZX({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=cY({a:f?h:p,b:f?p:h,transposeA:!f,transposeB:g,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});l=ZX({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),y.push(h),y.push(p),y.push(d)}for(let b of y)r.disposeIntermediateTensorInfo(b);return l}function xJ({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:h,outWidth:p,outHeight:d,dataFormat:c}=n,f="channelsLast"===c,m=l*u*h,g=d*p,y=[n.batchSize,m,g],b=!0,x=!1,w=[];if(null!=s){let e=yJ(s.shape,f);null!=e&&(s=ZX({inputs:{x:s},backend:r,attrs:{shape:e}}),w.push(s))}if(null!=a){let e=yJ(a.shape,f);null!=e&&(a=ZX({inputs:{x:a},backend:r,attrs:{shape:e}}),w.push(a))}let v=ZX({inputs:{x:t},backend:r,attrs:{shape:[1,m,Ra.sizeFromShape(t.shape)/m]}});w.push(v);let k=new gJ(y,n),I=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],S=r.runWebGLProgram(k,[e],"float32",I),N=ZX({inputs:{x:S},backend:r,attrs:{shape:y}});w.push(S),w.push(N);let T=null!=a,C=null!=s,_="leakyrelu"===o,E=o?UX(o,!0):null,$=new GX(f?N.shape:v.shape,f?v.shape:N.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],b,x,T,E,C,_),A=f?[N,v]:[v,N];if(a&&A.push(a),C&&A.push(s),_){let e=r.makeTensorInfo([],"float32",Ra.createScalarValue(i,"float32"));A.push(e),w.push(e)}let R=r.runWebGLProgram($,A,"float32"),F=ZX({inputs:{x:R},backend:r,attrs:{shape:n.outShape}});w.push(R);for(let D of w)r.disposeIntermediateTensorInfo(D);return F}function wJ(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dataFormat:u,dilations:h,dimRoundingMode:p}=a,d=tw.convertConv2DDataFormat(u),c=tw.computeConv2DInfo(s.shape,i.shape,o,h,l,p,!1,d);if(1!==c.filterHeight||1!==c.filterWidth||1!==c.dilationHeight||1!==c.dilationWidth||1!==c.strideHeight||1!==c.strideWidth||"SAME"!==c.padInfo.type&&"VALID"!==c.padInfo.type)if(c.strideWidth<=2&&"channelsLast"===d&&Je().getBool("WEBGL_EXP_CONV")){let e=new mJ(c),n=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];t=r.runWebGLProgram(e,[s,i],"float32",n)}else if(Je().getBool("WEBGL_CONV_IM2COL"))t=xJ({x:s,filter:i,convInfo:c,backend:r});else{let e=new cJ(c);t=r.runWebGLProgram(e,[s,i],"float32")}else t=bJ({x:s,filter:i,convInfo:c,backend:r});let f=ZX({inputs:{x:t},backend:r,attrs:{shape:c.outShape}});return r.disposeIntermediateTensorInfo(t),f}var vJ={kernelName:Dt,backendName:"webgl",kernelFunc:wJ},kJ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},IJ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,h=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${h}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},SJ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},NJ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};function TJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=r,p=tw.convertConv2DDataFormat(l),d=tw.computeConv2DInfo(a.shape,h,i,1,o,u,!1,p),c=new kJ(d);return n.runWebGLProgram(c,[a,s],"float32")}var CJ={kernelName:Mt,backendName:"webgl",kernelFunc:TJ};function _J(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=r,p=tw.convertConv2DDataFormat(u),d=tw.computeConv2DInfo(i,s.shape,o,1,l,h,!1,p),c=new IJ(d);return n.runWebGLProgram(c,[a,s],"float32")}var EJ={kernelName:Ot,backendName:"webgl",kernelFunc:_J};function $J(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=tw.computeConv3DInfo(a.shape,s.shape,i,l,o),h=new fJ(u);return n.runWebGLProgram(h,[a,s],"float32")}var AJ={kernelName:Lt,backendName:"webgl",kernelFunc:$J};function RJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=tw.computeConv3DInfo(a.shape,l,i,1,o),h=new SJ(u);return n.runWebGLProgram(h,[a,s],"float32")}var FJ={kernelName:zt,backendName:"webgl",kernelFunc:RJ};function DJ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=tw.computeConv3DInfo(l,s.shape,o,1,i),h=new NJ(u);return n.runWebGLProgram(h,[a,s],"float32")}var MJ,OJ={kernelName:Pt,backendName:"webgl",kernelFunc:DJ},LJ=BX+"\n  return cos(x);\n",zJ=WX({opSnippet:LJ}),PJ={kernelName:Bt,backendName:"webgl",kernelFunc:zJ},BJ="\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n",WJ=WX({opSnippet:BJ}),VJ={kernelName:Wt,backendName:"webgl",kernelFunc:WJ},UJ=class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[h,p]=n;this.outputShape=[u,h,p,l];let d="bilinear"===r?1:0,[c,f]=[i-1+".0",o-1+".0"],[m,g,y]=h>1?[""+(i-1)/(h-1),"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[b,x,w]=p>1?[""+(o-1)/(p-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${c} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}},GJ=e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,h=new UJ(a.shape,s.shape,o,l,u);return n.runWebGLProgram(h,[a,s,i],"float32")},HJ={kernelName:Gt,backendName:"webgl",kernelFunc:GJ};(function(e){e.Prod="*",e.Sum="+"})(MJ||(MJ={}));var jJ=class{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,s=this.op===MJ.Prod?"1.0":"0.0",i=n?s:`getX(${qJ(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${tq(a)} coords = getOutputCoords();\n        int end = ${KJ(a,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${KJ(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${qJ(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}};function qJ(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function KJ(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function XJ(e,t,n,r,a,s){let i=t.shape.length,o=tw.getAxesPermutation([r],i),l=t;null!=o&&(l=hY({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=tw.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);let h=l.shape[u],p=_X({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(h))-1;d++){let t=new jJ(e,l.shape,!1,s),r=[[d]],a=p;p=n.runWebGLProgram(t,[p],p.dtype,r),n.disposeIntermediateTensorInfo(a)}if(a){let t=new jJ(e,l.shape,a,s),r=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){let e=tw.getUndoAxesPermutation(o),t=hY({inputs:{x:p},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),t}return p}function YJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return XJ(MJ.Prod,a,n,s,i,o)}var ZJ={kernelName:Vt,backendName:"webgl",kernelFunc:YJ};function JJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return XJ(MJ.Sum,a,n,s,i,o)}var QJ={kernelName:Ut,backendName:"webgl",kernelFunc:JJ};function eQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=Gq(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){let e=n.bufferSync(a),t=n.bufferSync(s),r=Hq(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var tQ={kernelName:Ht,backendName:"webgl",kernelFunc:eQ},nQ=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function rQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l="NHWC"===i?a.shape[1]:a.shape[2],u="NHWC"===i?a.shape[2]:a.shape[3],h="NHWC"===i?a.shape[3]:a.shape[1],p=l*s,d=u*s,c=h/(s*s),f="NHWC"===i?[o,p,d,c]:[o,c,p,d],m=new nQ(f,s,i);return n.runWebGLProgram(m,[a],a.dtype)}var aQ={kernelName:jt,backendName:"webgl",kernelFunc:rQ},sQ=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=hq(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");let h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${h}\n        ${u}\n        setOutput(result);\n      }\n    `}},iQ=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=hq(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,h=e.filterWidth,p=h,d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<h;g++)d+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let g=0;g<h;g++)d+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(p+1)/2;g++){let e=2*g;if(d+=`\n          xC = xCCorner + ${e*l};\n          `,1===o){if(e<h&&(i%2===1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,d+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<h)){let t=i%2===0?Ra.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):d+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<h&&(i%2===1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<h&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<h&&(d+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<h&&(d+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<h&&(d+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let c="",f="";n&&(c=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${c}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}};function oQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,h=l;null==h&&(h=[1,1]),Ra.assert(tw.eitherStridesOrDilationsAreOne(i,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`));let p,d=tw.computeConv2DInfo(a.shape,s.shape,i,h,o,u,!0);p=Je().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?new iQ(d):new sQ(d);let c=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[a,s],"float32",c)}var lQ={kernelName:qt,backendName:"webgl",kernelFunc:oQ},uQ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},hQ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};function pQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=r,p=tw.computeConv2DInfo(a.shape,h,i,o,l,u,!0),d=new uQ(p);return n.runWebGLProgram(d,[a,s],"float32")}var dQ={kernelName:Kt,backendName:"webgl",kernelFunc:pQ};function cQ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=r,p=tw.computeConv2DInfo(h,s.shape,i,o,l,u,!0),d=new hQ(p);return n.runWebGLProgram(d,[a,s],"float32")}var fQ={kernelName:Xt,backendName:"webgl",kernelFunc:cQ},mQ=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}};function gQ(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=Ra.sizeFromShape(r.shape),i=ZX({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new mQ(s),l=n.runWebGLProgram(o,[i],i.dtype),u=ZX({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}var yQ={kernelName:Yt,backendName:"webgl",kernelFunc:gQ},bQ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:h,left:p}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}};function xQ(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dilations:u}=a,h=tw.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u),p=new bQ(h);t=r.runWebGLProgram(p,[s,i],"float32");let d=ZX({inputs:{x:t},backend:r,attrs:{shape:h.outShape}});return r.disposeIntermediateTensorInfo(t),d}var wQ={kernelName:Zt,backendName:"webgl",kernelFunc:xQ};function vQ(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=tw.decodeEinsumEquation(a,s.length);tw.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:h}=tw.getEinsumComputePath(o,l),p=h.length,d=null,c=i.length,f=[];for(let m=0;m<p;++m){for(let e of h[m]){let t,{permutationIndices:r,expandDims:a}=tw.getEinsumPermutation(c,l[e]);tw.isIdentityPermutation(r)?t=s[e]:(t=hY({inputs:{x:s[e]},backend:n,attrs:{perm:r}}),f.push(t));let i=t.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);Ra.arraysEqual(t.shape,i)||(t=ZX({inputs:{x:t},backend:n,attrs:{shape:i}}),f.push(t)),null===d?d=t:(d=KX({inputs:{a:t,b:d},backend:n}),f.push(d))}m<p-1&&(u[m]>=0&&(d=lY({inputs:{x:d},backend:n,attrs:{axis:u[m]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var kQ={kernelName:tn,backendName:"webgl",kernelFunc:vQ},IQ="return (x >= 0.0) ? x : (exp(x) - 1.0);",SQ="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",NQ=WX({opSnippet:IQ,packedOpSnippet:SQ}),TQ={kernelName:nn,backendName:"webgl",kernelFunc:NQ},CQ="return (b >= 1.0) ? a : a * (b + 1.0);",_Q="\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",EQ=e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new CX(_Q,r.shape,a.shape):new NX(CQ,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)},$Q={kernelName:rn,backendName:"webgl",kernelFunc:EQ},AQ="\n  return vec4(equal(a, b));\n",RQ="return float(a == b);",FQ=VX({opSnippet:RQ,packedOpSnippet:AQ,dtype:"bool",cpuKernelImpl:Xq}),DQ={kernelName:sn,backendName:"webgl",kernelFunc:FQ},MQ=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${tw.ERF_P};\n  float a1 = ${tw.ERF_A1};\n  float a2 = ${tw.ERF_A2};\n  float a3 = ${tw.ERF_A3};\n  float a4 = ${tw.ERF_A4};\n  float a5 = ${tw.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,OQ=WX({opSnippet:MQ}),LQ={kernelName:an,backendName:"webgl",kernelFunc:OQ},zQ=BX+"\n  return exp(x);\n",PQ="\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",BQ=WX({opSnippet:zQ,packedOpSnippet:PQ,cpuKernelImpl:Yq,dtype:"float32"}),WQ={kernelName:on,backendName:"webgl",kernelFunc:BQ};function VQ(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(Ra.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),ZX({inputs:{x:s},backend:r,attrs:{shape:o}})}var UQ={kernelName:ln,backendName:"webgl",kernelFunc:VQ},GQ="return exp(x) - 1.0;",HQ=WX({opSnippet:GQ,packedOpSnippet:GQ,cpuKernelImpl:Zq}),jQ={kernelName:un,backendName:"webgl",kernelFunc:HQ},qQ=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a,s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function KQ(e,t,n){let r=n.texData.get(e.dataId),a=Ra.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=a/s,o=ZX({inputs:{x:e},backend:n,attrs:{shape:[i,s]}}),l=o.shape,u=new qQ("real",l,t),h=new qQ("imag",l,t),p=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,p,"float32"),c=n.runWebGLProgram(h,p,"float32"),f=$X({inputs:{real:d,imag:c},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c);let m=ZX({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}function XQ(e){let{inputs:t,backend:n}=e,{input:r}=t;return KQ(r,!1,n)}var YQ={kernelName:hn,backendName:"webgl",kernelFunc:XQ},ZQ=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}};function JQ(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||Ra.inferDtype(a),"string"===s){let e=Ra.getArrayFromDType(s,Ra.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{let e=new ZQ(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}var QQ,e0={kernelName:pn,backendName:"webgl",kernelFunc:JQ},t0=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},n0={kernelName:dn,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,a=new t0(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},r0="return floor(x);",a0=WX({opSnippet:r0,packedOpSnippet:r0,cpuKernelImpl:Jq}),s0={kernelName:cn,backendName:"webgl",kernelFunc:a0},i0="\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",o0="\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",l0=VX({opSnippet:i0,packedOpSnippet:o0,dtype:"int32"}),u0={kernelName:fn,backendName:"webgl",kernelFunc:l0},h0=class{constructor(e){this.variableNames=["A"];let t=sj(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}},p0=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=sj(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}},d0={kernelName:fa,backendName:"webgl",kernelFunc:f0},c0=Je().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function f0(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],h=[u,l],p=[u,l,s];if(o||i){let e=Je().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==QQ||e!==c0)&&(c0=e,QQ=document.createElement("canvas").getContext("2d",{willReadFrequently:c0})),QQ.canvas.width=l,QQ.canvas.height=u,QQ.drawImage(a,0,0,l,u),a=QQ.canvas}let d=n.makeTensorInfo(h,"int32");n.texData.get(d.dataId).usage=GG.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);let c=Je().getBool("WEBGL_PACK")?new p0(p):new h0(p),f=n.runWebGLProgram(c,[d],"int32");return n.disposeData(d.dataId),f}function m0(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=n,{strides:u,pad:h,dataFormat:p,dilations:d,dimRoundingMode:c,activation:f,leakyreluAlpha:m}=a,g=tw.convertConv2DDataFormat(p),y=tw.computeConv2DInfo(s.shape,i.shape,u,d,h,c,!1,g),b=[],x=null!=o,w=null!=l,v="leakyrelu"===f,k=()=>{let e=[s,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=ZX({inputs:{x:e},backend:r,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(o,p)),w&&e.push(t(l,p)),v){let t=r.makeTensorInfo([],"float32",Ra.createScalarValue(m,"float32"));e.push(t),b.push(t)}return e};if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(y.strideWidth<=2&&"channelsLast"===g&&Je().getBool("WEBGL_EXP_CONV")){let e=f?UX(f,!0):null,n=new mJ(y,x,e,w,v),a=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],s=k();t=r.runWebGLProgram(n,s,"float32",a)}else if(Je().getBool("WEBGL_CONV_IM2COL"))t=xJ({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=f?UX(f,!1):null,n=new cJ(y,x,e,w,v),a=k();t=r.runWebGLProgram(n,a,"float32")}else t=bJ({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});let I=ZX({inputs:{x:t},backend:r,attrs:{shape:y.outShape}});return b.push(t),b.forEach((e=>r.disposeIntermediateTensorInfo(e))),I}var g0={kernelName:ya,backendName:"webgl",kernelFunc:m0};function y0(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:c}=r,f=[],m=h;null==m&&(m=[1,1]),Ra.assert(tw.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));let g,y=tw.computeConv2DInfo(a.shape,s.shape,l,m,u,p,!0),b=Je().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,x=d?UX(d,b):null,w=[a,s],v=null!=i,k=null!=o,I="leakyrelu"===d;if(v&&w.push(i),k&&w.push(o),I){let e=n.makeTensorInfo([],"float32",Ra.createScalarValue(c,"float32"));w.push(e),f.push(e)}g=b?new iQ(y,v,x,k,I):new sQ(y,v,x,k,I);let S=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],N=n.runWebGLProgram(g,w,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}var b0={kernelName:ba,backendName:"webgl",kernelFunc:y0},x0=class{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;let a=tq(n.length),s="\n    int index;";for(let i=0;i<this.sliceDim;i++)s+=`\n          index = round(getIndices(coords[0], ${i}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};\n          flattenIndex += index * ${this.strides[i]};`;this.userCode=`\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${s}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}};function w0(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=Ra.sizeFromShape(r.shape),[l,u,h,p]=tw.prepareAndValidate(r,a),d=ZX({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),c=ZX({inputs:{x:r},backend:n,attrs:{shape:[Ra.sizeFromShape(r.shape)/h,h]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){let e=n.readSync(a.dataId),t=n.bufferSync(r),s=Qq(e,t,r.dtype,u,i,h,p,r.shape,o);return n.makeTensorInfo(l,r.dtype,s.values)}let f=new x0(i,p,[u,h],r.shape),m=n.runWebGLProgram(f,[c,d],c.dtype),g=ZX({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),g}var v0={kernelName:yn,backendName:"webgl",kernelFunc:w0},k0=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=tq(this.rank),r=I0(e,2);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}};function I0(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)2===a?r.push("index"):r.push(`${n[a]}`);return r.join()}function S0(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=Ra.parseAxisParam(i,a.shape)[0];if(Je().get("DEBUG")){let e=n.readSync(s.dataId),t=a.shape[l];for(let n=0;n<e.length;++n){let r=e[n];Ra.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}let u=tw.segment_util.collectGatherOpShapeInfo(a,s,l,o),h=Ra.sizeFromShape(s.shape),p=[],d=ZX({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=ZX({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,h/u.batchSize]}});p.push(d),p.push(c);let f=[u.batchSize,u.outerSize,h/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){let e=n.bufferSync(c),t=n.bufferSync(d),r=eK(t,e,f);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}let m=new k0(d.shape,f),g=n.runWebGLProgram(m,[d,c],d.dtype);p.push(g);let y=ZX({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}var N0={kernelName:gn,backendName:"webgl",kernelFunc:S0},T0="return float(a > b);",C0="\n  return vec4(greaterThan(a, b));\n",_0=VX({opSnippet:T0,packedOpSnippet:C0,cpuKernelImpl:tK,dtype:"bool"}),E0={kernelName:bn,backendName:"webgl",kernelFunc:_0},$0="return float(a >= b);",A0="\n  return vec4(greaterThanEqual(a, b));\n",R0=VX({opSnippet:$0,packedOpSnippet:A0,dtype:"bool",cpuKernelImpl:nK}),F0={kernelName:xn,backendName:"webgl",kernelFunc:R0};function D0(e){let{inputs:t,backend:n}=e,{input:r}=t;return KQ(r,!0,n)}var M0={kernelName:vn,backendName:"webgl",kernelFunc:D0},O0="return float(!isnan(x) && !isinf(x));",L0=WX({opSnippet:O0,dtype:"bool"}),z0={kernelName:In,backendName:"webgl",kernelFunc:L0},P0="return float(isinf(x));",B0=WX({opSnippet:P0,dtype:"bool"}),W0={kernelName:Sn,backendName:"webgl",kernelFunc:B0},V0="return float(isnan(x));",U0=WX({opSnippet:V0,dtype:"bool"}),G0={kernelName:Nn,backendName:"webgl",kernelFunc:U0},H0="return float(a < b);",j0="\n  return vec4(lessThan(a, b));\n",q0=VX({opSnippet:H0,packedOpSnippet:j0,cpuKernelImpl:rK,dtype:"bool"}),K0={kernelName:Cn,backendName:"webgl",kernelFunc:q0},X0="return float(a <= b);",Y0="\n  return vec4(lessThanEqual(a, b));\n",Z0=VX({opSnippet:X0,packedOpSnippet:Y0,cpuKernelImpl:aK,dtype:"bool"}),J0={kernelName:_n,backendName:"webgl",kernelFunc:Z0};function Q0(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=sK(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}var e1={kernelName:En,backendName:"webgl",kernelFunc:Q0},t1=BX+"\n  return x < 0.0 ? 0./0. : log(x);\n",n1="\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",r1=WX({opSnippet:t1,packedOpSnippet:n1,cpuKernelImpl:iK}),a1={kernelName:$n,backendName:"webgl",kernelFunc:r1},s1=BX+"\n  return log(1.0 + x);\n",i1=WX({opSnippet:s1}),o1={kernelName:An,backendName:"webgl",kernelFunc:i1},l1="return float(a >= 1.0 && b >= 1.0);",u1="\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",h1=VX({opSnippet:l1,packedOpSnippet:u1,dtype:"bool"}),p1={kernelName:Rn,backendName:"webgl",kernelFunc:h1},d1="return float(!(x >= 1.0));",c1=WX({opSnippet:d1}),f1={kernelName:Fn,backendName:"webgl",kernelFunc:c1},m1="return float(a >= 1.0 || b >= 1.0);",g1="\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",y1=VX({opSnippet:m1,packedOpSnippet:g1,dtype:"bool"}),b1={kernelName:Dn,backendName:"webgl",kernelFunc:y1},x1=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}},w1=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}},v1=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=Je().getBool("WEBGL_PACK_NORMALIZATION")?new w1(a.shape,s,i,o,l):new x1(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)},k1={kernelName:zn,backendName:"webgl",kernelFunc:v1},I1=class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}},S1=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:h}=r,p=new I1(a.shape,o,l,u,h);return n.runWebGLProgram(p,[a,s,i],a.dtype)},N1={kernelName:Pn,backendName:"webgl",kernelFunc:S1};function T1(e,t,n,r){let a=Ra.sizeFromShape(t),s=Ra.sizeFromShape(e.shape)/a,i=ZX({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),o=nY(i,e.dtype,"max",r),l=ZX({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}function C1(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=Ra.parseAxisParam(s,a.shape),u=l,h=tw.getAxesPermutation(u,o),p=null!=h,d=n.shouldExecuteOnCPU([a]),c=a;if(p){if(d){let e=n.texData.get(c.dataId).values,t=new Array(o);for(let n=0;n<t.length;n++)t[n]=a.shape[h[n]];let r=DK(e,a.shape,a.dtype,h,t);c=n.makeTensorInfo(t,a.dtype);let s=n.texData.get(c.dataId);s.values=r}else c=iY(a,h,n);u=tw.getInnerMostAxes(u.length,o)}tw.assertAxesAreInnerMostDims("max",u,o);let f,[m,g]=tw.computeOutAndReduceShapes(c.shape,u),y=m;if(i&&(y=tw.expandShapeToKeepDim(m,l)),d){let e=n.texData.get(c.dataId).values,t=oK(e,Ra.sizeFromShape(g),y,a.dtype);f=n.makeTensorInfo(y,a.dtype);let r=n.texData.get(f.dataId);r.values=t}else f=T1(c,g,y,n);return p&&n.disposeIntermediateTensorInfo(c),f}var _1={kernelName:Bn,backendName:"webgl",kernelFunc:C1},E1=SX+"\n  return max(a, b);\n",$1="\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+TX+"\n  return result;\n",A1=VX({opSnippet:E1,packedOpSnippet:$1,cpuKernelImpl:lK}),R1={kernelName:Wn,backendName:"webgl",kernelFunc:A1};function F1(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;rj(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=1;Ra.assert(tw.eitherStridesOrDilationsAreOne(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));let h=tw.computePool2DInfo(a.shape,s,i,u,o,l);if(1===h.filterWidth&&1===h.filterHeight&&Ra.arraysEqual(h.inShape,h.outShape))return _X({inputs:{x:a},backend:n});let p=new oZ(h,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}var D1={kernelName:Vn,backendName:"webgl",kernelFunc:F1};function M1(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,h=[1,1,1],p=tw.computePool3DInfo(a.shape,s,i,h,o,u,l),d=new lZ(p,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}var O1={kernelName:Gn,backendName:"webgl",kernelFunc:M1},L1=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},z1=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=o-1-e.padInfo.front,p=l-1-e.padInfo.top,d=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${p}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${c} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};function P1(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=r,p=[1,1,1],d=tw.computePool3DInfo(i.shape,o,l,p,u,h),c=new lZ(d,"max",!0),f=n.runWebGLProgram(c,[i],i.dtype),m=new z1(d),g=n.runWebGLProgram(m,[a,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}var B1={kernelName:Hn,backendName:"webgl",kernelFunc:P1};function W1(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;rj([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:h,dimRoundingMode:p}=r,d=tw.computePool2DInfo(o.shape,l,u,1,h,p),c=!0,f=new oZ(d,"max",c),m=n.runWebGLProgram(f,[o],o.dtype),g=new L1(d),y=n.runWebGLProgram(g,[a,m],o.dtype);return n.disposeIntermediateTensorInfo(m),y}var V1={kernelName:Un,backendName:"webgl",kernelFunc:W1};function U1(e,t,n,r){let a=new oZ(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");a=new oZ(n,"max",!0,!0,t);let i=r.runWebGLProgram(a,[e],"float32");return[s,i]}var G1={kernelName:jn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;Ra.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));let u=[1,1];Ra.assert(tw.eitherStridesOrDilationsAreOne(s,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`));let h=tw.computePool2DInfo(r.shape,a,s,u,i),[p,d]=U1(r,o,h,l);return[p,d]}};function H1(e,t,n,r){let a=Ra.sizeFromShape(t),s=Ra.sizeFromShape(e.shape)/a,i=ZX({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),o=nY(i,"float32","mean",r),l=ZX({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}var j1={kernelName:qn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,l=Ra.parseAxisParam(s,r.shape),u=l,h=tw.getAxesPermutation(u,o),p=null!=h,d=i.shouldExecuteOnCPU([r]),c=[],f=r;if(p){if(d){let e=i.texData.get(f.dataId).values,t=new Array(o);for(let s=0;s<t.length;s++)t[s]=r.shape[h[s]];let n=DK(e,r.shape,r.dtype,h,t);f=i.makeTensorInfo(t,r.dtype);let a=i.texData.get(f.dataId);a.values=n}else f=iY(r,h,i);c.push(f),u=tw.getInnerMostAxes(u.length,o)}tw.assertAxesAreInnerMostDims("sum",u,o);let[m,g]=tw.computeOutAndReduceShapes(f.shape,u),y=m;a&&(y=tw.expandShapeToKeepDim(m,l));let b=H1(f,g,y,i);for(let x of c)i.disposeIntermediateTensorInfo(x);return b}};function q1(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=Ra.parseAxisParam(s,a.shape),u=l,h=tw.getAxesPermutation(u,o),p=a;null!=h&&(p=hY({inputs:{x:a},backend:n,attrs:{perm:h}}),u=tw.getInnerMostAxes(u.length,a.shape.length)),tw.assertAxesAreInnerMostDims("min",u,o);let d,[c,f]=tw.computeOutAndReduceShapes(p.shape,u),m=Ra.sizeFromShape(f),g=ZX({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),y=nY(g,g.dtype,"min",n);if(i){let e=tw.expandShapeToKeepDim(c,l);d=ZX({inputs:{x:y},backend:n,attrs:{shape:e}})}else d=ZX({inputs:{x:y},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=h&&n.disposeIntermediateTensorInfo(p),d}var K1={kernelName:Kn,backendName:"webgl",kernelFunc:q1},X1=SX+"\n  return min(a, b);\n",Y1="\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+TX+"\n  return result;\n",Z1=VX({opSnippet:X1,packedOpSnippet:Y1,cpuKernelImpl:uK}),J1={kernelName:Xn,backendName:"webgl",kernelFunc:Z1},Q1=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=tq(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}},e2=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=tq(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=LK("rc",r),l=LK("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${l.slice(-2).join()})`,p="reflect"===n?0:1,d="";if(1===r){let e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${h});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${h});\n        }\n      `}else{let e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${h});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${h});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${h});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${h});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}},t2=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:a,mode:s}=n,i=Je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new e2(r.shape,a,s):new Q1(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)},n2={kernelName:Yn,backendName:"webgl",kernelFunc:t2},r2="if (b == 0.0) return NAN;\n  return mod(a, b);",a2="\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+TX+"\n  return result;\n",s2=VX({opSnippet:r2,packedOpSnippet:a2}),i2={kernelName:Zn,backendName:"webgl",kernelFunc:s2},o2=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}},l2="\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",u2="\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",h2=VX({opSnippet:l2,packedOpSnippet:u2,checkOutOfBounds:!0}),p2={kernelName:en,backendName:"webgl",kernelFunc:h2},d2="return a - b;",c2=VX({opSnippet:d2,packedOpSnippet:d2,supportsComplex:!0,cpuKernelImpl:AK}),f2={kernelName:ta,backendName:"webgl",kernelFunc:c2};function m2(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=Ra.parseAxisParam([s],a.shape),o=C1({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=tw.expandShapeToKeepDim(o.shape,i),u=ZX({inputs:{x:o},backend:n,attrs:{shape:l}}),h=c2({inputs:{a:a,b:u},backend:n}),p=BQ({inputs:{x:h},backend:n}),d=lY({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),c=ZX({inputs:{x:d},backend:n,attrs:{shape:l}}),f=h2({inputs:{a:p,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),f}var g2={kernelName:Ur,backendName:"webgl",kernelFunc:m2};function y2(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:m2({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],h=l.shape[1],p=new o2(u,h,s),d=[[i]],c=n.runWebGLProgram(p,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),c}var b2={kernelName:Jn,backendName:"webgl",kernelFunc:y2},x2=YK+"\n  return -x;\n",w2="\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n";function v2(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])){let e=r.texData.get(a.dataId),[t,n]=pK(e.values,a.shape,a.dtype);return r.makeTensorInfo(n,a.dtype,t)}return t=Je().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new uX(a.shape,w2):new XK(a.shape,x2),r.runWebGLProgram(t,[a],a.dtype)}var k2={kernelName:er,backendName:"webgl",kernelFunc:v2},I2=ov.nonMaxSuppressionV3Impl;function S2(e){tw.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:p}=I2(u,h,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var N2={kernelName:nr,backendName:"webgl",kernelFunc:S2},T2=ov.nonMaxSuppressionV4Impl;function C2(e){tw.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,h=n.readSync(a.dataId),p=n.readSync(s.dataId),{selectedIndices:d,validOutputs:c}=T2(h,p,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}var _2={kernelName:rr,backendName:"webgl",kernelFunc:C2},E2=ov.nonMaxSuppressionV5Impl;function $2(e){tw.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,h=n.readSync(a.dataId),p=n.readSync(s.dataId),d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=E2(h,p,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var A2={kernelName:ar,backendName:"webgl",kernelFunc:$2},R2=class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}},F2=e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=Ra.sizeFromShape(a.shape),h=new R2(u,i,o,l),p=ZX({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(h,[p],s);n.disposeIntermediateTensorInfo(p);let c=[...a.shape,i],f=ZX({inputs:{x:d},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(d),f},D2={kernelName:ir,backendName:"webgl",kernelFunc:F2};function M2(e){let{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){let e=WZ({inputs:{input:r},backend:n}),t=M2({inputs:{x:e},backend:n}),a=oJ({inputs:{input:r},backend:n}),s=M2({inputs:{x:a},backend:n}),i=$X({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return JQ({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var O2={kernelName:da,backendName:"webgl",kernelFunc:M2};function L2(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){let e=WZ({inputs:{input:r},backend:n}),t=L2({inputs:{x:e},backend:n}),a=oJ({inputs:{input:r},backend:n}),s=M2({inputs:{x:a},backend:n}),i=$X({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return JQ({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}var z2={kernelName:sr,backendName:"webgl",kernelFunc:L2};function P2(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return VQ({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{Ra.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Ra.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=t.map((e=>{let t=VQ({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),u=pJ({inputs:l,backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}var B2={kernelName:or,backendName:"webgl",kernelFunc:P2},W2=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=tq(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}},V2=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=tq(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=LK("rc",r),l=LK("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${l.slice(-2).join()})`,p=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let f=0,m=1===r?2:4;f<m;f++)c+=`\n        ${p[f]}\n        if (${d}) {\n          result[${f}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${h});\n        }\n      `;c+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${c}\n        setOutput(result);\n      }\n    `}},U2=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===Ra.sizeFromShape(a.shape)){let e=s.map(((e,t)=>e[0]+a.shape[t]+e[1]));return JQ({backend:n,attrs:{shape:e,value:i,dtype:a.dtype}})}let o=Je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new V2(a.shape,s,i):new W2(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},G2={kernelName:lr,backendName:"webgl",kernelFunc:U2},H2="\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",j2="\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+TX+"\n  return result;\n",q2=VX({opSnippet:H2,packedOpSnippet:j2}),K2={kernelName:hr,backendName:"webgl",kernelFunc:q2};function X2(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a,l=s.shape.length,u=[],h=Ra.parseAxisParam(i,s.shape),p=h,d=tw.getAxesPermutation(p,l),c=s;if(null!=d&&(c=hY({inputs:{x:s},backend:r,attrs:{perm:d}}),p=tw.getInnerMostAxes(p.length,l),u.push(c)),tw.assertAxesAreInnerMostDims("prod",p,l),r.shouldExecuteOnCPU([c])){let e=r.texData.get(c.dataId).values,{outVals:n,outShape:a,outDtype:s}=cK(c.shape,c.dtype,e,p);t=r.makeTensorInfo(a,s,n)}else{let[e,n]=tw.computeOutAndReduceShapes(c.shape,p),a=Ra.sizeFromShape(n),i=ZX({inputs:{x:c},backend:r,attrs:{shape:[-1,a]}}),o=Ls(s.dtype),l=nY(i,o,"prod",r);t=ZX({inputs:{x:l},backend:r,attrs:{shape:e}}),u.push(i),u.push(l)}if(o){u.push(t);let e=tw.expandShapeToKeepDim(t.shape,h);t=ZX({inputs:{x:t},backend:r,attrs:{shape:e}})}return u.forEach((e=>r.disposeIntermediateTensorInfo(e))),t}var Y2={kernelName:dr,backendName:"webgl",kernelFunc:X2};function Z2(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map((e=>n.readSync(e.dataId))),u=a.map((e=>e.shape)),h=n.readSync(s.dataId),p=n.readSync(i.dataId),[d,c,f]=fK(l,u,h,s.shape,s.dtype,p,i.shape,o),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,c);return m.concat([g])}var J2={kernelName:cr,backendName:"webgl",kernelFunc:Z2};function Q2(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,h]=mK(i,r.shape,r.dtype,o,a.shape,l,s.shape),p=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([h.length],r.dtype,h);return[p,d]}var e3={kernelName:fr,backendName:"webgl",kernelFunc:Q2};function t3(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(a.dataId),h=n.readSync(s.dataId),p=n.readSync(i.dataId),d=o.map((e=>n.readSync(e.dataId))),c=o.map((e=>e.shape)),[f,m]=gK(u,a.shape,h,s.shape,s.dtype,p,i.shape,d,c,l);return n.makeTensorInfo(f,s.dtype,m)}var n3={kernelName:mr,backendName:"webgl",kernelFunc:t3},r3=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=yK(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},a3={kernelName:gr,backendName:"webgl",kernelFunc:r3},s3="return 1.0 / x;",i3=WX({opSnippet:s3}),o3={kernelName:br,backendName:"webgl",kernelFunc:i3},l3=YK+"\n  return (x < 0.0) ? 0.0 : x;\n",u3="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",h3=WX({opSnippet:l3,packedOpSnippet:u3}),p3={kernelName:xr,backendName:"webgl",kernelFunc:h3},d3=YK+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",c3="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",f3=WX({opSnippet:d3,packedOpSnippet:c3}),m3={kernelName:Nr,backendName:"webgl",kernelFunc:f3},g3=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}},y3=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]},\n          ${h[1]/p[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}};function b3(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,h=Je().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new y3(a.shape,l,u,s,i):new g3(a.shape,l,u,s,i);return n.runWebGLProgram(h,[a],"float32")}var x3={kernelName:Ir,backendName:"webgl",kernelFunc:b3},w3=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],h=o[1]/l[1],p=1/u,d=1/h,c=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}};function v3(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new w3(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var k3={kernelName:Sr,backendName:"webgl",kernelFunc:v3},I3=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";u=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}},S3=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";u=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]},\n          ${h[1]/p[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}};function N3(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,h=Je().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new S3(a.shape,l,u,s,i):new I3(a.shape,l,u,s,i);return n.runWebGLProgram(h,[a],a.dtype)}var T3={kernelName:vr,backendName:"webgl",kernelFunc:N3},C3=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],h=o[1]/l[1],p=1/u,d=1/h,c=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}};function _3(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new C3(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var E3={kernelName:kr,backendName:"webgl",kernelFunc:_3},$3=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);let r=n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`,a=e.map(((e,t)=>r(t))).join(","),s=tq(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}},A3=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=LK("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=tq(n);function o(e){return p(e)}function l(e){return e[n-1]="("+e[n-1]+" + 1)",p(e)}function u(e){return e[n-2]="("+e[n-2]+" + 1)",p(e)}function h(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",p(e)}function p(t){let n=e.map(((e,n)=>d(n,t))),r=n.join(","),a=n.slice(-2).join(",");return`getChannel(getX(${r}), vec2(${a}))`}function d(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o(r.slice())};\n          if(${a}){\n            result.g = ${l(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${u(r.slice())};\n            if(${a}) {\n              result.a = ${h(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}};function R3(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=Ra.parseAxisParam(s,a.shape);if(0===i)return _X({inputs:{x:a},backend:n});let l=Je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new A3(a.shape,o):new $3(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}var F3={kernelName:Tr,backendName:"webgl",kernelFunc:R3},D3=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},M3={kernelName:ma,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=new D3(r.shape,s),[u,h]=tw.getImageCenter(i,r.shape[1],r.shape[2]),p=[[u,h,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[r],r.dtype,p)}},O3="\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n",L3=WX({opSnippet:O3}),z3={kernelName:Cr,backendName:"webgl",kernelFunc:L3},P3="return inversesqrt(x);",B3=WX({opSnippet:P3,cpuKernelImpl:bK}),W3={kernelName:_r,backendName:"webgl",kernelFunc:B3},V3=class{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let o=tq(a.length),l=tq(s.length),u="";1===n?u="i":2===n&&(u="i, j");let h=`getIndices(${u})`,p="";1===r?p="i":2===r&&(p="i, coords[1]");let d=`getUpdates(${p})`,c=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${c};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}};function U3(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:p}=tw.calculateShapes(s,a,i),d=[p/u,u];if(0===p)return n.makeTensorInfo(i,a.dtype);let c=ZX({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=ZX({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new V3(l,o,c.shape.length,f.shape.length,h,d),y=n.runWebGLProgram(g,[f,c,m],f.dtype),b=ZX({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}var G3={kernelName:Er,backendName:"webgl",kernelFunc:U3},H3=class{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let a="while (left < right) {",s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===Je().getNumber("WEBGL_VERSION")?a:s,o="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}};function j3(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new H3(a.shape[0],a.shape[1],s.shape[1],i),l=[[a.shape[1]]];return n.runWebGLProgram(o,[a,s],"int32",l)}var q3={kernelName:$r,backendName:"webgl",kernelFunc:j3},K3=class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}let s=tq(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}};function X3(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new K3(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],Os(a.dtype,s.dtype))}var Y3={kernelName:Ar,backendName:"webgl",kernelFunc:X3},Z3=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${tw.SELU_SCALEALPHA};\n  float scale = ${tw.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,J3=WX({opSnippet:Z3}),Q3={kernelName:Rr,backendName:"webgl",kernelFunc:J3},e4=BX+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",t4="\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",n4=WX({opSnippet:e4,packedOpSnippet:t4,cpuKernelImpl:wK}),r4={kernelName:Lr,backendName:"webgl",kernelFunc:n4},a4="\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n",s4=WX({opSnippet:a4}),i4={kernelName:Or,backendName:"webgl",kernelFunc:s4},o4=BX+"\n  return sin(x);\n",l4=WX({opSnippet:o4}),u4={kernelName:Dr,backendName:"webgl",kernelFunc:l4},h4="\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n",p4=WX({opSnippet:h4}),d4={kernelName:Mr,backendName:"webgl",kernelFunc:p4},c4="\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n",f4=WX({opSnippet:c4}),m4={kernelName:zr,backendName:"webgl",kernelFunc:f4},g4=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;Ra.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<a.shape.length;++y)l.push([0,0]);let u=[],h=U2({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=tw.getReshaped(h.shape,s,o,!1),d=tw.getPermuted(p.length,s.length,!1),c=tw.getReshapedPermuted(h.shape,s,o,!1),f=ZX({inputs:{x:h},backend:n,attrs:{shape:p}}),m=hY({inputs:{x:f},backend:n,attrs:{perm:d}}),g=ZX({inputs:{x:m},backend:n,attrs:{shape:c}});return u.push(h),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g},y4={kernelName:Wr,backendName:"webgl",kernelFunc:g4};function b4(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),h=n.readSync(i.dataId)[0],[p,d,c,f,m]=IK(o,r.shape,r.dtype,l,a.dtype,u,h);return[n.makeTensorInfo(d,r.dtype,p),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}var x4={kernelName:Gr,backendName:"webgl",kernelFunc:b4};function w4(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,h,p]=SK(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(h,r.dtype,u),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var v4={kernelName:Hr,backendName:"webgl",kernelFunc:w4};function k4(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,h]=NK(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(h,r.dtype,u)}var I4={kernelName:jr,backendName:"webgl",kernelFunc:k4};function S4(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,h]=NK(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(h,r.dtype,u)}var N4={kernelName:qr,backendName:"webgl",kernelFunc:S4};function T4(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:h,strides:p,outputSize:d}=tw.calculateShapes(s,a,o),c=!1;if("string"===s.dtype){let e=n.bufferSync(a),t=n.bufferSync(s),r=Ra.decodeString(n.readSync(i.dataId)[0]),f=xK(e,t,o,d,h,u,l,p,r,c);return n.makeTensorInfo(o,f.dtype,f.values)}let f=new V3(u,l,a.shape.length,s.shape.length,p,[d,1],c),m=n.runWebGLProgram(f,[s,a,i],s.dtype),g=ZX({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}var C4={kernelName:Kr,backendName:"webgl",kernelFunc:T4};function _4(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=Ra.parseAxisParam(i,a.shape)[0],l=tw.prepareSplitSize(a,s,o),u=a.shape.length,h=new Array(u).fill(0),p=a.shape.slice();return l.map((e=>{let t=[...p];t[o]=e;let r=$Z({inputs:{x:a},backend:n,attrs:{begin:h,size:t}});return h[o]+=e,r}))}var E4={kernelName:Vr,backendName:"webgl",kernelFunc:_4},$4="return sqrt(x);",A4=WX({opSnippet:$4,packedOpSnippet:$4,cpuKernelImpl:TK}),R4={kernelName:Pr,backendName:"webgl",kernelFunc:A4},F4="return x * x;",D4=WX({opSnippet:F4}),M4={kernelName:Yr,backendName:"webgl",kernelFunc:D4},O4="return (a - b) * (a - b);",L4=VX({opSnippet:O4,packedOpSnippet:O4}),z4={kernelName:Xr,backendName:"webgl",kernelFunc:L4};function P4({inputs:e,attrs:t,backend:n}){let{x:r}=e,a=YK+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new XK(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}var B4={kernelName:ca,backendName:"webgl",kernelFunc:P4},W4=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=tq(n.length),s=tq(n.length),i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}};function V4(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:h,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:w,strides:v}=_x.sliceInfo(s.shape,i,o,l,u,h,p,d,c);if(g)t=ZX({inputs:{x:s},backend:r,attrs:{shape:m}});else if(y||b){Ra.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=_x.computeOutShape(x,w,v),n=$Z({inputs:{x:s},backend:r,attrs:{begin:x,size:e}});t=ZX({inputs:{x:n},backend:r,attrs:{shape:m}}),r.disposeIntermediateTensorInfo(n)}else if(r.shouldExecuteOnCPU([s])){let e=r.readSync(s.dataId),n=No(s.shape,s.dtype,e),a=CK(f,n,v,x);t=r.makeTensorInfo(m,s.dtype,a.values)}else{let e=new W4(x,v,f);t=r.runWebGLProgram(e,[s],s.dtype)}let k=ZX({inputs:{x:t},backend:r,attrs:{shape:m}});return r.disposeIntermediateTensorInfo(t),k}var U4={kernelName:Zr,backendName:"webgl",kernelFunc:V4};function G4(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:h,dataSplits:p}=t,d=n.readSync(h.dataId),c=n.readSync(p.dataId),[f,m]=_K(d,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}var H4={kernelName:Jr,backendName:"webgl",kernelFunc:G4};function j4(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,h,p]=EK(o,l,a),d=h.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",h),n.makeTensorInfo([2],"int32",new Int32Array(p))]}var q4={kernelName:Qr,backendName:"webgl",kernelFunc:j4};function K4(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=$K(i,a);return n.makeTensorInfo(s.shape,"int32",o)}var X4={kernelName:ea,backendName:"webgl",kernelFunc:K4},Y4="return tan(x);",Z4=WX({opSnippet:Y4}),J4={kernelName:na,backendName:"webgl",kernelFunc:Z4},Q4="\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n",e6=WX({opSnippet:Q4}),t6={kernelName:ra,backendName:"webgl",kernelFunc:e6},n6=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;let r=tq(this.rank),a=r6(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}};function r6(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}function a6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){let e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>Ra.decodeString(e))):e,r=No(a.shape,a.dtype,t),i=RK(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}let i=new n6(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var s6={kernelName:aa,backendName:"webgl",kernelFunc:a6},i6=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}},o6=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function l6(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function u6(e){let t=1;for(;t<e;)t*=2;return t}function h6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=Je().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Je().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,h=u[u.length-1];if(n.shouldExecuteOnCPU([a])||h<o||s>l){let e=n.readSync(a.dataId),[t,r]=FK(e,u,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===h)return[a,JQ({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let p=n.texData.get(a.dataId),d=null!==p&&p.isPacked,c=d?n.unpackTensor(a):a,f=Ra.sizeFromShape(u)/h,m=ZX({inputs:{x:c},attrs:{shape:[f,h]},backend:n});d&&l6(n,c);let g=u6(s),y=u6(h),b=null,x=()=>null===b?[m,m]:[m,b],w=(e,t,r)=>{let a=x(),s=new i6(r),i=[[h],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),l6(n,o)};for(let N=1;N<g;N*=2){let e=2*N;for(let t=N;t>=1;t/=2)w(e,t,[f,y])}for(let N=y;N>g;N/=2){let e=x(),t=new o6([f,N/2]),r=[[h],[null===b?1:0],[g]],a=b;b=n.runWebGLProgram(t,e,"int32",r),l6(n,a);let s=g/2,i=2*s;for(let n=s;n>=1;n/=2)w(i,n,b.shape)}let v=b;b=$Z({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),l6(n,v);let k=S0({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});l6(n,m);let I=u.slice(0,-1);I.push(s),v=b,b=ZX({inputs:{x:b},attrs:{shape:I},backend:n}),l6(n,v);let S=k;return k=ZX({inputs:{x:k},attrs:{shape:I},backend:n}),l6(n,S),[k,b]}var p6={kernelName:sa,backendName:"webgl",kernelFunc:h6},d6=class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i,o="nearest"===n?1:2;switch(r){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}};function c6(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[h,p,d,c]=a.shape,[f,m]=null!=u?u:[p,d],g=[h,f,m,c],y=new d6(p,d,i,o,l,g);return n.runWebGLProgram(y,[a,s],"float32")}var f6={kernelName:ia,backendName:"webgl",kernelFunc:c6};function m6(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;rj(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=MK(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}var g6={kernelName:la,backendName:"webgl",kernelFunc:m6};function y6(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),h=0;for(let m=0;m<o;m++)m!==s&&(u[h++]=i.shape[m]);let p=[],d=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let m=0;m<f.length;m++){d[s]=m;let e=$Z({inputs:{x:i},backend:n,attrs:{begin:d,size:c}}),t=ZX({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,p.push(e)}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var b6={kernelName:ua,backendName:"webgl",kernelFunc:y6},x6=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o="0.0",l="sumValue",u=4*Math.floor(n/4),h=n%4,p="\n        sumValue += dot(values, segFilter);\n    ",d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${c}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${p}\n        } else if (${2===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${p}\n        } else if (${3===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${p}\n        }\n        setOutput(${l});\n      }\n    `}};function w6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],u=0,h=tw.getAxesPermutation([u],o),p=a;null!=h&&(p=hY({inputs:{x:a},backend:n,attrs:{perm:h}}),l.push(p),u=tw.getInnerMostAxes(1,o)[0]);let d=tw.segment_util.computeOutShape(p.shape,u,i),c=Ra.sizeFromShape([p.shape[u]]),f=ZX({inputs:{x:p},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=Ls(a.dtype),g=(e,t,r,a,s)=>{let i=e.shape[0],o=e.shape[1],u=tw.segment_util.segOpComputeOptimalWindowSize(o,s),h={windowSize:u,inSize:o,batchSize:i,numSegments:s},p=new x6(h,t),d=n.compileAndRun(p,[e,r],a);if(l.push(d),d.shape[1]===s)return d;let c=r3({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=a6({inputs:{x:c},backend:n,attrs:{reps:[o/u]}});return l.push(c),l.push(f),g(d,t,f,a,s)},y=g(f,"unsortedSegmentSum",s,m,i),b=ZX({inputs:{x:y},backend:n,attrs:{shape:d}}),x=b;if(null!=h){l.push(b);let e=tw.getUndoAxesPermutation(h);x=hY({inputs:{x:x},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}var v6,k6,I6,S6={kernelName:ha,backendName:"webgl",kernelFunc:w6},N6=[mY,bY,vY,SY,CY,AY,FY,MY,VY,GY,qY,YY,QY,rZ,iZ,hZ,dZ,gZ,bZ,wZ,SZ,FZ,MZ,LZ,jZ,XZ,QZ,AX,rJ,dJ,vJ,CJ,EJ,AJ,FJ,OJ,PJ,VJ,HJ,ZJ,QJ,tQ,aQ,lQ,dQ,fQ,yQ,wQ,kQ,TQ,$Q,DQ,LQ,WQ,UQ,jQ,YQ,e0,n0,s0,u0,d0,g0,b0,v0,N0,E0,F0,EX,M0,lJ,z0,W0,G0,MX,K0,J0,e1,a1,o1,p1,f1,b1,k1,N1,_1,R1,D1,O1,B1,V1,G1,j1,K1,J1,n2,i2,b2,XX,k2,N2,_2,A2,BZ,D2,z2,B2,G2,K2,PX,Y2,J2,e3,n3,a3,VZ,p2,o3,p3,m3,JX,x3,k3,T3,E3,F3,M3,z3,W3,G3,q3,Y3,Q3,r4,i4,u4,d4,AZ,g2,m4,y4,x4,v4,I4,N4,C4,E4,R4,M4,z4,B4,U4,H4,q4,X4,f2,uY,J4,t6,s6,p6,f6,pY,g6,b6,S6,O2];for(let Gse of N6)Ta(Gse);function T6(e){I6=e.wasm.cwrap(ga,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function C6(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:p}=r,d=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=0;if(null!=i){let e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}let m=null==o?0:n.dataIdMap.get(o.dataId).id,g=k6[h];if(null==g)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?a.shape[2]:a.shape[1],b=u?s.shape[1]:s.shape[2],x=Sh.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),w=n.makeOutput([...x,y,b],a.dtype),v=n.dataIdMap.get(w.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return I6(d,k,a.shape.length,c,I,s.shape.length,l,u,g,f,m,p||0,v),w}(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(v6||(v6={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(k6||(k6={}));var _6={kernelName:ga,backendName:"wasm",setupFunc:T6,kernelFunc:C6};function E6(e,t){let n;function r(t){n=t.wasm.cwrap(e,null,["number","number","number"])}function a(e){let{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===Ra.sizeFromShape(i.shape)||n(s,v6[a.dtype],o),i}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var $6=E6(st);function A6(e,t,n){let r;function a(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function s(e){let{backend:t,inputs:a}=e,{a:s,b:i}=a,o=t.dataIdMap.get(s.dataId).id,l=t.dataIdMap.get(i.dataId).id,u=null!=n?n:s.dtype,h=tw.assertAndGetBroadcastShape(s.shape,i.shape),p=t.makeOutput(h,u);if(0===Ra.sizeFromShape(h))return p;let d=new Uint8Array(new Int32Array(s.shape).buffer),c=new Uint8Array(new Int32Array(i.shape).buffer),f=t.dataIdMap.get(p.dataId).id;return r(o,d,s.shape.length,l,c,i.shape.length,v6[s.dtype],f),p}return{kernelName:e,backendName:"wasm",setupFunc:a,kernelFunc:s}}var R6,F6=!0,D6=A6(lt,F6);function M6(e){R6=e.wasm.cwrap(ut,null,["array","number","number","number"])}function O6(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===Ra.sizeFromShape(r.shape))return r;let a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return R6(s,a.length,v6[r.dtype],i),r}var L6={kernelName:ut,backendName:"wasm",setupFunc:M6,kernelFunc:O6};function z6(e){let{inputs:{x:t},backend:n}=e;if("string"===t.dtype)return fi(n.readSync(t.dataId),t.shape,t.dtype);let r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var P6,B6={kernelName:wn,backendName:"wasm",kernelFunc:z6};function W6(e){P6=e.wasm.cwrap(oa,null,["number","array","number","number","number","array","number"])}function V6(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=G6(t.x.shape,r.perm),i=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(i=!1);let o=U6(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let e=z6({inputs:t,backend:n});return e.shape=o,e}let u=n.makeOutput(o,l.dtype),h=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return P6(h,c,l.shape.length,v6[l.dtype],p,d,s.length),u}function U6(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}function G6(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let a=0;a<r.length;++a){let e=-1;for(let t=0;t<r.length;++t)r[t]>=a&&(-1===e||r[e]>r[t])&&(e=t);r[e]=a}return[n,r]}var H6,j6={kernelName:oa,backendName:"wasm",kernelFunc:V6,setupFunc:W6};function q6(e,t,n){let r=e.shape,a=e.shape.length,s=Ra.parseAxisParam(t,r),i=s,o=tw.getAxesPermutation(i,a),l=null,u=!1;if(null!=o){let t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=tw.getInnerMostAxes(i.length,a),l=V6({inputs:{x:e},attrs:{perm:o},backend:n});let s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}function K6(e){H6=e.wasm.cwrap(ht,null,["number, number, number"])}function X6(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:d}=q6(i,a,t);if(d){let e=t.dataIdMap.get(u.dataId).id;l=u,o=e}let c=l.shape.length;tw.assertAxesAreInnerMostDims("all",h,c);let[f,m]=tw.computeOutAndReduceShapes(l.shape,h),g=Ra.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==Ra.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;H6(o,g,e)}if(d&&t.disposeData(u.dataId),s){let e=tw.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}var Y6,Z6={kernelName:ht,backendName:"wasm",setupFunc:K6,kernelFunc:X6};function J6(e){Y6=e.wasm.cwrap(pt,null,["number, number, number"])}function Q6(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:d}=q6(i,a,t);if(d){let e=t.dataIdMap.get(u.dataId).id;l=u,o=e}let c=l.shape.length;tw.assertAxesAreInnerMostDims("any",h,c);let[f,m]=tw.computeOutAndReduceShapes(l.shape,h),g=Ra.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==Ra.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;Y6(o,g,e)}if(d&&t.disposeData(u.dataId),s){let e=tw.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}var e5,t5={kernelName:pt,backendName:"wasm",setupFunc:J6,kernelFunc:Q6};function n5(e){e5=e.wasm.cwrap(dt,null,["number","number","number","number","number"])}function r5(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:u,axes:h,inputWasTransposed:p}=q6(s,a,t);if(p){let e=t.dataIdMap.get(u.dataId).id;e!==i&&(l=u,o=e)}let d=l.shape.slice(0,-1),c=t.makeOutput(d,"int32"),f=t.dataIdMap.get(c.dataId).id,m=Ra.sizeFromShape(c.shape),g=l.shape[h[0]];return e5(o,v6[l.dtype],m,g,f),p&&t.disposeData(u.dataId),c}var a5,s5={kernelName:dt,backendName:"wasm",kernelFunc:r5,setupFunc:n5};function i5(e){a5=e.wasm.cwrap(xt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function o5(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,h=tw.computePool2DInfo(a.shape,i,o,1,l,u),p=h.filterHeight,d=h.filterWidth,c=h.padInfo.top,f=h.padInfo.right,m=h.padInfo.bottom,g=h.padInfo.left,y=h.strideHeight,b=h.strideWidth,x=h.inChannels;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);if(1!==h.dilationWidth||1!==h.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${h.dilationHeight}, ${h.dilationWidth}].`);let w=r.makeOutput(h.outShape,"float32"),v=r.dataIdMap.get(w.dataId).id;return a5(s,a.shape[0],a.shape[1],a.shape[2],p,d,c,f,m,g,y,b,x,v),w}var l5={kernelName:xt,backendName:"wasm",setupFunc:i5,kernelFunc:o5};function u5(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=Ra.sizeFromShape(r.shape),i=Ra.inferFromImplicitShape(a,s);return Ra.assert(s===Ra.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var h5,p5={kernelName:wr,backendName:"wasm",kernelFunc:u5};function d5(e){h5=e.wasm.cwrap(It,null,["number","array","number","number","array","number","number","number","number"])}function c5(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,u=s.shape.length,h=i?a.shape[l-2]:a.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=Ra.sizeFromShape(f),y=Ra.sizeFromShape(m),b=Sh.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);Ra.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let x=i?[g,h,d]:[g,d,h],w=o?[y,c,p]:[y,p,c],v=u5({inputs:{x:a},backend:n,attrs:{shape:x}}),k=u5({inputs:{x:s},backend:n,attrs:{shape:w}}),I=n.dataIdMap.get(v.dataId).id,S=n.dataIdMap.get(k.dataId).id,N=i?v.shape[2]:v.shape[1],T=o?k.shape[1]:k.shape[2],C=Math.max(g,y),_=n.makeOutput([C,N,T],v.dtype),E=n.dataIdMap.get(_.dataId).id,$=new Uint8Array(new Int32Array(v.shape).buffer),A=new Uint8Array(new Int32Array(k.shape).buffer);return h5(I,$,v.shape.length,S,A,k.shape.length,i,o,E),n.disposeData(v.dataId),n.disposeData(k.dataId),_.shape=b,_}var f5={kernelName:It,backendName:"wasm",setupFunc:d5,kernelFunc:c5};function m5(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=_x.parseSliceParams(t,n,r),o=_x.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),u=a.makeOutput(i,t.dtype),h=Ra.computeStrides(t.shape),p=a.dataIdMap.get(u.dataId);if(o){let e=_x.computeFlatOffset(s,h);return"string"===t.dtype?p.stringBytes=l.slice(e,e+Ra.sizeFromShape(i)):a.typedArrayFromHeap(u).set(l.subarray(e,e+Ra.sizeFromShape(i))),u}if("string"===t.dtype){let e=kz(l,s,i,t.shape,t.dtype);return p.stringBytes=e,u}let d=a.typedArrayFromHeap(u),c=t.shape.length;if(2===c)g5(l,h[0],d,s,i);else if(3===c)y5(l,h[0],h[1],d,s,i);else if(4===c)b5(l,h[0],h[1],h[2],d,s,i);else{let e=kz(l,s,i,t.shape,t.dtype);d.set(e)}return u}function g5(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let u=i;u<l;u++){let r=u*t+o;n.set(e.subarray(r,r+a[1]),s),s+=a[1]}}function y5(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],u=a[2],h=o+s[0],p=l+s[1];for(let d=o;d<h;d++)for(let a=l;a<p;a++){let o=d*t+a*n+u;r.set(e.subarray(o,o+s[2]),i),i+=s[2]}}function b5(e,t,n,r,a,s,i){let o=0,l=s[0],u=s[1],h=s[2],p=l+i[0],d=u+i[1],c=h+i[2],f=s[3];for(let m=l;m<p;m++)for(let s=u;s<d;s++)for(let l=h;l<c;l++){let u=m*t+s*n+l*r+f;a.set(e.subarray(u,u+i[3]),o),o+=i[3]}}var x5={kernelName:Fr,backendName:"wasm",kernelFunc:m5};function w5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce(((e,t)=>e*t)),l=tw.getReshaped(a.shape,s,o),u=tw.getPermuted(l.length,s.length),h=tw.getReshapedPermuted(a.shape,s,o),p=tw.getSliceBeginCoords(i,s.length),d=tw.getSliceSize(h,i,s.length),c=u5({inputs:{x:a},backend:n,attrs:{shape:l}}),f=V6({inputs:{x:c},backend:n,attrs:{perm:u}}),m=u5({inputs:{x:f},backend:n,attrs:{shape:h}}),g=m5({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(c.dataId),g}var v5={kernelName:St,backendName:"wasm",kernelFunc:w5};function k5(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var I5,S5={kernelName:_t,backendName:"wasm",kernelFunc:k5},N5=E6(Et);function T5(e){I5=e.wasm.cwrap($t,null,["number","number","number","number"])}function C5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return I5(o,s,i,u),l}var _5={kernelName:$t,backendName:"wasm",setupFunc:T5,kernelFunc:C5};function E5(e){let{inputs:t,backend:n}=e,r=Ra.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=t.map((e=>e.shape));tw.assertParamsConsistent(a,r);let s=tw.computeOutShape(t.map((e=>e.shape)),r),i=t.filter((e=>Ra.sizeFromShape(e.shape)>0));if(1===i.length)return z6({inputs:{x:i[0]},backend:n});let o=n.makeOutput(s,t[0].dtype);if(0===Ra.sizeFromShape(s))return o;if("string"===i[0].dtype){let e=i.map((e=>{let t=[-1,Ra.sizeFromShape(e.shape.slice(r))];return u5({inputs:{x:e},backend:n,attrs:{shape:t}})})),a=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));s=tw.computeOutShape(e.map((e=>e.shape)),1);let l=1===e[0].shape[0],u=QO(a,s,t[0].dtype,l),h=tw.computeOutShape(i.map((e=>e.shape)),r);o.shape=h;let p=n.dataIdMap.get(o.dataId);return p.stringBytes=tw.fromStringArrayToUint8(u),e.forEach((e=>n.disposeData(e.dataId))),o}let l=Ra.sizeFromShape(i[0].shape.slice(0,r)),u=0,h=i.map((e=>{let t=Ra.sizeFromShape(e.shape.slice(r));return u+=t,t})),p=i.map((e=>n.typedArrayFromHeap(e))),d=n.typedArrayFromHeap(o);for(let c=0;c<l;c++){let e=c*u;for(let t=0;t<p.length;t++){let n=h[t],r=c*n,a=p[t].subarray(r,r+n);d.set(a,e),e+=n}}return o}var $5,A5={kernelName:Ft,backendName:"wasm",kernelFunc:E5};function R5(e){$5=e.wasm.cwrap(Dt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function F5(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:h,dimRoundingMode:p,dataFormat:d}=n,c=tw.convertConv2DDataFormat(d),f=tw.computeConv2DInfo(a.shape,s.shape,l,u,h,p,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,w=f.padInfo.left,v=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,S=f.strideWidth,N=f.inChannels,T=f.outChannels,C="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let _=r.makeOutput(f.outShape,"float32"),E=r.dataIdMap.get(_.dataId).id;return $5(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,w,C,v,k,I,S,N,T,E),_}var D5,M5={kernelName:Dt,backendName:"wasm",setupFunc:R5,kernelFunc:F5};function O5(e){D5=e.wasm.cwrap(Ot,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function L5(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:h}=r,p=1,d=tw.convertConv2DDataFormat(l),c=tw.computeConv2DInfo(h,s.shape,i,p,o,u,!1,d),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:b,inWidth:x,outChannels:w,outHeight:v,outWidth:k,strideHeight:I,strideWidth:S}=c,N=m-1-c.padInfo.top,T=g-1-c.padInfo.left,C="channelsLast"===c.dataFormat,_=Ra.computeStrides(c.inShape),E=Ra.computeStrides(a.shape),[$,A,R]=Ra.computeStrides(s.shape),F=_[0],D=C?_[1]:_[2],M=C?_[2]:1,O=C?1:_[1],L=E[0],z=C?E[1]:E[2],P=C?E[2]:1,B=C?1:E[1],W=t.makeOutput(c.inShape,"float32"),V=t.dataIdMap.get(W.dataId).id,U=t.dataIdMap.get(a.dataId).id,G=t.dataIdMap.get(s.dataId).id;return D5(U,G,f,m,g,b,x,y,v,k,w,I,S,N,T,$,A,R,F,D,M,O,L,z,P,B,V),W}var z5,P5,B5={kernelName:Ot,backendName:"wasm",setupFunc:O5,kernelFunc:L5},W5=E6(Bt),V5=E6(Wt);function U5(e){P5=e.wasm.cwrap(Gt,null,["number","number","number","number","array","number","number","number","number","number"])}function G5(e){let t,{backend:n,inputs:r,attrs:a}=e,{method:s,extrapolationValue:i,cropSize:o}=a,{image:l,boxes:u,boxInd:h}=r,p=u.shape[0],[d,c]=o,f=[p,d,c,l.shape[3]],m=n.dataIdMap.get(l.dataId);"float32"!==l.dtype&&(t=k5({backend:n,inputs:{x:l},attrs:{dtype:"float32"}}),m=n.dataIdMap.get(t.dataId));let g=m.id,y=n.dataIdMap.get(u.dataId).id,b=n.dataIdMap.get(h.dataId).id,x=n.makeOutput(f,"float32"),w=n.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(l.shape).buffer);return P5(g,y,b,p,v,d,c,z5[s],i,w),null!=t&&n.disposeData(t.dataId),x}(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(z5||(z5={}));var H5,j5={kernelName:Gt,backendName:"wasm",setupFunc:U5,kernelFunc:G5};function q5(e){H5=e.wasm.cwrap(Vt,null,["number","number","number","number","number","number"])}function K5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;Ra.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`));let u=tw.getAxesPermutation([s],l),h=a;null!==u&&(h=V6({inputs:{x:a},attrs:{perm:u},backend:n}));let p=tw.getInnerMostAxes(1,l)[0];tw.assertAxesAreInnerMostDims("cumprod",[p],l);let d=n.makeOutput(h.shape,h.dtype),c=h.shape[p],f=n.dataIdMap.get(h.dataId).id,m=n.dataIdMap.get(d.dataId).id;H5(f,i?1:0,o?1:0,c,m,v6[a.dtype]);let g=d;if(null!==u){let e=tw.getUndoAxesPermutation(u);g=V6({inputs:{x:d},attrs:{perm:e},backend:n}),n.disposeData(h.dataId),n.disposeData(d.dataId)}return g}var X5,Y5={kernelName:Vt,backendName:"wasm",setupFunc:q5,kernelFunc:K5};function Z5(e){X5=e.wasm.cwrap(Ut,null,["number","number","number","number","number","number"])}function J5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;Ra.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`));let u=tw.getAxesPermutation([s],l),h=a;null!==u&&(h=V6({inputs:{x:a},attrs:{perm:u},backend:n}));let p=tw.getInnerMostAxes(1,l)[0];tw.assertAxesAreInnerMostDims("cumsum",[p],l);let d=n.makeOutput(h.shape,h.dtype),c=h.shape[p],f=n.dataIdMap.get(h.dataId).id,m=n.dataIdMap.get(d.dataId).id;X5(f,i?1:0,o?1:0,c,m,v6[a.dtype]);let g=d;if(null!==u){let e=tw.getUndoAxesPermutation(u);g=V6({inputs:{x:d},attrs:{perm:e},backend:n}),n.disposeData(h.dataId),n.disposeData(d.dataId)}return g}var Q5,e8={kernelName:Ut,backendName:"wasm",setupFunc:Z5,kernelFunc:J5};function t8(e){Q5=e.wasm.cwrap(jt,null,["number","number","number","array","number","array","array","number","number"])}function n8(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l="NHWC"===i?a.shape[1]:a.shape[2],u="NHWC"===i?a.shape[2]:a.shape[3],h="NHWC"===i?a.shape[3]:a.shape[1],p=l*s,d=u*s,c=h/(s*s),f="NHWC"===i?[o,p,d,c]:[o,c,p,d],m=t.makeOutput(f,"float32"),g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(Ra.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(Ra.computeStrides(f)).buffer),w=t.dataIdMap.get(m.dataId).id;return Q5(g,s,"NHWC"===i?1:0,y,a.shape.length-1,b,x,f.length,w),m}var r8,a8={kernelName:jt,backendName:"wasm",setupFunc:t8,kernelFunc:n8};function s8(e){r8=e.wasm.cwrap(qt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function i8(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:h,dimRoundingMode:p}=n,d=null==u?[1,1]:u,c=tw.computeConv2DInfo(a.shape,s.shape,l,d,h,p,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,b=c.padInfo.bottom,x=c.padInfo.left,w=c.dilationHeight,v=c.dilationWidth,k=c.strideHeight,I=c.strideWidth,S=c.inChannels,N=c.outChannels,T="SAME"===c.padInfo.type?1:0;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let C=r.makeOutput(c.outShape,"float32"),_=r.dataIdMap.get(C.dataId).id;return r8(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,x,T,w,v,k,I,S,N,_),C}var o8={kernelName:qt,backendName:"wasm",setupFunc:s8,kernelFunc:i8},l8=E6(nn),u8=!1,h8=A6(sn,u8,"bool"),p8=E6(on,"float32");function d8(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(Ra.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),u5({inputs:{x:a},backend:r,attrs:{shape:o}})}var c8={kernelName:ln,backendName:"wasm",kernelFunc:d8};function f8(e){let{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}var m8,g8={kernelName:pn,backendName:"wasm",kernelFunc:f8};function y8(e){m8=e.wasm.cwrap(dn,null,["number","number","number","number","number","number"])}function b8(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,h]=r.shape;return m8(s,o,l,u,h,i),a}var x8,w8={kernelName:dn,backendName:"wasm",kernelFunc:b8,setupFunc:y8},v8=E6(cn),k8=!1,I8=A6(fn,k8);function S8(e){x8=e.wasm.cwrap(mn,null,["number","number","number","number","number","number","number"])}function N8(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=n,h=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,c=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===Ra.sizeFromShape(s.shape))return m;let g=t.dataIdMap.get(m.dataId).id;return x8(h,p,d,c,f,a,g),m}var T8,C8={kernelName:mn,backendName:"wasm",setupFunc:S8,kernelFunc:N8};function _8(e){T8=e.wasm.cwrap(ya,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function E8(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dataFormat:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=tw.computeConv2DInfo(a.shape,s.shape,l,h,u,d),g=k6[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,w=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);w=e.id}let v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,C=m.dilationHeight,_=m.dilationWidth,E=m.strideHeight,$=m.strideWidth,A=m.inChannels,R="SAME"===m.padInfo.type?1:0,F=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return T8(y,F,D,M,b,v,k,w,I,S,N,T,R,C,_,E,$,A,x,g,z,f||0,L),O}var $8,A8={kernelName:ya,backendName:"wasm",setupFunc:_8,kernelFunc:E8};function R8(e){$8=e.wasm.cwrap(ba,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function F8(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dataFormat:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=tw.computeConv2DInfo(a.shape,s.shape,l,h,u,d,!0),g=k6[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,w=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);w=e.id}let v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,C=m.dilationHeight,_=m.dilationWidth,E=m.strideHeight,$=m.strideWidth,A=m.inChannels,R="SAME"===m.padInfo.type?1:0,F=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return $8(y,F,D,M,b,v,k,w,I,S,N,T,R,C,_,E,$,A,x,g,z,f||0,L),O}var D8,M8={kernelName:ba,backendName:"wasm",setupFunc:R8,kernelFunc:F8};function O8(e){D8=e.wasm.cwrap(yn,null,["number","number","number","number","number","number","array","number"])}function L8(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=Tx.prepareAndValidate(r,a),u=t.makeOutput(s,r.dtype);if(0===i)return u;let h=a.shape,p=h[h.length-1],d=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return D8(d,v6[r.dtype],c,i,p,o,f,m),u}var z8,P8={kernelName:yn,backendName:"wasm",setupFunc:O8,kernelFunc:L8};function B8(e){z8=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function W8(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=Ra.parseAxisParam(i,a.shape)[0],u=t.readSync(s.dataId),h=a.shape[l];for(let I=0;I<u.length;++I){let e=u[I];Ra.assert(e<=h-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${h-1}]`))}let p=tw.segment_util.collectGatherOpShapeInfo(a,s,l,o),d=u5({inputs:{x:a},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:t}),c=Ra.sizeFromShape(s.shape),f=u5({inputs:{x:s},attrs:{shape:[p.batchSize,c/p.batchSize]},backend:t}),m=[p.batchSize,p.outerSize,c/p.batchSize,p.sliceSize],g=t.makeOutput(m,a.dtype);if(0===Ra.sizeFromShape(a.shape))return g;let y=d.shape.length-1,b=t.dataIdMap.get(d.dataId).id,x=t.dataIdMap.get(f.dataId).id,w=t.dataIdMap.get(g.dataId).id,v=new Uint8Array(new Int32Array(Ra.computeStrides(d.shape)).buffer),k=new Uint8Array(new Int32Array(Ra.computeStrides(m)).buffer);return z8(b,v6[a.dtype],v,y,x,p.batchSize,k,w),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=p.outputShape,g}var V8,U8={kernelName:gn,backendName:"wasm",setupFunc:B8,kernelFunc:W8},G8=!1,H8=A6(bn,G8,"bool"),j8=!1,q8=A6(xn,j8,"bool"),K8=E6(Nn,"bool");function X8(e){V8=e.wasm.cwrap(Tn,null,["number","number","number","number"])}function Y8(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==Ra.sizeFromShape(t.shape)){let e=r.dataIdMap.get(s.dataId).id;V8(a,v6[t.dtype],n,e)}return s}var Z8,J8={kernelName:Tn,backendName:"wasm",setupFunc:X8,kernelFunc:Y8},Q8=!1,e7=A6(Cn,Q8,"bool"),t7=!1,n7=A6(_n,t7,"bool"),r7=E6($n),a7=!1,s7=A6(Rn,a7,"bool"),i7=E6(Fn),o7=!1,l7=A6(Dn,o7,"bool"),u7=!1,h7=A6(Mn,u7,"bool");function p7(e){Z8=e.wasm.cwrap(Bn,null,["number","number","number","number"])}function d7(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:d}=q6(i,a,t);if(d){let e=t.dataIdMap.get(u.dataId).id;l=u,o=e}let c=l.shape.length;tw.assertAxesAreInnerMostDims("max",h,c);let[f,m]=tw.computeOutAndReduceShapes(l.shape,h),g=Ra.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==Ra.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;Z8(o,v6[i.dtype],g,e)}if(d&&t.disposeData(u.dataId),s){let e=tw.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}var c7,f7={kernelName:Bn,backendName:"wasm",setupFunc:p7,kernelFunc:d7},m7=!1,g7=A6(Wn,m7);function y7(e){c7=e.wasm.cwrap(Vn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function b7(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;Ra.assert("float32"===a.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`));let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,h=tw.computePool2DInfo(a.shape,i,o,1,l,u),p=h.filterHeight,d=h.filterWidth,c=h.padInfo.top,f=h.padInfo.right,m=h.padInfo.bottom,g=h.padInfo.left,y=h.dilationHeight,b=h.dilationWidth,x=h.strideHeight,w=h.strideWidth,v=h.inChannels,k=h.outChannels;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let I=r.makeOutput(h.outShape,"float32"),S=r.dataIdMap.get(I.dataId).id;return c7(s,a.shape[0],a.shape[1],a.shape[2],p,d,c,f,m,g,y,b,x,w,v,k,S),I}var x7,w7={kernelName:Vn,backendName:"wasm",setupFunc:y7,kernelFunc:b7};function v7(e){x7=e.wasm.cwrap(qn,null,["number, number, number"])}function k7(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=q6(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=tw.getInnerMostAxes(f.length,u.shape.length))}tw.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=tw.computeOutAndReduceShapes(u.shape,f),y=Ra.sizeFromShape(g),b=u;"float32"!==u.dtype&&(b=k5({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(m,"float32");if(0!==Ra.sizeFromShape(u.shape)){let e=t.dataIdMap.get(x.dataId).id;x7(l,y,e)}if(c&&t.disposeData(h.dataId),s){let e=tw.expandShapeToKeepDim(x.shape,d);x.shape=e}return"float32"!==u.dtype&&t.disposeData(b.dataId),x}var I7,S7={kernelName:qn,backendName:"wasm",setupFunc:v7,kernelFunc:k7};function N7(e){I7=e.wasm.cwrap(Kn,null,["number","number","number","number"])}function T7(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=q6(i,a,t);if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e)}let f=u.shape.length;tw.assertAxesAreInnerMostDims("min",p,f);let[m,g]=tw.computeOutAndReduceShapes(u.shape,p),y=Ra.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==Ra.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;I7(l,v6[i.dtype],y,e)}if(c&&t.disposeData(h.dataId),s){let e=tw.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}var C7,_7,E7={kernelName:Kn,backendName:"wasm",setupFunc:N7,kernelFunc:T7},$7=!1,A7=A6(Xn,$7);function R7(e){_7=e.wasm.cwrap(Yn,null,["number","array","number","number","array","array","number","number"])}function F7(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),h=r.map((e=>e[0])),p=r.map((e=>e[1])),d=new Uint8Array(new Int32Array(h).buffer),c=new Uint8Array(new Int32Array(p).buffer);return _7(i,u,t.shape.length,v6[t.dtype],d,c,C7[a],l),o}(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(C7||(C7={}));var D7,M7={kernelName:Yn,backendName:"wasm",kernelFunc:F7,setupFunc:R7},O7=!0,L7=A6(Qn,O7),z7=E6(er);function P7(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}function B7(e){D7=e.wasm.cwrap(nr,"number",["number","number","number","number","number"])}function W7(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,h=t.dataIdMap.get(l.dataId).id,p=D7(u,h,s,a,i),{pSelectedIndices:d,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=P7(t,p);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",d)}var V7,U7={kernelName:nr,backendName:"wasm",setupFunc:B7,kernelFunc:W7};function G7(e){V7=e.wasm.cwrap(rr,"number",["number","number","number","number","number","bool"])}function H7(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,h=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=V7(h,p,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=P7(t,d);t.wasm._free(m);let y=t.makeOutput([f],"int32",c),b=t.makeOutput([],"int32",g);return[y,b]}var j7,q7={kernelName:rr,backendName:"wasm",setupFunc:G7,kernelFunc:H7};function K7(e){j7=e.wasm.cwrap(ar,"number",["number","number","number","number","number","number"])}function X7(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,h=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=j7(h,p,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=P7(t,d);t.wasm._free(g);let y=t.makeOutput([f],"int32",c),b=t.makeOutput([f],"float32",m);return[y,b]}var Y7,Z7={kernelName:ar,backendName:"wasm",setupFunc:K7,kernelFunc:X7},J7=!1,Q7=A6(tr,J7,"bool");function e9(e){Y7=e.wasm.cwrap(ir,null,["number","number","number","number","number"])}function t9(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=n.makeOutput([...a.shape,i],s),h=n.dataIdMap.get(u.dataId).id,p=n.dataIdMap.get(a.dataId).id;return Y7(p,i,o,l,h),u}var n9={kernelName:ir,backendName:"wasm",setupFunc:e9,kernelFunc:t9};function r9(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}var a9={kernelName:sr,backendName:"wasm",kernelFunc:r9};function s9(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return d8({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{Ra.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Ra.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=t.map((e=>{let t=d8({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),u=E5({inputs:l,backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeData(e.dataId))),u}var i9,o9={kernelName:or,backendName:"wasm",kernelFunc:s9};function l9(e){i9=e.wasm.cwrap(lr,null,["number","array","number","number","array","array","number","number"])}function u9(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===Ra.sizeFromShape(t.shape))return f8({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),h=r.map((e=>e[0])),p=r.map((e=>e[1])),d=new Uint8Array(new Int32Array(h).buffer),c=new Uint8Array(new Int32Array(p).buffer);return i9(i,u,t.shape.length,v6[t.dtype],d,c,a,l),o}var h9,p9={kernelName:lr,backendName:"wasm",kernelFunc:u9,setupFunc:l9},d9=!1,c9=A6(hr,d9);function f9(e){h9=e.wasm.cwrap(pr,null,["number","number","number"])}function m9(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=s,l=r,u=l;"float32"!==l.dtype&&(u=k5({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);let h=n.makeOutput(r.shape,"float32"),p=n.dataIdMap.get(h.dataId).id;return h9(o,i,p),"float32"!==l.dtype&&n.disposeData(u.dataId),h}var g9,y9={kernelName:pr,backendName:"wasm",setupFunc:f9,kernelFunc:m9};function b9(e){g9=e.wasm.cwrap(dr,null,["number","number","number","number"])}function x9(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=q6(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=tw.getInnerMostAxes(f.length,u.shape.length))}tw.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=tw.computeOutAndReduceShapes(u.shape,f),y=Ra.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==Ra.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;g9(l,y,v6[b.dtype],e)}if(c&&t.disposeData(h.dataId),s){let e=tw.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}var w9,v9={kernelName:dr,backendName:"wasm",setupFunc:b9,kernelFunc:x9},k9=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=fz(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l},I9={kernelName:gr,backendName:"wasm",kernelFunc:k9},S9=!0,N9=A6(en,S9),T9=E6(br),C9=E6(xr),_9=E6(Nr);function E9(e){w9=e.wasm.cwrap(Ir,null,["number","number","number","number","number","number","number","number","number","number"])}function $9(e){let t,{backend:n,inputs:r,attrs:a}=e,{images:s}=r,{alignCorners:i,halfPixelCenters:o,size:l}=a,[u,h]=l,[p,d,c,f]=s.shape,m=[p,u,h,f],g=n.dataIdMap.get(s.dataId);"float32"!==g.dtype&&(t=k5({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),g=n.dataIdMap.get(t.dataId));let y=g.id,b=n.makeOutput(m,"float32");if(0===Ra.sizeFromShape(s.shape))return b;let x=n.dataIdMap.get(b.dataId).id;return w9(y,p,d,c,f,u,h,i?1:0,o?1:0,x),null!=t&&n.disposeData(t.dataId),b}var A9,R9={kernelName:Ir,backendName:"wasm",setupFunc:E9,kernelFunc:$9};function F9(e){A9=e.wasm.cwrap(vr,null,["number","number","number","number","number","number","number","number","number","number"])}function D9(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,[h,p,d,c]=a.shape,f=[h,l,u,c],m=t.makeOutput(f,"float32");if(0===Ra.sizeFromShape(a.shape))return m;let g,y=t.dataIdMap.get(a.dataId);"float32"!==y.dtype&&(g=k5({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),y=t.dataIdMap.get(g.dataId));let b=y.id,x=t.dataIdMap.get(m.dataId).id;return A9(b,h,p,d,c,l,u,s?1:0,i?1:0,x),null!=g&&t.disposeData(g.dataId),m}var M9,O9={kernelName:vr,backendName:"wasm",setupFunc:F9,kernelFunc:D9};function L9(e){M9=e.wasm.cwrap(Tr,null,["number","array","number","array","number","number"])}function z9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=Ra.parseAxisParam(s,a.shape);if(0===a.shape.length)return z6({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,h=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(a.shape).buffer);M9(l,h,i.length,p,a.shape.length,u);let d=u5({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),d}var P9,B9={kernelName:Tr,backendName:"wasm",kernelFunc:z9,setupFunc:L9};function W9(e){P9=e.wasm.cwrap(ma,null,["number","number","number","number","number","number","number","number","array","number","number"])}function V9(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,h=n.dataIdMap.get(l.dataId).id,[p,d,c,f]=a.shape,[m,g]=tw.getImageCenter(o,d,c),y=0===i,b=255,x="number"==typeof i?[i,i,i,y?0:b]:[...i,b],w=new Uint8Array(new Int32Array(x).buffer);return P9(u,p,d,c,f,s,m,g,w,x.length,h),l}var U9,G9={kernelName:ma,backendName:"wasm",kernelFunc:V9,setupFunc:W9},H9=E6(Cr),j9=E6(_r);function q9(e){U9=e.wasm.cwrap(Er,null,["number","number","number","number","number","number","array","number","number"])}function K9(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===Ra.sizeFromShape(i))return o;let{sliceRank:l,numUpdates:u,sliceSize:h,strides:p,outputSize:d}=Qm.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(p).buffer),g=t.dataIdMap.get(o.dataId).id;return U9(c,f,v6[s.dtype],l,u,h,m,d,g),o}var X9,Y9={kernelName:Er,backendName:"wasm",setupFunc:q9,kernelFunc:K9};function Z9(e){X9=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function J9(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(a.shape,a.dtype),h=n.dataIdMap.get(u.dataId).id,p=r.shape.length,d=a.shape.length,c=0===p||p>1||1===d?1:Ra.sizeFromShape(a.shape.slice(1));return X9(i,o,l,c,h),u}var Q9,eee={kernelName:Ar,backendName:"wasm",kernelFunc:J9,setupFunc:Z9};function tee(e){Q9=e.wasm.cwrap(Lr,null,["number","number"])}function nee(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===Ra.sizeFromShape(a.shape)||Q9(r,s),a}var ree,aee={kernelName:"Sigmoid",backendName:"wasm",setupFunc:tee,kernelFunc:nee},see=E6(Dr);function iee(e){ree=e.wasm.cwrap(Ur,null,["number","number","number","number"])}function oee(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=Ra.sizeFromShape(n.shape)/o;return 0===Ra.sizeFromShape(s.shape)||ree(a,i,o,l),s}var lee={kernelName:Ur,backendName:"wasm",setupFunc:iee,kernelFunc:oee};function uee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=Ra.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<a.shape.length;++g)l.push([0,0]);let u=p9.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=tw.getReshaped(u.shape,s,o,!1),p=tw.getPermuted(h.length,s.length,!1),d=tw.getReshapedPermuted(u.shape,s,o,!1),c=u5({inputs:{x:u},backend:n,attrs:{shape:h}}),f=V6({inputs:{x:c},backend:n,attrs:{perm:p}}),m=u5({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(f.dataId),m}var hee,pee={kernelName:Wr,backendName:"wasm",kernelFunc:uee};function dee(e){hee=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function cee(e){let t,{backend:n,inputs:r}=e,{indices:a,values:s,denseShape:i,defaultValue:o}=r,l=a.shape[0],u=a.shape[1],h=n.readSync(i.dataId)[0],p=[l+h,u],d=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(p,a.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput(p.slice(0,1),s.dtype),b=n.dataIdMap.get(y.dataId).id,x=n.makeOutput([h],"bool"),w=n.dataIdMap.get(x.dataId).id,v=n.makeOutput([l],a.dtype),k=n.dataIdMap.get(v.dataId).id,I=n.makeOutput([4],"int32"),S=n.dataIdMap.get(I.dataId).id,N=hee(d,c,v6[s.dtype],l,h,u,f,g,b,w,k,S),T=n.readSync(I.dataId);switch(T[0]){case 1:t=tw.getSparseFillEmptyRowsIndicesDenseShapeMismatch(T[1]);break;case 2:t=tw.getSparseFillEmptyRowsNegativeIndexErrorMessage(T[1],T[2]);break;case 3:t=tw.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(T[1],T[2],T[3]);break;default:t=""}if(n.disposeData(I.dataId),t)throw n.disposeData(m.dataId),n.disposeData(y.dataId),n.disposeData(x.dataId),n.disposeData(v.dataId),new Error(t);let C=m,_=y;return N!==p[0]&&(C=m5({inputs:{x:m},attrs:{begin:0,size:[N,u]},backend:n}),_=m5({inputs:{x:y},attrs:{begin:0,size:N},backend:n}),n.disposeData(m.dataId),n.disposeData(y.dataId)),[C,_,x,v]}var fee,mee={kernelName:Gr,backendName:"wasm",setupFunc:dee,kernelFunc:cee};function gee(e){fee=e.wasm.cwrap(Hr,null,["number","number","number","number","number","number","number"])}function yee(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=r.shape[0],h=Ra.sizeFromShape(s.shape),p=t.makeOutput([u,h],r.dtype),d=t.dataIdMap.get(p.dataId).id,c=t.makeOutput([h],s.dtype),f=t.dataIdMap.get(c.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;fee(i,o,l,u,d,f,g);let y,b=t.readSync(m.dataId);switch(b[0]){case 0:y=tw.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break;case 1:y=tw.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break;case 2:y=tw.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=tw.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=tw.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:y=""}if(t.disposeData(m.dataId),y)throw t.disposeData(p.dataId),t.disposeData(c.dataId),new Error(y);return[p,c]}var bee,xee={kernelName:Hr,backendName:"wasm",setupFunc:gee,kernelFunc:yee};function wee(e){bee=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function vee(e,t){let{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(tw.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=a.shape.slice();h[0]=u;let p=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(h,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;bee(p,v6[a.dtype],a.shape[0],d,c,m,y,t,0);let b,x=n.readSync(g.dataId);switch(x[0]){case 0:b=tw.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:b=tw.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:b=tw.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:b=tw.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:b=""}if(n.disposeData(g.dataId),b)throw n.disposeData(f.dataId),new Error(b);return f}function kee(e){return vee(e,!0)}var Iee={kernelName:jr,backendName:"wasm",setupFunc:wee,kernelFunc:kee};function See(e){return vee(e,!1)}var Nee={kernelName:qr,backendName:"wasm",setupFunc:wee,kernelFunc:See};function Tee(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=Ra.parseAxisParam(i,a.shape)[0],l=tw.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),h=a.shape.slice();return l.map((e=>{let t=[...h];t[o]=e;let n=m5({inputs:{x:a},attrs:{begin:u,size:t},backend:r});return u[o]+=e,n}))}var Cee,_ee={kernelName:Vr,backendName:"wasm",kernelFunc:Tee},Eee=E6(Pr),$ee=E6(Yr),Aee=!0,Ree=A6(Xr,Aee);function Fee(e){Cee=e.wasm.cwrap(ca,null,["number","number","number","number"])}function Dee(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return Cee(i,a,v6[s.dtype],l),o}var Mee,Oee={kernelName:ca,backendName:"wasm",setupFunc:Fee,kernelFunc:Dee};function Lee(e){Mee=e.wasm.cwrap(Zr,null,["number","array","number","array","array","array","array","array","number","number"])}function zee(e){let t,{backend:n,inputs:r,attrs:a}=e,{x:s}=r,{begin:i,end:o,strides:l,beginMask:u,endMask:h,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:w,strides:v}=_x.sliceInfo(s.shape,i,o,l,u,h,p,d,c);if(g)t=u5({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||b){Ra.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=_x.computeOutShape(x,w,v),r=m5({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});t=u5({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeData(r.dataId)}else{let e=n.makeOutput(f,"float32"),r=n.dataIdMap.get(s.dataId).id,a=new Uint8Array(new Int32Array(Ra.computeStrides(s.shape)).buffer),i=new Uint8Array(new Int32Array(x).buffer),o=new Uint8Array(new Int32Array(w).buffer),l=new Uint8Array(new Int32Array(v).buffer),u=new Uint8Array(new Int32Array(f).buffer),h=new Uint8Array(new Int32Array(Ra.computeStrides(f)).buffer),p=n.dataIdMap.get(e.dataId).id;Mee(r,a,s.shape.length,i,o,l,u,h,f.length,p),t=u5({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeData(e.dataId)}return t}var Pee={kernelName:Zr,backendName:"wasm",setupFunc:Lee,kernelFunc:zee};function Bee(e){let{backend:t,inputs:n,attrs:r}=e,{data:a,dataSplits:s}=n,{separator:i,nGramWidths:o,leftPad:l,rightPad:u,padWidth:h,preserveShortSequences:p}=r,d=t.readSync(a.dataId),c=t.readSync(s.dataId),[f,m]=Oz(d,c,i,o,l,u,h,p),g=t.makeOutput([f.length],"string"),y=t.dataIdMap.get(g.dataId);y.stringBytes=f;let b=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(b).set(m),[g,b]}var Wee={kernelName:Jr,backendName:"wasm",kernelFunc:Bee};function Vee(e){let{backend:t,inputs:n,attrs:r}=e,{input:a,delimiter:s}=n,{skipEmpty:i}=r,o=t.readSync(a.dataId),l=t.readSync(s.dataId),[u,h,p]=zz(o,l[0],i),d=h.length,c=t.makeOutput([d,2],"int32");t.typedArrayFromHeap(c).set(u);let f=t.makeOutput([d],"string"),m=t.dataIdMap.get(f.dataId);m.stringBytes=h;let g=t.makeOutput([2],"int32");return t.typedArrayFromHeap(g).set(p),[c,f,g]}var Uee={kernelName:Qr,backendName:"wasm",kernelFunc:Vee};function Gee(e){let{backend:t,inputs:n,attrs:r}=e,{input:a}=n,{numBuckets:s}=r,i=t.readSync(a.dataId),o=Pz(i,s),l=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(l).set(o),l}var Hee,jee={kernelName:ea,backendName:"wasm",kernelFunc:Gee},qee=!0,Kee=A6(ta,qee);function Xee(e){Hee=e.wasm.cwrap(Br,null,["number","number","number","number"])}function Yee(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=q6(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=tw.getInnerMostAxes(f.length,u.shape.length))}tw.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=tw.computeOutAndReduceShapes(u.shape,f),y=Ra.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==Ra.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;Hee(l,y,v6[b.dtype],e)}if(c&&t.disposeData(h.dataId),s){let e=tw.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}var Zee,Jee={kernelName:Br,backendName:"wasm",setupFunc:Xee,kernelFunc:Yee},Qee=E6(na),ete=E6(ra);function tte(e){Zee=e.wasm.cwrap(aa,null,["number","array","number","array","number","number"])}function nte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let d=0;d<o.length;d++)o[d]=a.shape[d]*i[d];let l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),h=n.makeOutput(o,a.dtype),p=n.dataIdMap.get(h.dataId).id;return Zee(s,l,a.shape.length,u,o.length,v6[h.dtype],p),h}var rte,ate={kernelName:aa,backendName:"wasm",setupFunc:tte,kernelFunc:nte};function ste(e){rte=e.wasm.cwrap(sa,null,["number","array","number","number","number","bool","number","number"])}var ite,ote=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=a;let u=t.makeOutput(l,r.dtype),h=t.dataIdMap.get(u.dataId).id,p=t.makeOutput(l,"int32"),d=t.dataIdMap.get(p.dataId).id;return rte(i,o,r.shape.length,v6[r.dtype],a,s,h,d),[u,p]},lte={kernelName:sa,backendName:"wasm",setupFunc:ste,kernelFunc:ote};function ute(e){ite=e.wasm.cwrap(ia,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function hte(e){let t,{backend:n,inputs:r,attrs:a}=e,{image:s,transforms:i}=r,{interpolation:o,fillMode:l,fillValue:u,outputShape:h}=a,[p,d,c,f]=s.shape,[m,g]=null!=h?h:[d,c],y=[p,m,g,f],b=new Uint8Array(new Int32Array(Ra.computeStrides(s.shape)).buffer),x=new Uint8Array(new Int32Array(Ra.computeStrides(y)).buffer),w=n.makeOutput(y,s.dtype),v=n.dataIdMap.get(w.dataId).id,k=n.dataIdMap.get(s.dataId).id,I=n.dataIdMap.get(i.dataId).id,S="nearest"===o?1:2;switch(l){case"constant":t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4;break;default:t=1;break}return ite(k,I,i.shape[0]>1,p,m,g,f,c,d,b,s.shape.length-1,x,y.length-1,S,t,u,v),w}var pte={kernelName:ia,backendName:"wasm",setupFunc:ute,kernelFunc:hte};function dte(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),u=0;for(let c=0;c<o;c++)c!==s&&(l[u++]=a.shape[c]);let h=new Array(i),p=new Array(o).fill(0),d=a.shape.slice();d[s]=1;for(let c=0;c<h.length;c++)p[s]=c,h[c]=m5({inputs:{x:a},attrs:{begin:p,size:d},backend:n});return h.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:l})))}var cte={kernelName:ua,backendName:"wasm",kernelFunc:dte};function fte(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}var mte={kernelName:da,backendName:"wasm",kernelFunc:fte},gte=[_6,$6,D6,L6,Z6,t5,s5,l5,f5,v5,S5,N5,_5,A5,M5,B5,W5,V5,j5,Y5,e8,a8,o8,l8,h8,p8,c8,g8,w8,v8,I8,C8,A8,M8,P8,U8,H8,q8,B6,K8,J8,e7,n7,r7,s7,i7,l7,h7,f7,g7,w7,S7,E7,A7,M7,L7,z7,U7,q7,Z7,Q7,n9,a9,o9,p9,c9,y9,v9,I9,N9,T9,C9,_9,p5,R9,O9,B9,G9,H9,j9,Y9,eee,aee,see,x5,lee,pee,mee,xee,Iee,Nee,_ee,Eee,$ee,Ree,Oee,Pee,Wee,Uee,jee,Kee,Jee,Qee,ete,ate,lte,pte,j6,cte,mte];for(let Gse of gte)Ta(Gse);var yte=Je();yte.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(Use){return!1}})),yte.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(yte.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(Use){return!1}}));var bte=E(K()),xte=E(X()),wte=E(Y()),vte=bte.default||bte,kte=wte.default||wte,Ite=class extends J{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(Ote),Lte=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Z(this,Lo())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=Ra.now();return e(),{kernelMs:Ra.now()-t}}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if("string"===r){let i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}let i=Ra.sizeFromShape(n),o=i*Ra.bytesPerElement(r),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||Ra.sizeFromShape(s);let o=Ra.bytesPerElement(a),l=this.wasm.HEAPU8.slice(r+t*o,r+n*o);return Cte(l.buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{let a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});let s=Ra.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=Ra.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function Ste(e){return(t,n)=>(Ra.fetch(e,{credentials:"same-origin"}).then((r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then((e=>{WebAssembly.instantiate(e,t).then((e=>{n(e.instance,e.module)}))}))})),{})}function Nte(e,t,n){if(null!=Ete)return Ete;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=Ate&&null!=Ate[r]?Ate[r]:n+r}async function Tte(){let[e,t]=await Promise.all([Je().getAsync("WASM_HAS_SIMD_SUPPORT"),Je().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{let a={locateFile:(n,r)=>{if(n.endsWith(".worker.js")){let e=xte.wasmWorkerContents.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?Nte(e,t,null!=$te?$te:r):r+n}};Fte&&(a.instantiateWasm=Ste(Nte(e,t,null!=$te?$te:"")));let s,i=!1;a.onAbort=()=>{i||Rte||(Rte=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==Ete?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+vte.toString()],{type:"text/javascript"}),s=vte(a)):s=kte(a),s.then((e=>{i=!0,Rte=!1;let t=null;e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",t,["number"]),dispose:e.cwrap("dispose",t,[])},n({wasm:e})})).catch(r)}))}function Cte(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var _te=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Ete=null,$te=null,Ate={},Rte=!1,Fte=!1;function Dte(e,t=!1){if(Mo("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Rte)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Ete=e,Fte=t}function Mte(e,t=!1){if(Rte)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)$te=e;else{Ate=e;let t=_te.filter((e=>null==Ate[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Fte=t}var Ote=-1,Lte=-1;function zte(e){Ote=e}function Pte(){if(-1===Lte)throw new Error("WASM backend not initialized.");return Lte}var Bte="4.2.0",Wte=2;Yo("wasm",(async()=>{let{wasm:e}=await Tte();return new Ite(e)}),Wte);var Vte="4.2.0",Ute="4.2.0",Gte="4.2.0",Hte="4.2.0",jte="4.2.0",qte={tfjs:Vte,"tfjs-core":Vte,"tfjs-converter":Ute,"tfjs-backend-cpu":Gte,"tfjs-backend-webgl":Hte,"tfjs-backend-wasm":jte},Kte={};function Xte(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach((({x:n,y:r},a)=>{let s=t[a];e.moveTo(s.x,s.y),e.lineTo(n,r)})),n){let n=t[t.length-1],r=t[0];if(!n||!r)return;e.moveTo(n.x,n.y),e.lineTo(r.x,r.y)}e.stroke()}b(Kte,{AnchorPosition:()=>Gne,DrawBox:()=>Kne,DrawBoxOptions:()=>qne,DrawFaceLandmarks:()=>jre,DrawFaceLandmarksOptions:()=>Hre,DrawTextField:()=>jne,DrawTextFieldOptions:()=>Hne,drawContour:()=>Xte,drawDetections:()=>Xne,drawFaceExpressions:()=>Wre,drawFaceLandmarks:()=>qre});var Yte={};b(Yte,{computeReshapedDimensions:()=>one,getCenterPoint:()=>lne,isDimensions:()=>ine,isEven:()=>ane,isFloat:()=>rne,isTensor:()=>Jte,isTensor1D:()=>Qte,isTensor2D:()=>ene,isTensor3D:()=>tne,isTensor4D:()=>nne,isValidNumber:()=>hne,isValidProbablitiy:()=>pne,range:()=>une,round:()=>sne});var Zte=class{constructor(e,t){if(!hne(e)||!hne(t))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:e,height:t})}`);this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new Zte(1/this.width,1/this.height)}};function Jte(e,t){return e instanceof Ts&&e.shape.length===t}function Qte(e){return Jte(e,1)}function ene(e){return Jte(e,2)}function tne(e){return Jte(e,3)}function nne(e){return Jte(e,4)}function rne(e){return e%1!==0}function ane(e){return e%2===0}function sne(e,t=2){let n=10**t;return Math.floor(e*n)/n}function ine(e){return e&&e.width&&e.height}function one({width:e,height:t},n){let r=n/Math.max(t,e);return new Zte(Math.round(e*r),Math.round(t*r))}function lne(e){return e.reduce(((e,t)=>e.add(t)),new dne(0,0)).div(new dne(e.length,e.length))}function une(e,t,n){return Array(e).fill(0).map(((e,r)=>t+r*n))}function hne(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||0===e}function pne(e){return hne(e)&&e>=0&&e<=1}var dne=class{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(e){return new dne(this.x+e.x,this.y+e.y)}sub(e){return new dne(this.x-e.x,this.y-e.y)}mul(e){return new dne(this.x*e.x,this.y*e.y)}div(e){return new dne(this.x/e.x,this.y/e.y)}abs(){return new dne(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new dne(Math.floor(this.x),Math.floor(this.y))}},cne=class{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(hne)}static assertIsValidBox(e,t,n=!1){if(!cne.isRect(e))throw new Error(`${t} - invalid box: ${JSON.stringify(e)}, expected object with properties x, y, width, height`);if(!n&&(e.width<0||e.height<0))throw new Error(`${t} - width (${e.width}) and height (${e.height}) must be positive numbers`)}constructor(e,t=!0){let n=e||{},r=[n.left,n.top,n.right,n.bottom].every(hne),a=[n.x,n.y,n.width,n.height].every(hne);if(!a&&!r)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(n)}`);let[s,i,o,l]=a?[n.x,n.y,n.width,n.height]:[n.left,n.top,n.right-n.left,n.bottom-n.top];cne.assertIsValidBox({x:s,y:i,width:o,height:l},"Box.constructor",t),this._x=s,this._y=i,this._width=o,this._height=l}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new dne(this.left,this.top)}get topRight(){return new dne(this.right,this.top)}get bottomLeft(){return new dne(this.left,this.bottom)}get bottomRight(){return new dne(this.right,this.bottom)}round(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.round(e)));return new cne({x:e,y:t,width:n,height:r})}floor(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.floor(e)));return new cne({x:e,y:t,width:n,height:r})}toSquare(){let{x:e,y:t,width:n,height:r}=this,a=Math.abs(n-r);return n<r&&(e-=a/2,n+=a),r<n&&(t-=a/2,r+=a),new cne({x:e,y:t,width:n,height:r})}rescale(e){let t=ine(e)?e.width:e,n=ine(e)?e.height:e;return new cne({x:this.x*t,y:this.y*n,width:this.width*t,height:this.height*n})}pad(e,t){let[n,r,a,s]=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new cne({x:n,y:r,width:a,height:s})}clipAtImageBorders(e,t){let{x:n,y:r,right:a,bottom:s}=this,i=Math.max(n,0),o=Math.max(r,0),l=a-i,u=s-o,h=Math.min(l,e-i),p=Math.min(u,t-o);return new cne({x:i,y:o,width:h,height:p}).floor()}shift(e,t){let{width:n,height:r}=this,a=this.x+e,s=this.y+t;return new cne({x:a,y:s,width:n,height:r})}padAtBorders(e,t){let n=this.width+1,r=this.height+1,a=1,s=1,i=n,o=r,l=this.left,u=this.top,h=this.right,p=this.bottom;return h>t&&(i=-h+t+n,h=t),p>e&&(o=-p+e+r,p=e),l<1&&(o=2-l,l=1),u<1&&(o=2-u,u=1),{dy:s,edy:o,dx:a,edx:i,y:u,ey:p,x:l,ex:h,w:n,h:r}}calibrate(e){return new cne({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()}},fne=class extends cne{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},mne=class{constructor(e,t,n,r,a){this._imageDims=new Zte(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new cne(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new cne(this._box).rescale(this.imageDims.reverse())}forSize(e,t){return new mne(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})}},gne=class extends mne{constructor(e,t,n){super(e,e,"",t,n)}forSize(e,t){let{score:n,relativeBox:r,imageDims:a}=super.forSize(e,t);return new gne(n,r,a)}};function yne(e,t,n=!0){let r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left)),a=Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top)),s=r*a;return n?s/(e.area+t.area-s):s/Math.min(e.area,t.area)}function bne(e){let t=e.map((e=>e.x)),n=e.map((e=>e.y)),r=t.reduce(((e,t)=>t<e?t:e),1/0),a=n.reduce(((e,t)=>t<e?t:e),1/0),s=t.reduce(((e,t)=>e<t?t:e),0),i=n.reduce(((e,t)=>e<t?t:e),0);return new fne(r,a,s,i)}function xne(e,t,n,r=!0){let a=t.map(((e,t)=>({score:e,boxIndex:t}))).sort(((e,t)=>e.score-t.score)).map((e=>e.boxIndex)),s=[];for(;a.length>0;){let t=a.pop();s.push(t);let i=a,o=[];for(let n=0;n<i.length;n++){let a=i[n],s=e[t],l=e[a];o.push(yne(s,l,r))}a=a.filter(((e,t)=>o[t]<=n))}return s}function wne(e,t){return Bo((()=>{let[n,r,a]=t,s=Mu([...e.shape.slice(0,3),1],n,"float32"),i=Mu([...e.shape.slice(0,3),1],r,"float32"),o=Mu([...e.shape.slice(0,3),1],a,"float32"),l=su([s,i,o],3);return md(e,l)}))}function vne(e,t=!1){return Bo((()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=t=>{let n=e.shape.slice();return n[i]=t,Mu(n,0,"float32")},l=o(s),u=a-l.shape[i],h=[t&&u?o(u):null,e,l].filter((e=>!!e)).map((e=>Co(e,"float32")));return su(h,i)}))}function kne(e){return 1/(1+Math.exp(-e))}var Ine,Sne=class extends cne{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},Nne=.5,Tne=.43,Cne=.45,_ne=class{constructor(e,t,n=new dne(0,0)){let{width:r,height:a}=t;this._imgDims=new Zte(r,a),this._shift=n,this._positions=e.map((e=>e.mul(new dne(r,a)).add(n)))}get shift(){return new dne(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map((e=>e.sub(this._shift).div(new dne(this.imageWidth,this.imageHeight))))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new dne(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){let n=e instanceof gne?e.box.floor():new cne(e);return this.shiftBy(n.x,n.y).align(null,t)}let{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let e=this.getRefPointsForAlignment(),[t,n,r]=e,a=e=>r.sub(e).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/Cne),o=lne(e),l=Math.floor(Math.max(0,o.x-Nne*i)),u=Math.floor(Math.max(0,o.y-Tne*i));return new Sne(l,u,Math.min(i,this.imageWidth+l),Math.min(i,this.imageHeight+u))}alignMinBbox(e){let t=bne(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},Ene=class extends _ne{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(lne)}};function $ne(e){return e.detection instanceof gne}function Ane(e,t){return{...e,detection:t}}function Rne(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D:CanvasRenderingContext2D,Image:HTMLImageElement,ImageData:ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function Fne(){return"object"==typeof n.g&&"undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node}function Dne(e){let t="";if(!e&&Fne())try{e=y("fs")}catch(n){t=n.toString()}return{readFile:e?t=>new Promise(((n,r)=>{e.readFile(t,((e,t)=>e?r(e):n(t)))})):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function Mne(){let e=n.g.Canvas||n.g.HTMLCanvasElement,t=n.g.Image||n.g.HTMLImageElement,r=n.g.Video||n.g.HTMLVideoElement,a=()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},s=()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},i=()=>{if(r)return new r;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},o=n.g.fetch,l=Dne();return{Canvas:e||class{},CanvasRenderingContext2D:n.g.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:n.g.ImageData||class{},Video:n.g.HTMLVideoElement||class{},createCanvasElement:a,createImageElement:s,createVideoElement:i,fetch:o,...l}}function One(){return"object"==typeof window&&"undefined"!=typeof document&&"undefined"!=typeof HTMLImageElement&&"undefined"!=typeof HTMLCanvasElement&&"undefined"!=typeof HTMLVideoElement&&"undefined"!=typeof ImageData&&"undefined"!=typeof CanvasRenderingContext2D}function Lne(){if(!Ine)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return Ine}function zne(e){Ine=e}function Pne(){return One()?zne(Rne()):Fne()?zne(Mne()):null}function Bne(e){if(Ine||Pne(),!Ine)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=Ine.Canvas,Image:n=Ine.Image}=e;Ine.Canvas=t,Ine.Image=n,Ine.createCanvasElement=e.createCanvasElement||(()=>new t),Ine.createImageElement=e.createImageElement||(()=>new n),Ine.ImageData=e.ImageData||Ine.ImageData,Ine.Video=e.Video||Ine.Video,Ine.fetch=e.fetch||Ine.fetch,Ine.readFile=e.readFile||Ine.readFile}var Wne={getEnv:Lne,setEnv:zne,initialize:Pne,createBrowserEnv:Rne,createFileSystem:Dne,createNodejsEnv:Mne,monkeyPatch:Bne,isBrowser:One,isNodejs:Fne};function Vne(e){return Wne.isNodejs()||"string"!=typeof e?e:document.getElementById(e)}function Une(e){let{Canvas:t,CanvasRenderingContext2D:n}=Wne.getEnv();if(e instanceof n)return e;let r=Vne(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let a=r.getContext("2d");if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}Pne();var Gne=(e=>(e.TOP_LEFT="TOP_LEFT",e.TOP_RIGHT="TOP_RIGHT",e.BOTTOM_LEFT="BOTTOM_LEFT",e.BOTTOM_RIGHT="BOTTOM_RIGHT",e))(Gne||{}),Hne=class{constructor(e={}){let{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},jne=class{constructor(e,t,n={}){this.text="string"==typeof e?[e]:e instanceof jne?e.text:e,this.anchor=t,this.options=new Hne(n)}measureWidth(e){let{padding:t}=this.options;return this.text.map((t=>e.measureText(t).width)).reduce(((e,t)=>e<t?t:e),0)+2*t}measureHeight(){let{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){let{anchorPosition:n}=this.options,r="BOTTOM_RIGHT"===n||"TOP_RIGHT"===n,a="BOTTOM_LEFT"===n||"BOTTOM_RIGHT"===n,s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,l=a?this.anchor.y-i:this.anchor.y;if(t){let{width:e,height:n}=t,r=Math.max(Math.min(o,e-s),0),a=Math.max(Math.min(l,n-i),0);return{x:r,y:a}}return{x:o,y:l}}draw(e){let t=Vne(e),n=Une(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;let l=this.measureWidth(n),u=this.measureHeight();n.fillStyle=r;let h=this.getUpperLeft(n,t);n.fillRect(h.x,h.y,l,u),n.fillStyle=a,this.text.forEach(((e,t)=>{let r=o+h.x,a=o+h.y+(t+1)*s;n.fillText(e,r,a)}))}},qne=class{constructor(e={}){let{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;let s={anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor};this.drawLabelOptions=new Hne({...s,...a})}},Kne=class{constructor(e,t={}){this.box=new cne(e),this.options=new qne(t)}draw(e){let t=Une(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);let{label:l}=this.options;l&&new jne([l],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function Xne(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{let n=t instanceof gne?t.score:$ne(t)?t.detection.score:void 0,r=t instanceof gne?t.box:$ne(t)?t.detection.box:new cne(t),a=n?`${sne(n)}`:void 0;new Kne(r,{label:a}).draw(e)}))}function Yne(e){let{Image:t,Video:n}=Wne.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function Zne(e){return new Promise(((t,n)=>{function r(e){e.currentTarget&&(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),n(e))}function a(e){e.currentTarget&&(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),t(e))}(e instanceof Wne.getEnv().Canvas||Yne(e))&&t(null),e.addEventListener("load",a),e.addEventListener("error",r)}))}function Jne(e){let{Image:t,Video:n}=Wne.getEnv();return e instanceof t?new Zte(e.naturalWidth,e.naturalHeight):e instanceof n?new Zte(e.videoWidth,e.videoHeight):new Zte(e.width,e.height)}function Qne({width:e,height:t}){let{createCanvasElement:n}=Wne.getEnv(),r=n();return r.width=e,r.height=t,r}function ere(e,t){let{ImageData:n}=Wne.getEnv();if(!(e instanceof n)&&!Yne(e))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:a}=t||Jne(e),s=Qne({width:r,height:a});return e instanceof n?Une(s).putImageData(e,0,0):Une(s).drawImage(e,0,0,r,a),s}async function tre(e,t){let n=t||Wne.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(nne(e)?1:0),i=Bo((()=>e.as3D(r,a,s).toInt()));return await yx.toPixels(i,n),i.dispose(),n}function nre(e){let{Image:t,Canvas:n,Video:r}=Wne.getEnv();return e instanceof t||e instanceof n||e instanceof r}function rre(e,t,n=!1){let{Image:r,Canvas:a}=Wne.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return Qne({width:1,height:1});let s=Jne(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,u=Qne({width:t,height:t}),h=e instanceof a?e:ere(e),p=Math.abs(o-l)/2,d=n&&o<l?p:0,c=n&&l<o?p:0;return h.width>0&&h.height>0&&Une(u).drawImage(h,d,c,o,l),u}var are=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach(((e,t)=>{if(tne(e))return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape);if(nne(e)){let n=e.shape[0];if(1!==n)throw new Error(`NetInput - tf.Tensor4D with batchSize ${n} passed, but not supported in input array`);return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape.slice(1))}let n=e instanceof Wne.getEnv().Canvas?e:ere(e);this._canvases[t]=n,this._inputDimensions[t]=[n.height,n.width,3]}))}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return une(this.batchSize,0,1).map(((e,t)=>this.getReshapedInputDimensions(t)))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if("number"!=typeof this.inputSize)throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");let t=this.getInputWidth(e),n=this.getInputHeight(e);return one({width:t,height:n},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,Bo((()=>{let n=une(this.batchSize,0,1).map((n=>{let r=this.getInput(n);if(r instanceof Ts){let n=nne(r)?r:xp(r);return n=vne(n,t),(n.shape[1]!==e||n.shape[2]!==e)&&(n=xb.resizeBilinear(n,[e,e],!1,!1)),n.as3D(e,e,3)}if(r instanceof Wne.getEnv().Canvas)return yx.fromPixels(rre(r,e,t));throw new Error(`toBatchTensor - at batchIdx ${n}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${r}`)}));return xm(n.map((e=>Co(e,"float32")))).as4D(this.batchSize,e,e,3)}))}};async function sre(e){if(e instanceof are)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=t=>Array.isArray(e)?` at input index ${t}:`:"",r=t.map(Vne);return r.forEach(((e,r)=>{if(!nre(e)&&!tne(e)&&!nne(e))throw"string"==typeof t[r]?new Error(`toNetInput -${n(r)} string passed, but could not resolve HTMLElement for element id ${t[r]}`):new Error(`toNetInput -${n(r)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(nne(e)){let t=e.shape[0];if(1!==t)throw new Error(`toNetInput -${n(r)} tf.Tensor4D with batchSize ${t} passed, but not supported in input array`)}})),await Promise.all(r.map((e=>nre(e)&&Zne(e)))),new are(r,Array.isArray(e))}async function ire(e,t){let{Canvas:n}=Wne.getEnv(),r=e;if(!(e instanceof n)){let t=await sre(e);if(t.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let a=t.getInput(0);r=a instanceof n?a:await tre(a)}let a=Une(r);return t.map((e=>e instanceof gne?e.forSize(r.width,r.height).box.floor():e)).map((e=>e.clipAtImageBorders(r.width,r.height))).map((({x:e,y:t,width:n,height:r})=>{let s=Qne({width:n,height:r});return n>0&&r>0&&Une(s).putImageData(a.getImageData(e,t,n,r),0,0),s}))}async function ore(e,t){if(!tne(e)&&!nne(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(nne(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return Bo((()=>{let[n,r,a]=e.shape.slice(nne(e)?1:0);return t.map((e=>e instanceof gne?e.forSize(r,n).box:e)).map((e=>e.clipAtImageBorders(r,n))).filter((e=>e.width>0&&e.height>0)).map((({x:t,y:s,width:i,height:o})=>Qf(e.as3D(n,r,a),[s,t,0],[o,i,a])))}))}async function lre(e,t){let{fetch:n}=Wne.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}async function ure(e){return(await lre(e)).json()}function hre(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if("/"===e)return{modelBaseUri:"/",manifestUri:`/${n}`};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"";e=e.replace(r,"");let a=e.split("/").filter((e=>e)),s=e.endsWith(".json")?a[a.length-1]:n,i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:"/"===i?`/${s}`:`${i}/${s}`}}async function pre(e,t){let{manifestUri:n,modelBaseUri:r}=hre(e,t),a=await ure(n);return zb.loadWeights(a,r)}var dre=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){let{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){let{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map((({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)})))}getTrainableParams(){return this.getParamList().filter((e=>e.tensor instanceof _s))}getFrozenParams(){return this.getParamList().filter((e=>!(e.tensor instanceof _s)))}variable(){this.getFrozenParams().forEach((({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())}))}freeze(){this.getTrainableParams().forEach((({path:e,tensor:t})=>{let n=fi(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)}))}dispose(e=!0){this.getParamList().forEach((t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()})),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map((({tensor:e})=>Array.from(e.dataSync()))).reduce(((e,t)=>e.concat(t))))}async load(e){e instanceof Float32Array?this.extractWeights(e):await this.loadFromUri(e)}async loadFromUri(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromUri - expected model uri`);let t=await pre(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:t}=Wne.getEnv(),{manifestUri:n,modelBaseUri:r}=hre(e,this.getDefaultModelName()),a=e=>Promise.all(e.map((e=>t(e).then((e=>e.buffer))))),s=zb.weightsLoaderFactory(a),i=JSON.parse((await t(n)).toString()),o=await s(i,r);this.loadFromWeightMap(o)}loadFromWeightMap(e){let{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){let{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let t=e.split("/").reduce(((t,n)=>{if(!t.nextObj.hasOwnProperty(n))throw new Error(`traversePropertyPath - object does not have property ${n}, for path ${e}`);return{obj:t.nextObj,objProp:n,nextObj:t.nextObj[n]}}),{nextObj:this.params}),{obj:n,objProp:r}=t;if(!n||!r||!(n[r]instanceof Ts))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function cre(e,t,n){return Bo((()=>{let r=Pf(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=el(r,t.bias),r}))}function fre(e,t,n=!1){return Bo((()=>{let r=xf(n?el(qu(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):cre(e,t.conv0,[2,2])),a=cre(r,t.conv1,[1,1]),s=xf(el(r,a)),i=cre(s,t.conv2,[1,1]);return xf(el(r,el(a,i)))}))}function mre(e,t,n=!1,r=!0){return Bo((()=>{let a=xf(n?el(qu(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):cre(e,t.conv0,r?[2,2]:[1,1])),s=cre(a,t.conv1,[1,1]),i=xf(el(a,s)),o=cre(i,t.conv2,[1,1]),l=xf(el(a,el(s,o))),u=cre(l,t.conv3,[1,1]);return xf(el(a,el(s,el(o,u))))}))}function gre(e,t,n="same",r=!1){return Bo((()=>{let a=el(qu(e,t.filters,[1,1],n),t.bias);return r?xf(a):a}))}function yre(e,t){Object.keys(e).forEach((n=>{t.some((e=>e.originalPath===n))||e[n].dispose()}))}function bre(e,t){return(n,r,a,s)=>{let i=Em(e(n*r*a*a),[a,a,n,r]),o=Tm(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function xre(e,t){return(n,r,a)=>{let s=Cm(e(n*r),[n,r]),i=Tm(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var wre=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function vre(e,t){return(n,r,a)=>{let s=Em(e(9*n),[3,3,n,1]),i=Em(e(n*r),[1,1,n,r]),o=Tm(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new wre(s,i,o)}}function kre(e){return t=>{let n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new wre(n,r,a)}}function Ire(e,t){return(n,r,a)=>{let s=e[n];if(!Jte(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function Sre(e){let t=e;function n(e){let n=t.slice(0,e);return t=t.slice(e),n}function r(){return t}return{extractWeights:n,getRemainingWeights:r}}function Nre(e,t){let n=bre(e,t),r=vre(e,t);function a(e,t,a,s=!1){let i=s?n(e,t,3,`${a}/conv0`):r(e,t,`${a}/conv0`),o=r(t,t,`${a}/conv1`),l=r(t,t,`${a}/conv2`);return{conv0:i,conv1:o,conv2:l}}function s(e,t,n,s=!1){let{conv0:i,conv1:o,conv2:l}=a(e,t,n,s),u=r(t,t,`${n}/conv3`);return{conv0:i,conv1:o,conv2:l,conv3:u}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:s}}function Tre(e){let t=[],{extractWeights:n,getRemainingWeights:r}=Sre(e),{extractDenseBlock4Params:a}=Nre(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),l=a(128,256,"dense3");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}function Cre(e){return t=>{let n=e(`${t}/filters`,4),r=e(`${t}/bias`,1);return{filters:n,bias:r}}}function _re(e,t){let n=Ire(e,t),r=Cre(n),a=kre(n);function s(e,t=!1){let n=t?r(`${e}/conv0`):a(`${e}/conv0`),s=a(`${e}/conv1`),i=a(`${e}/conv2`);return{conv0:n,conv1:s,conv2:i}}function i(e,t=!1){let n=t?r(`${e}/conv0`):a(`${e}/conv0`),s=a(`${e}/conv1`),i=a(`${e}/conv2`),o=a(`${e}/conv3`);return{conv0:n,conv1:s,conv2:i,conv3:o}}return{extractDenseBlock3Params:s,extractDenseBlock4Params:i}}function Ere(e){let t=[],{extractDenseBlock4Params:n}=_re(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return yre(e,t),{params:r,paramMappings:t}}var $re=class extends dre{constructor(){super("FaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return Bo((()=>{let n=Co(e.toBatchTensor(112,!0),"float32"),r=wne(n,[122.782,117.001,104.298]).div(255),a=mre(r,t.dense0,!0);return a=mre(a,t.dense1),a=mre(a,t.dense2),a=mre(a,t.dense3),a=tu(a,[7,7],[2,2],"valid"),a}))}async forward(e){return this.forwardInput(await sre(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return Ere(e)}extractParams(e){return Tre(e)}};function Are(e,t){return Bo((()=>el(ou(e,t.weights),t.bias)))}function Rre(e,t,n){let r=[],{extractWeights:a,getRemainingWeights:s}=Sre(e),i=xre(a,r)(t,n,"fc");if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}function Fre(e){let t=[],n=Ire(e,t);function r(e){let t=n(`${e}/weights`,2),r=n(`${e}/bias`,1);return{weights:t,bias:r}}let a={fc:r("fc")};return yre(e,t),{params:a,paramMappings:t}}function Dre(e){let t={},n={};return Object.keys(e).forEach((r=>{let a=r.startsWith("fc")?n:t;a[r]=e[r]})),{featureExtractorMap:t,classifierMap:n}}var Mre=class extends dre{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return Bo((()=>{let n=e instanceof are?this.faceFeatureExtractor.forwardInput(e):e;return Are(n.as2D(n.shape[0],-1),t.fc)}))}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return Rre(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=Dre(e);return this.faceFeatureExtractor.loadFromWeightMap(t),Fre(n)}extractParams(e){let t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},Ore=["neutral","happy","sad","angry","fearful","disgusted","surprised"],Lre=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,7!==e.length)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);Ore.forEach(((t,n)=>{this[t]=e[n]}))}asSortedArray(){return Ore.map((e=>({expression:e,probability:this[e]}))).sort(((e,t)=>t.probability-e.probability))}},zre=class extends Mre{constructor(e=new $re){super("FaceExpressionNet",e)}forwardInput(e){return Bo((()=>rm(this.runNet(e))))}async forward(e){return this.forwardInput(await sre(e))}async predictExpressions(e){let t=await sre(e),n=await this.forwardInput(t),r=await Promise.all(Wm(n).map((async e=>{let t=e.dataSync();return e.dispose(),t})));n.dispose();let a=r.map((e=>new Lre(e)));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function Pre(e){return e.expressions instanceof Lre}function Bre(e,t){return{...e,expressions:t}}function Wre(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach((t=>{let a=t instanceof Lre?t:Pre(t)?t.expressions:void 0;if(!a)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let s=a.asSortedArray().filter((e=>e.probability>n)),i=$ne(t)?t.detection.box.bottomLeft:r||new dne(0,0);new jne(s.map((e=>`${e.expression} (${sne(e.probability)})`)),i).draw(e)}))}function Vre(e){return $ne(e)&&e.landmarks instanceof _ne&&e.unshiftedLandmarks instanceof _ne&&e.alignedRect instanceof gne}function Ure(e){let t=e=>180*e/Math.PI,n=(e,t)=>Math.sqrt((e._x-t._x)**2+(e._y-t._y)**2),r={roll:void 0,pitch:void 0,yaw:void 0},a=(e,t,n)=>{let r=Math.floor(e._x-t._x),a=Math.floor(t._x-n._x);return r-a},s=(e,n)=>{let r=Math.hypot(n._x-e._x,n._y-e._y),a=n._y-e._y,s=Math.asin(a/r),i=t(s),o=Math.floor(90-i),l=n._x-e._x<0?-1:1;return o*l},i=(e,r,a)=>{let s=n(e,a),i={_x:(e._x+a._x)/2,_y:(e._y+a._y)/2},o=n(r,i),l=Math.atan(o/s),u=Math.floor(t(l)),h=i._y-r._y<0?-1:1;return u*h};if(!e||!e._positions||68!==e._positions.length)return r;let o=e._positions;return r.roll=s(o[27],o[66]),r.pitch=i(o[14],o[30],o[2]),r.yaw=a(o[14],o[33],o[2]),r}function Gre(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i=new gne(e.detection.score,a.rescale(s.reverse()),s),o=Ure(t);return{...e,landmarks:r,unshiftedLandmarks:t,alignedRect:i,angle:o}}var Hre=class{constructor(e={}){let{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},jre=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new Hre(t)}draw(e){let t=Une(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof Ene&&(t.strokeStyle=s,t.lineWidth=a,Xte(t,this.faceLandmarks.getJawOutline()),Xte(t,this.faceLandmarks.getLeftEyeBrow()),Xte(t,this.faceLandmarks.getRightEyeBrow()),Xte(t,this.faceLandmarks.getNose()),Xte(t,this.faceLandmarks.getLeftEye(),!0),Xte(t,this.faceLandmarks.getRightEye(),!0),Xte(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;let e=e=>{t.beginPath(),t.arc(e.x,e.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(e)}}};function qre(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{let n=t instanceof _ne?t:Vre(t)?t.landmarks:void 0;if(!n)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new jre(n).draw(e)}))}function Kre(e,t){let n=bre(e,t),r=vre(e,t);function a(e,t,a){let s=r(e,t,`${a}/separable_conv0`),i=r(t,t,`${a}/separable_conv1`),o=n(e,t,1,`${a}/expansion_conv`);return{separable_conv0:s,separable_conv1:i,expansion_conv:o}}function s(e,t){let n=r(e,e,`${t}/separable_conv0`),a=r(e,e,`${t}/separable_conv1`),s=r(e,e,`${t}/separable_conv2`);return{separable_conv0:n,separable_conv1:a,separable_conv2:s}}return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:a,extractMainBlockParams:s}}function Xre(e,t){let n=[],{extractWeights:r,getRemainingWeights:a}=Sre(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:l}=Kre(r,n),u=s(3,32,3,"entry_flow/conv_in"),h=o(32,64,"entry_flow/reduction_block_0"),p=o(64,128,"entry_flow/reduction_block_1"),d={conv_in:u,reduction_block_0:h,reduction_block_1:p},c={};une(t,0,1).forEach((e=>{c[`main_block_${e}`]=l(128,`middle_flow/main_block_${e}`)}));let f=o(128,256,"exit_flow/reduction_block"),m=i(256,512,"exit_flow/separable_conv"),g={reduction_block:f,separable_conv:m};if(0!==a().length)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:d,middle_flow:c,exit_flow:g}}}function Yre(e,t){let n=Ire(e,t),r=Cre(n),a=kre(n);function s(e){let t=a(`${e}/separable_conv0`),n=a(`${e}/separable_conv1`),s=r(`${e}/expansion_conv`);return{separable_conv0:t,separable_conv1:n,expansion_conv:s}}function i(e){let t=a(`${e}/separable_conv0`),n=a(`${e}/separable_conv1`),r=a(`${e}/separable_conv2`);return{separable_conv0:t,separable_conv1:n,separable_conv2:r}}return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}}function Zre(e,t){let n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=Yre(e,n),o=r("entry_flow/conv_in"),l=s("entry_flow/reduction_block_0"),u=s("entry_flow/reduction_block_1"),h={conv_in:o,reduction_block_0:l,reduction_block_1:u},p={};une(t,0,1).forEach((e=>{p[`main_block_${e}`]=i(`middle_flow/main_block_${e}`)}));let d=s("exit_flow/reduction_block"),c=a("exit_flow/separable_conv"),f={reduction_block:d,separable_conv:c};return yre(e,n),{params:{entry_flow:h,middle_flow:p,exit_flow:f},paramMappings:n}}function Jre(e,t,n){return el(qu(e,t.filters,n,"same"),t.bias)}function Qre(e,t,n=!0){let r=n?xf(e):e;return r=cre(r,t.separable_conv0,[1,1]),r=cre(xf(r),t.separable_conv1,[1,1]),r=Fd(r,[3,3],[2,2],"same"),r=el(r,Jre(e,t.expansion_conv,[2,2])),r}function eae(e,t){let n=cre(xf(e),t.separable_conv0,[1,1]);return n=cre(xf(n),t.separable_conv1,[1,1]),n=cre(xf(n),t.separable_conv2,[1,1]),n=el(n,e),n}var tae=class extends dre{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return Bo((()=>{let n=Co(e.toBatchTensor(112,!0),"float32"),r=wne(n,[122.782,117.001,104.298]).div(255),a=xf(Jre(r,t.entry_flow.conv_in,[2,2]));return a=Qre(a,t.entry_flow.reduction_block_0,!1),a=Qre(a,t.entry_flow.reduction_block_1),une(this._numMainBlocks,0,1).forEach((e=>{a=eae(a,t.middle_flow[`main_block_${e}`])})),a=Qre(a,t.exit_flow.reduction_block),a=xf(cre(a,t.exit_flow.separable_conv,[1,1])),a}))}async forward(e){return this.forwardInput(await sre(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return Zre(e,this._numMainBlocks)}extractParams(e){return Xre(e,this._numMainBlocks)}};function nae(e){let t=[],{extractWeights:n,getRemainingWeights:r}=Sre(e),a=xre(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}function rae(e){let t=[],n=Ire(e,t);function r(e){let t=n(`${e}/weights`,2),r=n(`${e}/bias`,1);return{weights:t,bias:r}}let a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return yre(e,t),{params:a,paramMappings:t}}var aae=(e=>(e.FEMALE="female",e.MALE="male",e))(aae||{}),sae=class extends dre{constructor(e=new tae(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return Bo((()=>{let n=e instanceof are?this.faceFeatureExtractor.forwardInput(e):e,r=tu(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1),a=Are(r,t.fc.age).as1D(),s=Are(r,t.fc.gender);return{age:a,gender:s}}))}forwardInput(e){return Bo((()=>{let{age:t,gender:n}=this.runNet(e);return{age:t,gender:rm(n)}}))}async forward(e){return this.forwardInput(await sre(e))}async predictAgeAndGender(e){let t=await sre(e),n=await this.forwardInput(t),r=Wm(n.age),a=Wm(n.gender),s=r.map(((e,t)=>({ageTensor:e,genderTensor:a[t]}))),i=await Promise.all(s.map((async({ageTensor:e,genderTensor:t})=>{let n=e.dataSync()[0],r=t.dataSync()[0],a=r>.5,s=a?"male":"female",i=a?r:1-r;return e.dispose(),t.dispose(),{age:n,gender:s,genderProbability:i}})));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return nae(e)}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=Dre(e);return this.faceFeatureExtractor.loadFromWeightMap(t),rae(n)}extractParams(e){let t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}},iae=class extends Mre{postProcess(e,t,n){let r=n.map((({width:e,height:n})=>{let r=t/Math.max(n,e);return{width:e*r,height:n*r}})),a=r.length;return Bo((()=>{let n=(e,t)=>xm([Mu([68],e,"float32"),Mu([68],t,"float32")],1).as2D(1,136).as1D(),s=(e,t)=>{let{width:n,height:a}=r[e];return t(n,a)?Math.abs(n-a)/2:0},i=e=>s(e,((e,t)=>e<t)),o=e=>s(e,((e,t)=>t<e));return e.mul(Mu([a,136],t,"float32")).sub(xm(Array.from(Array(a),((e,t)=>n(i(t),o(t)))))).div(xm(Array.from(Array(a),((e,t)=>n(r[t].width,r[t].height)))))}))}forwardInput(e){return Bo((()=>{let t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map((([e,t])=>({height:e,width:t}))))}))}async forward(e){return this.forwardInput(await sre(e))}async detectLandmarks(e){let t=await sre(e),n=Bo((()=>Wm(this.forwardInput(t)))),r=await Promise.all(n.map((async(e,n)=>{let r=Array.from(e.dataSync()),a=r.filter(((e,t)=>ane(t))),s=r.filter(((e,t)=>!ane(t)));return new Ene(Array(68).fill(0).map(((e,t)=>new dne(a[t],s[t]))),{height:t.getInputHeight(n),width:t.getInputWidth(n)})})));return n.forEach((e=>e.dispose())),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},oae=class extends iae{constructor(e=new $re){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};function lae(e){let t=[],{extractDenseBlock3Params:n}=_re(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return yre(e,t),{params:r,paramMappings:t}}function uae(e){let t=[],{extractWeights:n,getRemainingWeights:r}=Sre(e),{extractDenseBlock3Params:a}=Nre(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}var hae=class extends dre{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return Bo((()=>{let n=Co(e.toBatchTensor(112,!0),"float32"),r=wne(n,[122.782,117.001,104.298]).div(255),a=fre(r,t.dense0,!0);return a=fre(a,t.dense1),a=fre(a,t.dense2),a=tu(a,[14,14],[2,2],"valid"),a}))}async forward(e){return this.forwardInput(await sre(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return lae(e)}extractParams(e){return uae(e)}},pae=class extends iae{constructor(e=new hae){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}};function dae(e,t){return el(il(e,t.weights),t.biases)}function cae(e,t,n,r,a="same"){let{filters:s,bias:i}=t.conv,o=qu(e,s,n,a);return o=el(o,i),o=dae(o,t.scale),r?xf(o):o}function fae(e,t){return cae(e,t,[1,1],!0)}function mae(e,t){return cae(e,t,[1,1],!1)}function gae(e,t){return cae(e,t,[2,2],!0,"valid")}function yae(e,t){function n(t,n,r){let a=e(t),s=a.length/(n*r*r);if(rne(s))throw new Error(`depth has to be an integer: ${s}, weights.length: ${a.length}, numFilters: ${n}, filterSize: ${r}`);return Bo((()=>Ym(Em(a,[n,s,r,r]),[2,3,1,0])))}function r(r,a,s,i){let o=n(r,a,s),l=Tm(e(a));return t.push({paramPath:`${i}/filters`},{paramPath:`${i}/bias`}),{filters:o,bias:l}}function a(n,r){let a=Tm(e(n)),s=Tm(e(n));return t.push({paramPath:`${r}/weights`},{paramPath:`${r}/biases`}),{weights:a,biases:s}}function s(e,t,n,s){let i=r(e,t,n,`${s}/conv`),o=a(t,`${s}/scale`);return{conv:i,scale:o}}function i(e,t,n,r,a=!1){let i=s((a?.5:1)*e,t,n,`${r}/conv1`),o=s(e,t,n,`${r}/conv2`);return{conv1:i,conv2:o}}return{extractConvLayerParams:s,extractResidualLayerParams:i}}function bae(e){let{extractWeights:t,getRemainingWeights:n}=Sre(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=yae(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),u=s(9216,32,3,"conv32_3"),h=s(36864,64,3,"conv64_down",!0),p=s(36864,64,3,"conv64_1"),d=s(36864,64,3,"conv64_2"),c=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),w=s(589824,256,3,"conv256_down_out"),v=Bo((()=>Ym(Cm(t(32768),[128,256]),[1,0])));if(r.push({paramPath:"fc"}),0!==n().length)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:u,conv64_down:h,conv64_1:p,conv64_2:d,conv64_3:c,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:w,fc:v},paramMappings:r}}function xae(e,t){let n=Ire(e,t);function r(e){let t=n(`${e}/scale/weights`,1),r=n(`${e}/scale/biases`,1);return{weights:t,biases:r}}function a(e){let t=n(`${e}/conv/filters`,4),a=n(`${e}/conv/bias`,1),s=r(e);return{conv:{filters:t,bias:a},scale:s}}function s(e){return{conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`)}}return{extractConvLayerParams:a,extractResidualLayerParams:s}}function wae(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=xae(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),l=r("conv64_down"),u=r("conv64_1"),h=r("conv64_2"),p=r("conv64_3"),d=r("conv128_down"),c=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!ene(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);let w={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:u,conv64_2:h,conv64_3:p,conv128_down:d,conv128_1:c,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return yre(e,t),{params:w,paramMappings:t}}function vae(e,t){let n=fae(e,t.conv1);return n=mae(n,t.conv2),n=el(n,e),n=xf(n),n}function kae(e,t){let n=gae(e,t.conv1);n=mae(n,t.conv2);let r=tu(e,2,2,"valid"),a=Vd(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let e=[...n.shape];e[1]=1;let t=Vd(e);n=su([n,t],1);let r=[...n.shape];r[2]=1;let a=Vd(r);n=su([n,a],2)}return r=s?su([r,a],3):r,n=el(r,n),n=xf(n),n}var Iae=class extends dre{constructor(){super("FaceRecognitionNet")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return Bo((()=>{let n=Co(e.toBatchTensor(150,!0),"float32"),r=wne(n,[122.782,117.001,104.298]).div(255),a=gae(r,t.conv32_down);a=Fd(a,3,2,"valid"),a=vae(a,t.conv32_1),a=vae(a,t.conv32_2),a=vae(a,t.conv32_3),a=kae(a,t.conv64_down),a=vae(a,t.conv64_1),a=vae(a,t.conv64_2),a=vae(a,t.conv64_3),a=kae(a,t.conv128_down),a=vae(a,t.conv128_1),a=vae(a,t.conv128_2),a=kae(a,t.conv256_down),a=vae(a,t.conv256_1),a=vae(a,t.conv256_2),a=kae(a,t.conv256_down_out);let s=a.mean([1,2]);return ou(s,t.fc)}))}async forward(e){return this.forwardInput(await sre(e))}async computeFaceDescriptor(e){var t;if(null!=(t=null==e?void 0:e.shape)&&t.some((e=>e<=0)))return new Float32Array(128);let n=await sre(e),r=Bo((()=>Wm(this.forwardInput(n)))),a=await Promise.all(r.map((e=>e.data())));return r.forEach((e=>e.dispose())),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return wae(e)}extractParams(e){return bae(e)}};function Sae(e,t){return{...e,descriptor:t}}function Nae(e,t){return{...e,age:t}}function Tae(e,t,n){return{...e,gender:t,genderProbability:n}}function Cae(e,t){function n(n,r){let a=Em(e(9*n),[3,3,n,1]),s=Tm(e(n)),i=Tm(e(n)),o=Tm(e(n)),l=Tm(e(n));return t.push({paramPath:`${r}/filters`},{paramPath:`${r}/batch_norm_scale`},{paramPath:`${r}/batch_norm_offset`},{paramPath:`${r}/batch_norm_mean`},{paramPath:`${r}/batch_norm_variance`}),{filters:a,batch_norm_scale:s,batch_norm_offset:i,batch_norm_mean:o,batch_norm_variance:l}}function r(n,r,a,s,i){let o=Em(e(n*r*a*a),[a,a,n,r]),l=Tm(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/${i?"batch_norm_offset":"bias"}`}),{filters:o,bias:l}}function a(e,t,n,a){let{filters:s,bias:i}=r(e,t,n,a,!0);return{filters:s,batch_norm_offset:i}}function s(e,t,r){let s=n(e,`${r}/depthwise_conv`),i=a(e,t,1,`${r}/pointwise_conv`);return{depthwise_conv:s,pointwise_conv:i}}function i(){let e=a(3,32,3,"mobilenetv1/conv_0"),t=s(32,64,"mobilenetv1/conv_1"),n=s(64,128,"mobilenetv1/conv_2"),r=s(128,128,"mobilenetv1/conv_3"),i=s(128,256,"mobilenetv1/conv_4"),o=s(256,256,"mobilenetv1/conv_5"),l=s(256,512,"mobilenetv1/conv_6"),u=s(512,512,"mobilenetv1/conv_7"),h=s(512,512,"mobilenetv1/conv_8"),p=s(512,512,"mobilenetv1/conv_9"),d=s(512,512,"mobilenetv1/conv_10"),c=s(512,512,"mobilenetv1/conv_11"),f=s(512,1024,"mobilenetv1/conv_12"),m=s(1024,1024,"mobilenetv1/conv_13");return{conv_0:e,conv_1:t,conv_2:n,conv_3:r,conv_4:i,conv_5:o,conv_6:l,conv_7:u,conv_8:h,conv_9:p,conv_10:d,conv_11:c,conv_12:f,conv_13:m}}function o(){let e=a(1024,256,1,"prediction_layer/conv_0"),t=a(256,512,3,"prediction_layer/conv_1"),n=a(512,128,1,"prediction_layer/conv_2"),s=a(128,256,3,"prediction_layer/conv_3"),i=a(256,128,1,"prediction_layer/conv_4"),o=a(128,256,3,"prediction_layer/conv_5"),l=a(256,64,1,"prediction_layer/conv_6"),u=a(64,128,3,"prediction_layer/conv_7"),h=r(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),p=r(512,9,1,"prediction_layer/box_predictor_0/class_predictor"),d=r(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),c=r(1024,18,1,"prediction_layer/box_predictor_1/class_predictor"),f=r(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),m=r(512,18,1,"prediction_layer/box_predictor_2/class_predictor"),g=r(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),y=r(256,18,1,"prediction_layer/box_predictor_3/class_predictor"),b=r(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),x=r(256,18,1,"prediction_layer/box_predictor_4/class_predictor"),w=r(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),v=r(128,18,1,"prediction_layer/box_predictor_5/class_predictor");return{conv_0:e,conv_1:t,conv_2:n,conv_3:s,conv_4:i,conv_5:o,conv_6:l,conv_7:u,box_predictor_0:{box_encoding_predictor:h,class_predictor:p},box_predictor_1:{box_encoding_predictor:d,class_predictor:c},box_predictor_2:{box_encoding_predictor:f,class_predictor:m},box_predictor_3:{box_encoding_predictor:g,class_predictor:y},box_predictor_4:{box_encoding_predictor:b,class_predictor:x},box_predictor_5:{box_encoding_predictor:w,class_predictor:v}}}return{extractMobilenetV1Params:i,extractPredictionLayerParams:o}}function _ae(e){let t=[],{extractWeights:n,getRemainingWeights:r}=Sre(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=Cae(n,t),i=a(),o=s(),l={extra_dim:_m(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:l},paramMappings:t}}function Eae(e,t){let n=Ire(e,t);function r(e,t,r){let a=n(`${e}/Conv2d_${t}_pointwise/weights`,4,`${r}/filters`),s=n(`${e}/Conv2d_${t}_pointwise/convolution_bn_offset`,1,`${r}/batch_norm_offset`);return{filters:a,batch_norm_offset:s}}function a(e){let t=`mobilenetv1/conv_${e}`,a=`MobilenetV1/Conv2d_${e}_depthwise`,s=`${t}/depthwise_conv`,i=`${t}/pointwise_conv`,o=n(`${a}/depthwise_weights`,4,`${s}/filters`),l=n(`${a}/BatchNorm/gamma`,1,`${s}/batch_norm_scale`),u=n(`${a}/BatchNorm/beta`,1,`${s}/batch_norm_offset`),h=n(`${a}/BatchNorm/moving_mean`,1,`${s}/batch_norm_mean`),p=n(`${a}/BatchNorm/moving_variance`,1,`${s}/batch_norm_variance`);return{depthwise_conv:{filters:o,batch_norm_scale:l,batch_norm_offset:u,batch_norm_mean:h,batch_norm_variance:p},pointwise_conv:r("MobilenetV1",e,i)}}function s(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}}function i(e,t){let r=n(`${e}/weights`,4,`${t}/filters`),a=n(`${e}/biases`,1,`${t}/bias`);return{filters:r,bias:a}}function o(e){let t=i(`Prediction/BoxPredictor_${e}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${e}/box_encoding_predictor`),n=i(`Prediction/BoxPredictor_${e}/ClassPredictor`,`prediction_layer/box_predictor_${e}/class_predictor`);return{box_encoding_predictor:t,class_predictor:n}}function l(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:o(0),box_predictor_1:o(1),box_predictor_2:o(2),box_predictor_3:o(3),box_predictor_4:o(4),box_predictor_5:o(5)}}return{extractMobilenetV1Params:s,extractPredictionLayerParams:l}}function $ae(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=Eae(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!tne(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);let s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return yre(e,t),{params:s,paramMappings:t}}function Aae(e,t,n){return Bo((()=>{let r=qu(e,t.filters,n,"same");return r=el(r,t.batch_norm_offset),Lu(r,0,6)}))}var Rae=.0010000000474974513;function Fae(e,t,n){return Bo((()=>{let r=xh(e,t.filters,n,"same");return r=wu(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,Rae),Lu(r,0,6)}))}function Dae(e){return[2,4,6,12].some((t=>t===e))?[2,2]:[1,1]}function Mae(e,t){return Bo((()=>{let n,r=Aae(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach(((e,t)=>{let a=t+1,s=Dae(a);r=Fae(r,e.depthwise_conv,s),r=Aae(r,e.pointwise_conv,[1,1]),11===a&&(n=r)})),null===n)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}}))}function Oae(e,t,n){let r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),l=Math.min(r[n][0],r[n][2]),u=Math.min(r[n][1],r[n][3]),h=Math.max(r[n][0],r[n][2]),p=Math.max(r[n][1],r[n][3]),d=(i-a)*(o-s),c=(h-l)*(p-u);if(d<=0||c<=0)return 0;let f=Math.max(a,l),m=Math.max(s,u),g=Math.min(i,h),y=Math.min(o,p),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(d+c-b)}function Lae(e,t,n,r,a){let s=e.shape[0],i=Math.min(n,s),o=t.map(((e,t)=>({score:e,boxIndex:t}))).filter((e=>e.score>a)).sort(((e,t)=>t.score-e.score)),l=e=>e<=r?1:0,u=[];return o.forEach((t=>{if(u.length>=i)return;let n=t.score;for(let r=u.length-1;r>=0;--r){let n=Oae(e,t.boxIndex,u[r]);if(0!==n&&(t.score*=l(n),t.score<=a))break}n===t.score&&u.push(t.boxIndex)})),u}function zae(e){let t=Wm(Ym(e,[1,0])),n=[md(t[2],t[0]),md(t[3],t[1])],r=[el(t[0],al(n[0],2)),el(t[1],al(n[1],2))];return{sizes:n,centers:r}}function Pae(e,t){let{sizes:n,centers:r}=zae(e),a=Wm(Ym(t,[1,0])),s=al(il(yp(al(a[2],5)),n[0]),2),i=el(il(al(a[0],10),n[0]),r[0]),o=al(il(yp(al(a[3],5)),n[1]),2),l=el(il(al(a[1],10),n[1]),r[1]);return Ym(xm([md(i,s),md(l,o),el(i,s),el(l,o)]),[1,0])}function Bae(e,t,n){return Bo((()=>{let r=e.shape[0],a=Pae(Ql(Ip(n.extra_dim,[r,1,1]),[-1,4]),Ql(e,[-1,4]));a=Ql(a,[r,a.shape[0]/r,4]);let s=uu(pu(t,[0,0,1],[-1,-1,-1])),i=pu(s,[0,0,0],[-1,-1,1]);i=Ql(i,[r,i.shape[1]]);let o=Wm(a),l=Wm(i);return{boxes:o,scores:l}}))}function Wae(e,t){return Bo((()=>{let n=e.shape[0],r=Ql(gre(e,t.box_encoding_predictor),[n,-1,1,4]),a=Ql(gre(e,t.class_predictor),[n,-1,3]);return{boxPredictionEncoding:r,classPrediction:a}}))}function Vae(e,t,n){return Bo((()=>{let r=Aae(e,n.conv_0,[1,1]),a=Aae(r,n.conv_1,[2,2]),s=Aae(a,n.conv_2,[1,1]),i=Aae(s,n.conv_3,[2,2]),o=Aae(i,n.conv_4,[1,1]),l=Aae(o,n.conv_5,[2,2]),u=Aae(l,n.conv_6,[1,1]),h=Aae(u,n.conv_7,[2,2]),p=Wae(t,n.box_predictor_0),d=Wae(e,n.box_predictor_1),c=Wae(a,n.box_predictor_2),f=Wae(i,n.box_predictor_3),m=Wae(l,n.box_predictor_4),g=Wae(h,n.box_predictor_5),y=su([p.boxPredictionEncoding,d.boxPredictionEncoding,c.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),b=su([p.classPrediction,d.classPrediction,c.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1);return{boxPredictions:y,classPredictions:b}}))}var Uae=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if("number"!=typeof this._maxResults)throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},Gae=class extends dre{constructor(){super("SsdMobilenetv1")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return Bo((()=>{let n=Co(e.toBatchTensor(512,!1),"float32"),r=md(al(n,127.5),1),a=Mae(r,t.mobilenetv1),{boxPredictions:s,classPredictions:i}=Vae(a.out,a.conv11,t.prediction_layer);return Bae(s,i,t.output_layer)}))}async forward(e){return this.forwardInput(await sre(e))}async locateFaces(e,t={}){let{maxResults:n,minConfidence:r}=new Uae(t),a=await sre(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],l=i[0];for(let y=1;y<s.length;y++)s[y].dispose(),i[y].dispose();let u=Array.from(l.dataSync()),h=Lae(o,u,n,.5,r),p=a.getReshapedInputDimensions(0),d=a.inputSize,c=d/p.width,f=d/p.height,m=o.arraySync(),g=h.map((e=>{let[t,n]=[Math.max(0,m[e][0]),Math.min(1,m[e][2])].map((e=>e*f)),[r,s]=[Math.max(0,m[e][1]),Math.min(1,m[e][3])].map((e=>e*c));return new gne(u[e],new Sne(r,t,s-r,n-t),{height:a.getInputHeight(0),width:a.getInputWidth(0)})}));return o.dispose(),l.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return $ae(e)}extractParams(e){return _ae(e)}};var Hae=.4,jae=[new dne(.738768,.874946),new dne(2.42204,2.65704),new dne(4.30971,7.04493),new dne(10.246,4.59428),new dne(12.6868,11.8741)],qae=[new dne(1.603231,2.094468),new dne(6.041143,7.080126),new dne(2.882459,3.518061),new dne(4.266906,5.178857),new dne(9.041765,10.66308)],Kae=[117.001,114.697,97.404],Xae="tiny_yolov2_model",Yae="tiny_yolov2_separable_conv_model",Zae=e=>"number"==typeof e;function Jae(e){if(!e)throw new Error(`invalid config: ${e}`);if("boolean"!=typeof e.withSeparableConvs)throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!Zae(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every((e=>"string"==typeof e)))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map((e=>e||{})).every((e=>Zae(e.x)&&Zae(e.y))))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(Zae)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}function Qae(e){return Bo((()=>{let t=il(e,ap(.10000000149011612));return el(xf(md(e,t)),t)}))}function ese(e,t){return Bo((()=>{let n=dc(e,[[0,0],[1,1],[1,1],[0,0]]);return n=qu(n,t.conv.filters,[1,1],"valid"),n=md(n,t.bn.sub),n=il(n,t.bn.truediv),n=el(n,t.conv.bias),Qae(n)}))}function tse(e,t){return Bo((()=>{let n=dc(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Pf(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=el(n,t.bias),Qae(n)}))}function nse(e,t){let n=bre(e,t);function r(n,r){let a=Tm(e(n)),s=Tm(e(n));return t.push({paramPath:`${r}/sub`},{paramPath:`${r}/truediv`}),{sub:a,truediv:s}}function a(e,t,a){let s=n(e,t,3,`${a}/conv`),i=r(t,`${a}/bn`);return{conv:s,bn:i}}let s=vre(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}}function rse(e,t,n,r){let a,{extractWeights:s,getRemainingWeights:i}=Sre(e),o=[],{extractConvParams:l,extractConvWithBatchNormParams:u,extractSeparableConvParams:h}=nse(s,o);if(t.withSeparableConvs){let[e,s,i,o,u,p,d,c,f]=r,m=t.isFirstLayerConv2d?l(e,s,3,"conv0"):h(e,s,"conv0"),g=h(s,i,"conv1"),y=h(i,o,"conv2"),b=h(o,u,"conv3"),x=h(u,p,"conv4"),w=h(p,d,"conv5"),v=c?h(d,c,"conv6"):void 0,k=f?h(c,f,"conv7"):void 0,I=l(f||c||d,5*n,1,"conv8");a={conv0:m,conv1:g,conv2:y,conv3:b,conv4:x,conv5:w,conv6:v,conv7:k,conv8:I}}else{let[e,t,s,i,o,h,p,d,c]=r,f=u(e,t,"conv0"),m=u(t,s,"conv1"),g=u(s,i,"conv2"),y=u(i,o,"conv3"),b=u(o,h,"conv4"),x=u(h,p,"conv5"),w=u(p,d,"conv6"),v=u(d,c,"conv7"),k=l(c,5*n,1,"conv8");a={conv0:f,conv1:m,conv2:g,conv3:y,conv4:b,conv5:x,conv6:w,conv7:v,conv8:k}}if(0!==i().length)throw new Error(`weights remaing after extract: ${i().length}`);return{params:a,paramMappings:o}}function ase(e,t){let n=Ire(e,t);function r(e){let t=n(`${e}/sub`,1),r=n(`${e}/truediv`,1);return{sub:t,truediv:r}}function a(e){let t=n(`${e}/filters`,4),r=n(`${e}/bias`,1);return{filters:t,bias:r}}function s(e){let t=a(`${e}/conv`),n=r(`${e}/bn`);return{conv:t,bn:n}}let i=kre(n);return{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}}function sse(e,t){let n,r=[],{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}=ase(e,r);if(t.withSeparableConvs){let e=t.filterSizes&&t.filterSizes.length||9;n={conv0:t.isFirstLayerConv2d?a("conv0"):i("conv0"),conv1:i("conv1"),conv2:i("conv2"),conv3:i("conv3"),conv4:i("conv4"),conv5:i("conv5"),conv6:e>7?i("conv6"):void 0,conv7:e>8?i("conv7"):void 0,conv8:a("conv8")}}else n={conv0:s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:s("conv6"),conv7:s("conv7"),conv8:a("conv8")};return yre(e,r),{params:n,paramMappings:r}}var ise=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,"number"!=typeof this._inputSize||this._inputSize%32!==0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},ose=class extends dre{constructor(e){super("TinyYolov2"),Jae(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=ese(e,t.conv0);return n=Fd(n,[2,2],[2,2],"same"),n=ese(n,t.conv1),n=Fd(n,[2,2],[2,2],"same"),n=ese(n,t.conv2),n=Fd(n,[2,2],[2,2],"same"),n=ese(n,t.conv3),n=Fd(n,[2,2],[2,2],"same"),n=ese(n,t.conv4),n=Fd(n,[2,2],[2,2],"same"),n=ese(n,t.conv5),n=Fd(n,[2,2],[1,1],"same"),n=ese(n,t.conv6),n=ese(n,t.conv7),gre(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?Qae(gre(e,t.conv0,"valid",!1)):tse(e,t.conv0);return n=Fd(n,[2,2],[2,2],"same"),n=tse(n,t.conv1),n=Fd(n,[2,2],[2,2],"same"),n=tse(n,t.conv2),n=Fd(n,[2,2],[2,2],"same"),n=tse(n,t.conv3),n=Fd(n,[2,2],[2,2],"same"),n=tse(n,t.conv4),n=Fd(n,[2,2],[2,2],"same"),n=tse(n,t.conv5),n=Fd(n,[2,2],[1,1],"same"),n=t.conv6?tse(n,t.conv6):n,n=t.conv7?tse(n,t.conv7):n,gre(n,t.conv8,"valid",!1)}forwardInput(e,t){let{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return Bo((()=>{let r=Co(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?wne(r,this.config.meanRgb):r,r=r.div(255),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)}))}async forward(e,t){return this.forwardInput(await sre(e),t)}async detect(e,t={}){let{inputSize:n,scoreThreshold:r}=new ise(t),a=await sre(e),s=await this.forwardInput(a,n),i=Bo((()=>Wm(s)[0].expandDims())),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},l=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();let u=l.map((e=>e.box)),h=l.map((e=>e.score)),p=l.map((e=>e.classScore)),d=l.map((e=>this.config.classes[e.label]));return xne(u.map((e=>e.rescale(n))),h,this.config.iouThreshold,!0).map((e=>new mne(h[e],p[e],d[e],u[e],o)))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return sse(e,this.config)}extractParams(e){let t=this.config.filterSizes||ose.DEFAULT_FILTER_SIZES,n=t?t.length:void 0;if(7!==n&&8!==n&&9!==n)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${n} filterSizes in config`);return rse(e,this.config,this.boxEncodingSize,t)}async extractBoxes(e,t,n){let{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,l=e.shape[1],u=this.config.anchors.length,[h,p,d]=Bo((()=>{let t=e.reshape([l,l,u,this.boxEncodingSize]),n=t.slice([0,0,0,0],[l,l,u,4]),r=t.slice([0,0,0,4],[l,l,u,1]),a=this.withClassScores?rm(t.slice([0,0,0,5],[l,l,u,this.config.classes.length]),3):ap(0);return[n,r,a]})),c=[],f=await p.array(),m=await h.array();for(let g=0;g<l;g++)for(let e=0;e<l;e++)for(let t=0;t<u;t++){let r=kne(f[g][e][t][0]);if(!n||r>n){let n=(e+kne(m[g][e][t][0]))/l*i,a=(g+kne(m[g][e][t][1]))/l*o,s=Math.exp(m[g][e][t][2])*this.config.anchors[t].x/l*i,u=Math.exp(m[g][e][t][3])*this.config.anchors[t].y/l*o,h=n-s/2,p=a-u/2,f={row:g,col:e,anchor:t},{classScore:y,label:b}=this.withClassScores?await this.extractPredictedClass(d,f):{classScore:1,label:0};c.push({box:new fne(h,p,h+s,p+u),score:r,classScore:r*y,label:b,...f})}}return h.dispose(),p.dispose(),d.dispose(),c}async extractPredictedClass(e,t){let{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map(((e,t)=>s[n][r][a][t])).map(((e,t)=>({classScore:e,label:t}))).reduce(((e,t)=>e.classScore>t.classScore?e:t))}},lse=ose;lse.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var use=class extends lse{constructor(e=!0){let t={withSeparableConvs:e,iouThreshold:Hae,classes:["face"],...e?{anchors:qae,meanRgb:Kae}:{anchors:jae,withClassScores:!0}};super(t)}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new gne(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return this.withSeparableConvs?Yae:Xae}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}};var hse=class extends ise{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},pse=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function dse(e,t,n,r,a=(({alignedRect:e})=>e)){let s=e.map((e=>Vre(e)?a(e):e.detection)),i=r||(t instanceof Ts?await ore(t,s):await ire(t,s)),o=await n(i);return i.forEach((e=>e instanceof Ts&&e.dispose())),o}async function cse(e,t,n,r,a){return dse([e],t,(async e=>n(e[0])),r,a)}var fse=.4,mse=[new dne(1.603231,2.094468),new dne(6.041143,7.080126),new dne(2.882459,3.518061),new dne(4.266906,5.178857),new dne(9.041765,10.66308)],gse=[117.001,114.697,97.404],yse=class extends lse{constructor(){let e={withSeparableConvs:!0,iouThreshold:fse,classes:["face"],anchors:mse,meanRgb:gse,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]};super(e)}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new gne(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},bse={ssdMobilenetv1:new Gae,tinyFaceDetector:new yse,tinyYolov2:new use,faceLandmark68Net:new oae,faceLandmark68TinyNet:new pae,faceRecognitionNet:new Iae,faceExpressionNet:new zre,ageGenderNet:new sae},xse=class extends pse{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},wse=class extends xse{async run(){let e=await this.parentTask,t=await dse(e,this.input,(async e=>Promise.all(e.map((e=>bse.faceExpressionNet.predictExpressions(e))))),this.extractedFaces);return e.map(((e,n)=>Bre(e,t[n])))}withAgeAndGender(){return new Nse(this,this.input)}},vse=class extends xse{async run(){let e=await this.parentTask;if(!e)return;let t=await cse(e,this.input,(e=>bse.faceExpressionNet.predictExpressions(e)),this.extractedFaces);return Bre(e,t)}withAgeAndGender(){return new Tse(this,this.input)}},kse=class extends wse{withAgeAndGender(){return new Cse(this,this.input)}withFaceDescriptors(){return new $se(this,this.input)}},Ise=class extends vse{withAgeAndGender(){return new _se(this,this.input)}withFaceDescriptor(){return new Ase(this,this.input)}},Sse=class extends pse{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},Nse=class extends Sse{async run(){let e=await this.parentTask,t=await dse(e,this.input,(async e=>Promise.all(e.map((e=>bse.ageGenderNet.predictAgeAndGender(e))))),this.extractedFaces);return e.map(((e,n)=>{let{age:r,gender:a,genderProbability:s}=t[n];return Nae(Tae(e,a,s),r)}))}withFaceExpressions(){return new wse(this,this.input)}},Tse=class extends Sse{async run(){let e=await this.parentTask;if(!e)return;let{age:t,gender:n,genderProbability:r}=await cse(e,this.input,(e=>bse.ageGenderNet.predictAgeAndGender(e)),this.extractedFaces);return Nae(Tae(e,n,r),t)}withFaceExpressions(){return new vse(this,this.input)}},Cse=class extends Nse{withFaceExpressions(){return new kse(this,this.input)}withFaceDescriptors(){return new $se(this,this.input)}},_se=class extends Tse{withFaceExpressions(){return new Ise(this,this.input)}withFaceDescriptor(){return new Ase(this,this.input)}},Ese=class extends pse{constructor(e,t){super(),this.parentTask=e,this.input=t}},$se=class extends Ese{async run(){let e=await this.parentTask;return(await dse(e,this.input,(e=>Promise.all(e.map((e=>bse.faceRecognitionNet.computeFaceDescriptor(e))))),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0})))).map(((t,n)=>Sae(e[n],t)))}withFaceExpressions(){return new kse(this,this.input)}withAgeAndGender(){return new Cse(this,this.input)}},Ase=class extends Ese{async run(){let e=await this.parentTask;if(!e)return;let t=await cse(e,this.input,(e=>bse.faceRecognitionNet.computeFaceDescriptor(e)),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0})));return Sae(e,t)}withFaceExpressions(){return new Ise(this,this.input)}withAgeAndGender(){return new _se(this,this.input)}},Rse=class extends pse{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?bse.faceLandmark68TinyNet:bse.faceLandmark68Net}},Fse=class extends Rse{async run(){let e=await this.parentTask,t=e.map((e=>e.detection)),n=this.input instanceof Ts?await ore(this.input,t):await ire(this.input,t),r=await Promise.all(n.map((e=>this.landmarkNet.detectLandmarks(e))));return n.forEach((e=>e instanceof Ts&&e.dispose())),e.filter(((e,t)=>r[t])).map(((e,t)=>Gre(e,r[t])))}withFaceExpressions(){return new kse(this,this.input)}withAgeAndGender(){return new Cse(this,this.input)}withFaceDescriptors(){return new $se(this,this.input)}},Dse=class extends Rse{async run(){let e=await this.parentTask;if(!e)return;let{detection:t}=e,n=this.input instanceof Ts?await ore(this.input,[t]):await ire(this.input,[t]),r=await this.landmarkNet.detectLandmarks(n[0]);return n.forEach((e=>e instanceof Ts&&e.dispose())),Gre(e,r)}withFaceExpressions(){return new Ise(this,this.input)}withAgeAndGender(){return new _se(this,this.input)}withFaceDescriptor(){return new Ase(this,this.input)}},Mse=class extends pse{constructor(e,t=new Uae){super(),this.input=e,this.options=t}},Ose=class extends Mse{async run(){let e,{input:t,options:n}=this;if(n instanceof hse)e=bse.tinyFaceDetector.locateFaces(t,n);else if(n instanceof Uae)e=bse.ssdMobilenetv1.locateFaces(t,n);else{if(!(n instanceof ise))throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");e=bse.tinyYolov2.locateFaces(t,n)}return e}runAndExtendWithFaceDetections(){return new Promise(((e,t)=>{this.run().then((t=>e(t.map((e=>Ane({},e)))))).catch((e=>t(e)))}))}withFaceLandmarks(e=!1){return new Fse(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new wse(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new Nse(this.runAndExtendWithFaceDetections(),this.input)}},Lse=class extends Mse{async run(){let e=await new Ose(this.input,this.options),t=e[0];return e.forEach((e=>{e.score>t.score&&(t=e)})),t}runAndExtendWithFaceDetection(){return new Promise((async e=>{let t=await this.run();e(t?Ane({},t):void 0)}))}withFaceLandmarks(e=!1){return new Dse(this.runAndExtendWithFaceDetection(),this.input,e)}withFaceExpressions(){return new vse(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new Tse(this.runAndExtendWithFaceDetection(),this.input)}};function zse(e,t=new Uae){return new Lse(e,t)}var Pse={name:"LiveDetectPage",data(){return{videoStream:null,tipsText:"Initializing, please wait",hasFace:!1,video:null,detectEnable:!1,gestureEnable:!1,detectOpt:null,gestureArray:["请正对相机镜头","请向左转头","请向右转头","请张张嘴"],curGesture:0,imgSrc:""}},mounted(){this.video=this.$refs.video,this.video.setAttribute("playsinline",!0),this.video.onloadedmetadata=this.video.play,this.loadFaceModels()},beforeDestroy(){this.detectEnable=!1,this.closeCamera()},methods:{cutPicture(){var e=document.querySelector("video");let t=document.getElementById("myCanvas");var n=t.getContext("2d");n.drawImage(e,0,0,343,200);var r=t.toDataURL("image/jpeg");this.imgSrc=r},onVideoPlay(){this.detectEnable||(this.gestureEnable=!0,this.detectEnable=!0,this.detectOpt=new hse({inputSize:128}),setTimeout((()=>{this.detectOneFrame(),this._dismissLoading()}),800))},onGestureFinish(){this.cutPicture(),this.detectEnable=!1,this.closeCamera()},onGestureDetect(e){e==this.curGesture&&(3==e?this.onGestureFinish():(this.gestureEnable=!1,this.curGesture+=1,setTimeout((()=>{this.gestureEnable=!0}),1e3)))},checkFaceGesture(e){if(!this.gestureEnable)return;0==this.curGesture&&(this.curGesture=1);let t=e.relativePositions,n=t[12].x-t[54].x,r=t[48].x-t[4].x,a=t[66].y-t[62].y,s=t[57].y-t[66].y,i=n/(r+1e-5);i<.3?this.onGestureDetect(1):i>3?this.onGestureDetect(2):a>1.5*s&&this.onGestureDetect(3)},parseDetectResult(e){e?(this.hasFace=!0,this.tipsText="检测到人脸了"+e.detection.score.toFixed(2),this.checkFaceGesture(e.landmarks)):(this.hasFace=!1,this.tipsText="没有人脸哦")},async detectOneFrame(){if(this.detectEnable){let e=await zse(this.video,this.detectOpt).withFaceLandmarks(!0);this.parseDetectResult(e),requestAnimationFrame(this.detectOneFrame)}},loadFaceModels(){this._showLoading(),Promise.all([bse.tinyFaceDetector.loadFromUri("models"),bse.faceLandmark68TinyNet.loadFromUri("models")]).then((()=>{this._dismissLoading(),x.setBackend("webgl"),this.openCamera()})),this._dismissLoading()},closeCamera(){this.videoStream&&(this.videoStream.getTracks().forEach((e=>{e.stop()})),this.videoStream=null,this.video.pause(),this.video.srcObject=null)},openCamera(){navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"user",width:720,height:720}}).then((e=>{this.video.srcObject=e;let t=e.getVideoTracks()[0],n=t.getSettings();this.videoStream=e,this.video.width=n.width,this.video.play()})).catch((e=>{this._showToast(e)}))}}},Bse=n(3744);const Wse=(0,Bse.Z)(Pse,[["render",c],["__scopeId","data-v-7f459516"]]);var Vse=Wse},2406:function(e,t,n){"use strict";n.d(t,{l2:function(){return g}});var r=n(458),a=n(6252),s=n(2931),i=n(3759),o=n(8443),l=n(2639),u=n(5314),h=n(9018),p=n(8217);const[d,c]=(0,i["do"])("nav-bar"),f={title:String,fixed:Boolean,zIndex:o.Or,border:o.J5,leftText:String,rightText:String,leftArrow:Boolean,placeholder:Boolean,safeAreaInsetTop:Boolean,clickable:o.J5};var m=(0,a.aZ)({name:d,props:f,emits:["clickLeft","clickRight"],setup(e,{emit:t,slots:n}){const r=(0,s.iH)(),i=(0,h.J)(r,c),o=e=>t("clickLeft",e),d=e=>t("clickRight",e),f=()=>n.left?n.left():[e.leftArrow&&(0,a.Wm)(p.JO,{class:c("arrow"),name:"arrow-left"},null),e.leftText&&(0,a.Wm)("span",{class:c("text")},[e.leftText])],m=()=>n.right?n.right():(0,a.Wm)("span",{class:c("text")},[e.rightText]),g=()=>{const{title:t,fixed:s,border:i,zIndex:h}=e,p=(0,l.As)(h),g=e.leftArrow||e.leftText||n.left,y=e.rightText||n.right;return(0,a.Wm)("div",{ref:r,style:p,class:[c({fixed:s}),{[u.xe]:i,"van-safe-area-top":e.safeAreaInsetTop}]},[(0,a.Wm)("div",{class:c("content")},[g&&(0,a.Wm)("div",{class:[c("left"),e.clickable?u.e9:""],onClick:o},[f()]),(0,a.Wm)("div",{class:[c("title"),"van-ellipsis"]},[n.title?n.title():t]),y&&(0,a.Wm)("div",{class:[c("right"),e.clickable?u.e9:""],onClick:d},[m()])])])};return()=>e.fixed&&e.placeholder?i(g):g()}});const g=(0,r.n)(m)},6615:function(e,t,n){"use strict";n(1958),n(368),n(6742)}}]);